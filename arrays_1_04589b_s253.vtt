WEBVTT
Kind: captions
Language: en

00:00:04.560 --> 00:00:07.030 align:start position:0%
 
this<00:00:04.880><c> problem</c><00:00:05.279><c> has</c><00:00:05.520><c> given</c><00:00:05.920><c> us</c><00:00:06.160><c> an</c><00:00:06.399><c> array</c>

00:00:07.030 --> 00:00:07.040 align:start position:0%
this problem has given us an array
 

00:00:07.040 --> 00:00:10.310 align:start position:0%
this problem has given us an array
and<00:00:07.279><c> a</c><00:00:07.440><c> number</c><00:00:08.480><c> we</c><00:00:08.639><c> need</c><00:00:08.880><c> to</c><00:00:09.280><c> write</c><00:00:09.519><c> some</c><00:00:09.840><c> code</c>

00:00:10.310 --> 00:00:10.320 align:start position:0%
and a number we need to write some code
 

00:00:10.320 --> 00:00:10.629 align:start position:0%
and a number we need to write some code
to

00:00:10.629 --> 00:00:10.639 align:start position:0%
to
 

00:00:10.639 --> 00:00:13.270 align:start position:0%
to
determine<00:00:11.360><c> whether</c><00:00:11.759><c> the</c><00:00:11.920><c> given</c><00:00:12.320><c> number</c><00:00:12.960><c> is</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
determine whether the given number is
 

00:00:13.280 --> 00:00:16.870 align:start position:0%
determine whether the given number is
included<00:00:13.920><c> in</c><00:00:14.000><c> the</c><00:00:14.920><c> array</c>

00:00:16.870 --> 00:00:16.880 align:start position:0%
included in the array
 

00:00:16.880 --> 00:00:19.990 align:start position:0%
included in the array
one<00:00:17.199><c> simple</c><00:00:17.520><c> way</c><00:00:17.760><c> to</c><00:00:17.920><c> do</c><00:00:18.080><c> this</c><00:00:18.720><c> is</c><00:00:18.960><c> to</c><00:00:19.520><c> iterate</c>

00:00:19.990 --> 00:00:20.000 align:start position:0%
one simple way to do this is to iterate
 

00:00:20.000 --> 00:00:22.630 align:start position:0%
one simple way to do this is to iterate
through<00:00:20.240><c> the</c><00:00:20.400><c> array</c>

00:00:22.630 --> 00:00:22.640 align:start position:0%
through the array
 

00:00:22.640 --> 00:00:27.990 align:start position:0%
through the array
we<00:00:22.800><c> can</c><00:00:23.039><c> use</c><00:00:23.279><c> the</c><00:00:23.519><c> each</c><00:00:23.840><c> method</c><00:00:24.240><c> to</c><00:00:24.400><c> do</c><00:00:24.640><c> this</c>

00:00:27.990 --> 00:00:28.000 align:start position:0%
 
 

00:00:28.000 --> 00:00:30.150 align:start position:0%
 
each<00:00:28.320><c> element</c><00:00:28.720><c> of</c><00:00:28.880><c> the</c><00:00:29.039><c> array</c><00:00:29.439><c> will</c><00:00:29.599><c> be</c><00:00:29.840><c> passed</c>

00:00:30.150 --> 00:00:30.160 align:start position:0%
each element of the array will be passed
 

00:00:30.160 --> 00:00:31.269 align:start position:0%
each element of the array will be passed
to<00:00:30.320><c> the</c><00:00:30.480><c> block</c><00:00:30.880><c> as</c><00:00:31.039><c> an</c>

00:00:31.269 --> 00:00:31.279 align:start position:0%
to the block as an
 

00:00:31.279 --> 00:00:36.069 align:start position:0%
to the block as an
argument<00:00:33.280><c> let's</c><00:00:33.520><c> call</c><00:00:33.760><c> that</c><00:00:34.000><c> parameter</c>

00:00:36.069 --> 00:00:36.079 align:start position:0%
argument let's call that parameter
 

00:00:36.079 --> 00:00:40.069 align:start position:0%
argument let's call that parameter
num

00:00:40.069 --> 00:00:40.079 align:start position:0%
 
 

00:00:40.079 --> 00:00:43.110 align:start position:0%
 
now<00:00:40.399><c> within</c><00:00:40.719><c> the</c><00:00:40.879><c> block</c><00:00:41.440><c> we</c><00:00:41.600><c> want</c><00:00:41.760><c> to</c><00:00:42.000><c> compare</c>

00:00:43.110 --> 00:00:43.120 align:start position:0%
now within the block we want to compare
 

00:00:43.120 --> 00:00:46.150 align:start position:0%
now within the block we want to compare
each<00:00:43.440><c> element</c><00:00:43.920><c> of</c><00:00:44.079><c> this</c><00:00:44.399><c> array</c><00:00:45.600><c> or</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
each element of this array or
 

00:00:46.160 --> 00:00:48.630 align:start position:0%
each element of this array or
num<00:00:47.039><c> to</c><00:00:47.200><c> the</c><00:00:47.280><c> local</c><00:00:47.680><c> variable</c><00:00:48.160><c> number</c><00:00:48.480><c> that</c>

00:00:48.630 --> 00:00:48.640 align:start position:0%
num to the local variable number that
 

00:00:48.640 --> 00:00:50.069 align:start position:0%
num to the local variable number that
was<00:00:48.879><c> initialized</c><00:00:49.520><c> on</c><00:00:49.680><c> line</c>

00:00:50.069 --> 00:00:50.079 align:start position:0%
was initialized on line
 

00:00:50.079 --> 00:00:54.229 align:start position:0%
was initialized on line
two

00:00:54.229 --> 00:00:54.239 align:start position:0%
 
 

00:00:54.239 --> 00:00:58.790 align:start position:0%
 
if<00:00:54.960><c> num</c><00:00:55.360><c> is</c><00:00:55.520><c> equal</c><00:00:55.760><c> to</c><00:00:56.840><c> number</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
if num is equal to number
 

00:00:58.800 --> 00:01:00.709 align:start position:0%
if num is equal to number
then<00:00:59.039><c> we</c><00:00:59.120><c> want</c><00:00:59.359><c> to</c><00:00:59.600><c> output</c><00:01:00.000><c> a</c><00:01:00.079><c> message</c><00:01:00.480><c> to</c><00:01:00.640><c> the</c>

00:01:00.709 --> 00:01:00.719 align:start position:0%
then we want to output a message to the
 

00:01:00.719 --> 00:01:03.670 align:start position:0%
then we want to output a message to the
user

00:01:03.670 --> 00:01:03.680 align:start position:0%
 
 

00:01:03.680 --> 00:01:06.950 align:start position:0%
 
we'll<00:01:03.840><c> use</c><00:01:04.159><c> string</c><00:01:04.479><c> interpolation</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
we'll use string interpolation
 

00:01:06.960 --> 00:01:11.030 align:start position:0%
we'll use string interpolation
to<00:01:07.280><c> output</c><00:01:07.760><c> that</c><00:01:08.000><c> the</c><00:01:08.159><c> number</c><00:01:08.799><c> in</c><00:01:08.960><c> this</c><00:01:09.200><c> case</c><00:01:09.600><c> 3</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
to output that the number in this case 3
 

00:01:11.040 --> 00:01:15.830 align:start position:0%
to output that the number in this case 3
is<00:01:11.200><c> in</c><00:01:11.360><c> the</c><00:01:11.520><c> array</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
 
 

00:01:15.840 --> 00:01:18.070 align:start position:0%
 
so<00:01:16.080><c> the</c><00:01:16.240><c> condition</c><00:01:16.799><c> we've</c><00:01:17.040><c> provided</c><00:01:17.600><c> to</c><00:01:17.759><c> this</c>

00:01:18.070 --> 00:01:18.080 align:start position:0%
so the condition we've provided to this
 

00:01:18.080 --> 00:01:18.950 align:start position:0%
so the condition we've provided to this
if<00:01:18.320><c> statement</c>

00:01:18.950 --> 00:01:18.960 align:start position:0%
if statement
 

00:01:18.960 --> 00:01:22.070 align:start position:0%
if statement
is<00:01:19.200><c> the</c><00:01:19.360><c> comparison</c><00:01:20.080><c> on</c><00:01:20.240><c> line</c><00:01:20.640><c> five</c><00:01:21.680><c> that</c><00:01:21.840><c> will</c>

00:01:22.070 --> 00:01:22.080 align:start position:0%
is the comparison on line five that will
 

00:01:22.080 --> 00:01:23.350 align:start position:0%
is the comparison on line five that will
return<00:01:22.560><c> either</c><00:01:22.960><c> true</c>

00:01:23.350 --> 00:01:23.360 align:start position:0%
return either true
 

00:01:23.360 --> 00:01:26.710 align:start position:0%
return either true
or<00:01:23.600><c> false</c><00:01:24.880><c> if</c><00:01:25.040><c> it</c><00:01:25.200><c> returns</c><00:01:25.840><c> true</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
or false if it returns true
 

00:01:26.720 --> 00:01:30.710 align:start position:0%
or false if it returns true
we'll<00:01:26.960><c> output</c><00:01:27.280><c> a</c><00:01:27.360><c> message</c><00:01:27.759><c> to</c><00:01:27.920><c> the</c><00:01:28.080><c> user</c>

00:01:30.710 --> 00:01:30.720 align:start position:0%
 
 

00:01:30.720 --> 00:01:35.670 align:start position:0%
 
let's<00:01:31.040><c> run</c><00:01:31.200><c> our</c><00:01:31.360><c> code</c>

00:01:35.670 --> 00:01:35.680 align:start position:0%
 
 

00:01:35.680 --> 00:01:42.870 align:start position:0%
 
3<00:01:36.079><c> is</c><00:01:36.159><c> in</c><00:01:36.320><c> the</c><00:01:38.840><c> array</c>

00:01:42.870 --> 00:01:42.880 align:start position:0%
 
 

00:01:42.880 --> 00:01:45.910 align:start position:0%
 
now<00:01:43.040><c> if</c><00:01:43.200><c> i</c><00:01:43.360><c> were</c><00:01:43.600><c> to</c><00:01:43.840><c> change</c><00:01:44.320><c> number</c><00:01:45.280><c> let's</c><00:01:45.520><c> say</c>

00:01:45.910 --> 00:01:45.920 align:start position:0%
now if i were to change number let's say
 

00:01:45.920 --> 00:01:46.469 align:start position:0%
now if i were to change number let's say
to

00:01:46.469 --> 00:01:46.479 align:start position:0%
to
 

00:01:46.479 --> 00:01:50.469 align:start position:0%
to
8<00:01:47.920><c> and</c><00:01:48.159><c> run</c><00:01:48.320><c> this</c><00:01:48.560><c> code</c><00:01:48.880><c> again</c><00:01:49.439><c> we</c><00:01:49.680><c> expect</c><00:01:50.159><c> no</c>

00:01:50.469 --> 00:01:50.479 align:start position:0%
8 and run this code again we expect no
 

00:01:50.479 --> 00:01:53.590 align:start position:0%
8 and run this code again we expect no
output

00:01:53.590 --> 00:01:53.600 align:start position:0%
 
 

00:01:53.600 --> 00:01:57.350 align:start position:0%
 
and<00:01:53.759><c> that's</c><00:01:54.000><c> what</c><00:01:54.159><c> we</c><00:01:54.399><c> see</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
 
 

00:01:57.360 --> 00:02:00.310 align:start position:0%
 
that's<00:01:57.680><c> because</c><00:01:58.560><c> the</c><00:01:58.719><c> number</c><00:01:59.200><c> eight</c><00:01:59.920><c> is</c><00:02:00.079><c> not</c>

00:02:00.310 --> 00:02:00.320 align:start position:0%
that's because the number eight is not
 

00:02:00.320 --> 00:02:04.149 align:start position:0%
that's because the number eight is not
in<00:02:00.560><c> our</c><00:02:00.719><c> array</c>

00:02:04.149 --> 00:02:04.159 align:start position:0%
 
 

00:02:04.159 --> 00:02:06.310 align:start position:0%
 
now<00:02:04.560><c> this</c><00:02:04.880><c> code</c><00:02:05.200><c> on</c><00:02:05.360><c> lines</c><00:02:05.759><c> four</c><00:02:06.000><c> through</c>

00:02:06.310 --> 00:02:06.320 align:start position:0%
now this code on lines four through
 

00:02:06.320 --> 00:02:08.630 align:start position:0%
now this code on lines four through
eight<00:02:06.719><c> manually</c><00:02:07.520><c> checks</c><00:02:07.920><c> our</c><00:02:08.160><c> array</c>

00:02:08.630 --> 00:02:08.640 align:start position:0%
eight manually checks our array
 

00:02:08.640 --> 00:02:10.869 align:start position:0%
eight manually checks our array
to<00:02:09.039><c> see</c><00:02:09.280><c> if</c><00:02:09.440><c> any</c><00:02:09.599><c> of</c><00:02:09.759><c> its</c><00:02:10.000><c> elements</c><00:02:10.479><c> are</c><00:02:10.640><c> equal</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
to see if any of its elements are equal
 

00:02:10.879 --> 00:02:12.309 align:start position:0%
to see if any of its elements are equal
to<00:02:11.120><c> number</c>

00:02:12.309 --> 00:02:12.319 align:start position:0%
to number
 

00:02:12.319 --> 00:02:14.390 align:start position:0%
to number
there's<00:02:12.640><c> also</c><00:02:13.040><c> an</c><00:02:13.200><c> array</c><00:02:13.599><c> method</c><00:02:14.000><c> we</c><00:02:14.160><c> could</c>

00:02:14.390 --> 00:02:14.400 align:start position:0%
there's also an array method we could
 

00:02:14.400 --> 00:02:18.630 align:start position:0%
there's also an array method we could
use

00:02:18.630 --> 00:02:18.640 align:start position:0%
 
 

00:02:18.640 --> 00:02:21.910 align:start position:0%
 
the<00:02:18.959><c> array</c><00:02:19.599><c> include</c><00:02:20.319><c> method</c><00:02:20.959><c> will</c><00:02:21.280><c> return</c><00:02:21.760><c> a</c>

00:02:21.910 --> 00:02:21.920 align:start position:0%
the array include method will return a
 

00:02:21.920 --> 00:02:23.110 align:start position:0%
the array include method will return a
boolean

00:02:23.110 --> 00:02:23.120 align:start position:0%
boolean
 

00:02:23.120 --> 00:02:25.510 align:start position:0%
boolean
true<00:02:23.520><c> if</c><00:02:23.680><c> its</c><00:02:24.000><c> argument</c><00:02:24.640><c> is</c><00:02:24.800><c> in</c><00:02:24.959><c> the</c><00:02:25.120><c> calling</c>

00:02:25.510 --> 00:02:25.520 align:start position:0%
true if its argument is in the calling
 

00:02:25.520 --> 00:02:26.150 align:start position:0%
true if its argument is in the calling
array

00:02:26.150 --> 00:02:26.160 align:start position:0%
array
 

00:02:26.160 --> 00:02:28.790 align:start position:0%
array
and<00:02:26.480><c> false</c><00:02:26.879><c> if</c><00:02:27.040><c> it's</c><00:02:27.280><c> not</c><00:02:27.920><c> to</c><00:02:28.080><c> demonstrate</c>

00:02:28.790 --> 00:02:28.800 align:start position:0%
and false if it's not to demonstrate
 

00:02:28.800 --> 00:02:30.550 align:start position:0%
and false if it's not to demonstrate
this

00:02:30.550 --> 00:02:30.560 align:start position:0%
this
 

00:02:30.560 --> 00:02:33.910 align:start position:0%
this
let's<00:02:30.879><c> just</c><00:02:31.120><c> call</c><00:02:31.519><c> include</c><00:02:32.160><c> on</c><00:02:32.319><c> our</c><00:02:32.560><c> array</c>

00:02:33.910 --> 00:02:33.920 align:start position:0%
let's just call include on our array
 

00:02:33.920 --> 00:02:36.869 align:start position:0%
let's just call include on our array
and<00:02:34.080><c> we'll</c><00:02:34.319><c> pass</c><00:02:34.640><c> in</c><00:02:34.800><c> number</c><00:02:35.200><c> as</c><00:02:35.360><c> the</c><00:02:35.519><c> argument</c>

00:02:36.869 --> 00:02:36.879 align:start position:0%
and we'll pass in number as the argument
 

00:02:36.879 --> 00:02:37.509 align:start position:0%
and we'll pass in number as the argument
i'm<00:02:37.120><c> using</c>

00:02:37.509 --> 00:02:37.519 align:start position:0%
i'm using
 

00:02:37.519 --> 00:02:39.910 align:start position:0%
i'm using
p<00:02:37.840><c> on</c><00:02:38.000><c> line</c><00:02:38.319><c> four</c><00:02:38.720><c> to</c><00:02:38.959><c> output</c><00:02:39.280><c> the</c><00:02:39.440><c> return</c>

00:02:39.910 --> 00:02:39.920 align:start position:0%
p on line four to output the return
 

00:02:39.920 --> 00:02:44.710 align:start position:0%
p on line four to output the return
value<00:02:40.239><c> of</c><00:02:40.400><c> this</c><00:02:40.560><c> method</c><00:02:40.879><c> invocation</c>

00:02:44.710 --> 00:02:44.720 align:start position:0%
 
 

00:02:44.720 --> 00:02:50.949 align:start position:0%
 
so<00:02:44.879><c> we'll</c><00:02:45.040><c> run</c><00:02:45.280><c> our</c><00:02:45.440><c> code</c><00:02:46.319><c> and</c><00:02:46.480><c> we</c><00:02:46.720><c> see</c><00:02:48.840><c> true</c>

00:02:50.949 --> 00:02:50.959 align:start position:0%
so we'll run our code and we see true
 

00:02:50.959 --> 00:02:54.229 align:start position:0%
so we'll run our code and we see true
and<00:02:51.120><c> that's</c><00:02:51.440><c> because</c><00:02:51.840><c> 3</c><00:02:52.319><c> is</c><00:02:52.480><c> in</c><00:02:52.640><c> our</c><00:02:52.800><c> array</c>

00:02:54.229 --> 00:02:54.239 align:start position:0%
and that's because 3 is in our array
 

00:02:54.239 --> 00:02:56.710 align:start position:0%
and that's because 3 is in our array
one<00:02:54.480><c> more</c><00:02:54.720><c> time</c><00:02:54.959><c> i'm</c><00:02:55.200><c> going</c><00:02:55.519><c> to</c><00:02:55.760><c> assign</c><00:02:56.319><c> number</c>

00:02:56.710 --> 00:02:56.720 align:start position:0%
one more time i'm going to assign number
 

00:02:56.720 --> 00:02:57.750 align:start position:0%
one more time i'm going to assign number
to<00:02:56.959><c> 8</c>

00:02:57.750 --> 00:02:57.760 align:start position:0%
to 8
 

00:02:57.760 --> 00:03:00.869 align:start position:0%
to 8
instead<00:02:58.560><c> which</c><00:02:58.800><c> is</c><00:02:58.959><c> not</c><00:02:59.200><c> part</c><00:02:59.360><c> of</c><00:02:59.519><c> our</c><00:02:59.680><c> array</c>

00:03:00.869 --> 00:03:00.879 align:start position:0%
instead which is not part of our array
 

00:03:00.879 --> 00:03:10.229 align:start position:0%
instead which is not part of our array
and<00:03:01.040><c> now</c><00:03:01.200><c> we'll</c><00:03:01.519><c> expect</c><00:03:01.840><c> to</c><00:03:02.080><c> see</c><00:03:02.840><c> false</c>

00:03:10.229 --> 00:03:10.239 align:start position:0%
 
 

00:03:10.239 --> 00:03:12.229 align:start position:0%
 
so<00:03:10.480><c> now</c><00:03:10.640><c> that</c><00:03:10.800><c> we</c><00:03:11.040><c> know</c><00:03:11.280><c> how</c><00:03:11.519><c> the</c><00:03:11.760><c> include</c>

00:03:12.229 --> 00:03:12.239 align:start position:0%
so now that we know how the include
 

00:03:12.239 --> 00:03:18.470 align:start position:0%
so now that we know how the include
method<00:03:16.840><c> works</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
method works
 

00:03:18.480 --> 00:03:21.110 align:start position:0%
method works
we<00:03:18.720><c> can</c><00:03:18.879><c> use</c><00:03:19.120><c> an</c><00:03:19.280><c> if</c><00:03:19.519><c> statement</c><00:03:20.159><c> to</c><00:03:20.720><c> output</c><00:03:21.040><c> a</c>

00:03:21.110 --> 00:03:21.120 align:start position:0%
we can use an if statement to output a
 

00:03:21.120 --> 00:03:22.470 align:start position:0%
we can use an if statement to output a
message<00:03:21.519><c> to</c><00:03:21.680><c> the</c><00:03:21.840><c> user</c>

00:03:22.470 --> 00:03:22.480 align:start position:0%
message to the user
 

00:03:22.480 --> 00:03:24.710 align:start position:0%
message to the user
similarly<00:03:23.280><c> to</c><00:03:23.440><c> what</c><00:03:23.599><c> we</c><00:03:23.760><c> did</c><00:03:23.920><c> in</c><00:03:24.080><c> our</c><00:03:24.239><c> previous</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
similarly to what we did in our previous
 

00:03:24.720 --> 00:03:25.750 align:start position:0%
similarly to what we did in our previous
solution

00:03:25.750 --> 00:03:25.760 align:start position:0%
solution
 

00:03:25.760 --> 00:03:28.309 align:start position:0%
solution
the<00:03:25.920><c> return</c><00:03:26.400><c> value</c><00:03:26.879><c> of</c><00:03:27.040><c> invoking</c><00:03:27.599><c> the</c><00:03:27.840><c> include</c>

00:03:28.309 --> 00:03:28.319 align:start position:0%
the return value of invoking the include
 

00:03:28.319 --> 00:03:29.430 align:start position:0%
the return value of invoking the include
method<00:03:28.799><c> on</c><00:03:29.040><c> line</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
method on line
 

00:03:29.440 --> 00:03:31.990 align:start position:0%
method on line
4<00:03:30.080><c> will</c><00:03:30.239><c> determine</c><00:03:30.799><c> whether</c><00:03:31.200><c> or</c><00:03:31.360><c> not</c><00:03:31.519><c> the</c><00:03:31.680><c> code</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
4 will determine whether or not the code
 

00:03:32.000 --> 00:03:33.030 align:start position:0%
4 will determine whether or not the code
on<00:03:32.159><c> line</c><00:03:32.480><c> 5</c>

00:03:33.030 --> 00:03:33.040 align:start position:0%
on line 5
 

00:03:33.040 --> 00:03:35.830 align:start position:0%
on line 5
within<00:03:33.440><c> our</c><00:03:33.599><c> if</c><00:03:33.760><c> statement</c><00:03:34.400><c> is</c><00:03:34.640><c> executed</c><00:03:35.680><c> if</c>

00:03:35.830 --> 00:03:35.840 align:start position:0%
within our if statement is executed if
 

00:03:35.840 --> 00:03:37.830 align:start position:0%
within our if statement is executed if
it<00:03:35.920><c> returns</c><00:03:36.560><c> true</c>

00:03:37.830 --> 00:03:37.840 align:start position:0%
it returns true
 

00:03:37.840 --> 00:03:43.670 align:start position:0%
it returns true
again<00:03:38.159><c> we'll</c><00:03:38.400><c> output</c><00:03:38.799><c> a</c><00:03:38.879><c> message</c><00:03:39.280><c> to</c><00:03:39.360><c> the</c><00:03:39.519><c> user</c>

00:03:43.670 --> 00:03:43.680 align:start position:0%
 
 

00:03:43.680 --> 00:03:46.070 align:start position:0%
 
if<00:03:43.840><c> it</c><00:03:44.000><c> returns</c><00:03:44.560><c> false</c><00:03:45.200><c> no</c><00:03:45.440><c> message</c><00:03:45.760><c> will</c><00:03:45.920><c> be</c>

00:03:46.070 --> 00:03:46.080 align:start position:0%
if it returns false no message will be
 

00:03:46.080 --> 00:03:48.550 align:start position:0%
if it returns false no message will be
output

00:03:48.550 --> 00:03:48.560 align:start position:0%
 
 

00:03:48.560 --> 00:03:51.990 align:start position:0%
 
let's<00:03:48.879><c> run</c><00:03:49.040><c> our</c><00:03:49.200><c> code</c>

00:03:51.990 --> 00:03:52.000 align:start position:0%
 
 

00:03:52.000 --> 00:03:59.270 align:start position:0%
 
and<00:03:52.159><c> we</c><00:03:52.400><c> see</c><00:03:52.640><c> that</c><00:03:52.879><c> 3</c><00:03:53.200><c> is</c><00:03:53.360><c> in</c><00:03:53.519><c> the</c><00:03:53.680><c> array</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
 
 

00:03:59.280 --> 00:04:01.509 align:start position:0%
 
be<00:03:59.599><c> sure</c><00:03:59.840><c> to</c><00:04:00.159><c> check</c><00:04:00.400><c> out</c><00:04:00.640><c> ruby's</c><00:04:01.120><c> array</c>

00:04:01.509 --> 00:04:01.519 align:start position:0%
be sure to check out ruby's array
 

00:04:01.519 --> 00:04:02.550 align:start position:0%
be sure to check out ruby's array
documentation

00:04:02.550 --> 00:04:02.560 align:start position:0%
documentation
 

00:04:02.560 --> 00:04:05.350 align:start position:0%
documentation
to<00:04:03.040><c> learn</c><00:04:03.280><c> about</c><00:04:03.760><c> include</c><00:04:04.720><c> and</c><00:04:05.040><c> other</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
to learn about include and other
 

00:04:05.360 --> 00:04:15.120 align:start position:0%
to learn about include and other
commonly<00:04:05.920><c> used</c><00:04:12.120><c> methods</c>

