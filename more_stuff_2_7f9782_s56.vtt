WEBVTT
Kind: captions
Language: en

00:00:04.160 --> 00:00:05.349 align:start position:0%
 
in<00:00:04.319><c> this</c><00:00:04.560><c> exercise</c>

00:00:05.349 --> 00:00:05.359 align:start position:0%
in this exercise
 

00:00:05.359 --> 00:00:07.829 align:start position:0%
in this exercise
a<00:00:05.520><c> block</c><00:00:06.000><c> is</c><00:00:06.160><c> being</c><00:00:06.640><c> explicitly</c><00:00:07.359><c> passed</c><00:00:07.680><c> to</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
a block is being explicitly passed to
 

00:00:07.839 --> 00:00:10.070 align:start position:0%
a block is being explicitly passed to
this<00:00:08.160><c> execute</c><00:00:08.800><c> method</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
this execute method
 

00:00:10.080 --> 00:00:12.070 align:start position:0%
this execute method
and<00:00:10.320><c> we're</c><00:00:10.559><c> asked</c><00:00:11.040><c> what</c><00:00:11.200><c> will</c><00:00:11.360><c> this</c><00:00:11.679><c> program</c>

00:00:12.070 --> 00:00:12.080 align:start position:0%
and we're asked what will this program
 

00:00:12.080 --> 00:00:13.270 align:start position:0%
and we're asked what will this program
print<00:00:12.320><c> to</c><00:00:12.400><c> the</c><00:00:12.559><c> screen</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
print to the screen
 

00:00:13.280 --> 00:00:17.109 align:start position:0%
print to the screen
and<00:00:13.519><c> what</c><00:00:13.679><c> will</c><00:00:13.920><c> it</c><00:00:14.920><c> return</c>

00:00:17.109 --> 00:00:17.119 align:start position:0%
and what will it return
 

00:00:17.119 --> 00:00:19.750 align:start position:0%
and what will it return
so<00:00:17.520><c> looking</c><00:00:17.840><c> at</c><00:00:17.920><c> the</c><00:00:18.080><c> block</c><00:00:18.560><c> on</c><00:00:18.720><c> line</c><00:00:19.039><c> 5</c><00:00:19.600><c> you</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
so looking at the block on line 5 you
 

00:00:19.760 --> 00:00:20.870 align:start position:0%
so looking at the block on line 5 you
may<00:00:20.000><c> think</c><00:00:20.320><c> that</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
may think that
 

00:00:20.880 --> 00:00:23.109 align:start position:0%
may think that
hello<00:00:21.279><c> from</c><00:00:21.520><c> inside</c><00:00:21.920><c> the</c><00:00:22.160><c> execute</c><00:00:22.640><c> method</c>

00:00:23.109 --> 00:00:23.119 align:start position:0%
hello from inside the execute method
 

00:00:23.119 --> 00:00:25.589 align:start position:0%
hello from inside the execute method
will<00:00:23.279><c> be</c><00:00:23.439><c> printed</c><00:00:23.760><c> to</c><00:00:23.920><c> the</c><00:00:24.080><c> screen</c>

00:00:25.589 --> 00:00:25.599 align:start position:0%
will be printed to the screen
 

00:00:25.599 --> 00:00:27.750 align:start position:0%
will be printed to the screen
however<00:00:26.160><c> although</c><00:00:26.720><c> we</c><00:00:27.039><c> have</c><00:00:27.359><c> passed</c><00:00:27.680><c> the</c>

00:00:27.750 --> 00:00:27.760 align:start position:0%
however although we have passed the
 

00:00:27.760 --> 00:00:29.509 align:start position:0%
however although we have passed the
block<00:00:28.240><c> into</c><00:00:28.480><c> the</c><00:00:28.640><c> method</c>

00:00:29.509 --> 00:00:29.519 align:start position:0%
block into the method
 

00:00:29.519 --> 00:00:32.069 align:start position:0%
block into the method
it's<00:00:29.760><c> not</c><00:00:29.920><c> being</c><00:00:30.240><c> executed</c><00:00:31.519><c> so</c><00:00:31.679><c> what</c><00:00:31.840><c> does</c>

00:00:32.069 --> 00:00:32.079 align:start position:0%
it's not being executed so what does
 

00:00:32.079 --> 00:00:33.750 align:start position:0%
it's not being executed so what does
this<00:00:32.239><c> method</c><00:00:32.640><c> return</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
this method return
 

00:00:33.760 --> 00:00:35.990 align:start position:0%
this method return
we<00:00:33.920><c> can</c><00:00:34.160><c> see</c><00:00:34.320><c> that</c><00:00:34.719><c> by</c><00:00:35.040><c> outputting</c><00:00:35.440><c> the</c><00:00:35.600><c> return</c>

00:00:35.990 --> 00:00:36.000 align:start position:0%
we can see that by outputting the return
 

00:00:36.000 --> 00:00:37.670 align:start position:0%
we can see that by outputting the return
with<00:00:36.320><c> p</c>

00:00:37.670 --> 00:00:37.680 align:start position:0%
with p
 

00:00:37.680 --> 00:00:42.869 align:start position:0%
with p
on<00:00:37.840><c> line</c><00:00:38.160><c> 5</c><00:00:39.200><c> and</c><00:00:39.360><c> running</c><00:00:39.680><c> our</c><00:00:39.840><c> code</c>

00:00:42.869 --> 00:00:42.879 align:start position:0%
 
 

00:00:42.879 --> 00:00:44.950 align:start position:0%
 
you<00:00:43.040><c> can</c><00:00:43.200><c> see</c><00:00:43.360><c> that</c><00:00:43.520><c> there's</c><00:00:43.920><c> no</c><00:00:44.160><c> output</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
you can see that there's no output
 

00:00:44.960 --> 00:00:46.150 align:start position:0%
you can see that there's no output
however<00:00:45.520><c> a</c><00:00:45.680><c> proc</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
however a proc
 

00:00:46.160 --> 00:00:58.559 align:start position:0%
however a proc
object<00:00:46.559><c> is</c><00:00:55.559><c> returned</c>

