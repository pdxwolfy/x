WEBVTT
Kind: captions
Language: en

00:00:03.679 --> 00:00:04.390 align:start position:0%
 
we<00:00:03.840><c> need</c><00:00:04.080><c> to</c>

00:00:04.390 --> 00:00:04.400 align:start position:0%
we need to
 

00:00:04.400 --> 00:00:06.710 align:start position:0%
we need to
get<00:00:04.640><c> rid</c><00:00:04.799><c> of</c><00:00:05.040><c> duplicate</c><00:00:05.759><c> elements</c><00:00:06.399><c> in</c><00:00:06.560><c> our</c>

00:00:06.710 --> 00:00:06.720 align:start position:0%
get rid of duplicate elements in our
 

00:00:06.720 --> 00:00:07.510 align:start position:0%
get rid of duplicate elements in our
array

00:00:07.510 --> 00:00:07.520 align:start position:0%
array
 

00:00:07.520 --> 00:00:09.910 align:start position:0%
array
without<00:00:08.000><c> specifically</c><00:00:08.800><c> removing</c><00:00:09.360><c> any</c><00:00:09.599><c> one</c>

00:00:09.910 --> 00:00:09.920 align:start position:0%
without specifically removing any one
 

00:00:09.920 --> 00:00:11.270 align:start position:0%
without specifically removing any one
value

00:00:11.270 --> 00:00:11.280 align:start position:0%
value
 

00:00:11.280 --> 00:00:13.430 align:start position:0%
value
so<00:00:11.920><c> looking</c><00:00:12.240><c> at</c><00:00:12.400><c> what</c><00:00:12.559><c> our</c><00:00:12.799><c> array</c><00:00:13.200><c> is</c>

00:00:13.430 --> 00:00:13.440 align:start position:0%
so looking at what our array is
 

00:00:13.440 --> 00:00:15.589 align:start position:0%
so looking at what our array is
currently<00:00:14.160><c> you</c><00:00:14.320><c> can</c><00:00:14.559><c> see</c><00:00:14.719><c> that</c><00:00:14.960><c> we</c><00:00:15.120><c> have</c><00:00:15.440><c> one</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
currently you can see that we have one
 

00:00:15.599 --> 00:00:17.670 align:start position:0%
currently you can see that we have one
duplicate<00:00:16.160><c> value</c><00:00:16.560><c> which</c><00:00:16.800><c> is</c><00:00:17.039><c> three</c>

00:00:17.670 --> 00:00:17.680 align:start position:0%
duplicate value which is three
 

00:00:17.680 --> 00:00:20.310 align:start position:0%
duplicate value which is three
we<00:00:17.840><c> have</c><00:00:18.080><c> a</c><00:00:18.240><c> three</c><00:00:18.640><c> at</c><00:00:18.880><c> index</c><00:00:19.279><c> three</c><00:00:19.920><c> and</c><00:00:20.160><c> at</c>

00:00:20.310 --> 00:00:20.320 align:start position:0%
we have a three at index three and at
 

00:00:20.320 --> 00:00:22.870 align:start position:0%
we have a three at index three and at
the<00:00:20.480><c> end</c><00:00:20.640><c> of</c><00:00:20.800><c> our</c><00:00:20.960><c> array</c><00:00:21.359><c> at</c><00:00:21.600><c> index</c><00:00:22.000><c> 11.</c>

00:00:22.870 --> 00:00:22.880 align:start position:0%
the end of our array at index 11.
 

00:00:22.880 --> 00:00:24.470 align:start position:0%
the end of our array at index 11.
so<00:00:23.039><c> this</c><00:00:23.279><c> is</c><00:00:23.439><c> a</c><00:00:23.519><c> good</c><00:00:23.680><c> time</c><00:00:23.920><c> to</c><00:00:24.000><c> look</c><00:00:24.240><c> at</c><00:00:24.320><c> the</c>

00:00:24.470 --> 00:00:24.480 align:start position:0%
so this is a good time to look at the
 

00:00:24.480 --> 00:00:26.870 align:start position:0%
so this is a good time to look at the
documentation<00:00:25.599><c> and</c><00:00:25.840><c> see</c><00:00:26.080><c> if</c><00:00:26.160><c> there</c><00:00:26.400><c> are</c><00:00:26.640><c> any</c>

00:00:26.870 --> 00:00:26.880 align:start position:0%
documentation and see if there are any
 

00:00:26.880 --> 00:00:29.269 align:start position:0%
documentation and see if there are any
useful<00:00:27.359><c> methods</c>

00:00:29.269 --> 00:00:29.279 align:start position:0%
useful methods
 

00:00:29.279 --> 00:00:34.549 align:start position:0%
useful methods
you<00:00:29.439><c> may</c><00:00:29.679><c> notice</c><00:00:30.080><c> the</c><00:00:30.480><c> unique</c><00:00:30.960><c> method</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
 
 

00:00:34.559 --> 00:00:36.950 align:start position:0%
 
now<00:00:34.800><c> i'm</c><00:00:34.960><c> going</c><00:00:35.200><c> to</c><00:00:35.440><c> output</c><00:00:35.840><c> the</c><00:00:36.000><c> return</c><00:00:36.480><c> value</c>

00:00:36.950 --> 00:00:36.960 align:start position:0%
now i'm going to output the return value
 

00:00:36.960 --> 00:00:39.510 align:start position:0%
now i'm going to output the return value
of<00:00:37.200><c> invoking</c><00:00:37.760><c> unique</c><00:00:38.239><c> on</c><00:00:38.399><c> our</c><00:00:38.559><c> array</c>

00:00:39.510 --> 00:00:39.520 align:start position:0%
of invoking unique on our array
 

00:00:39.520 --> 00:00:41.910 align:start position:0%
of invoking unique on our array
and<00:00:39.680><c> then</c><00:00:39.840><c> on</c><00:00:40.000><c> line</c><00:00:40.320><c> 10</c><00:00:40.640><c> i'll</c><00:00:40.960><c> also</c><00:00:41.280><c> just</c><00:00:41.680><c> print</c>

00:00:41.910 --> 00:00:41.920 align:start position:0%
and then on line 10 i'll also just print
 

00:00:41.920 --> 00:00:47.029 align:start position:0%
and then on line 10 i'll also just print
the<00:00:42.840><c> array</c>

00:00:47.029 --> 00:00:47.039 align:start position:0%
 
 

00:00:47.039 --> 00:00:48.869 align:start position:0%
 
and<00:00:47.200><c> you</c><00:00:47.360><c> may</c><00:00:47.520><c> notice</c><00:00:47.840><c> that</c><00:00:48.079><c> these</c><00:00:48.480><c> are</c><00:00:48.719><c> two</c>

00:00:48.869 --> 00:00:48.879 align:start position:0%
and you may notice that these are two
 

00:00:48.879 --> 00:00:51.270 align:start position:0%
and you may notice that these are two
different<00:00:49.200><c> arrays</c><00:00:50.000><c> the</c><00:00:50.160><c> return</c><00:00:50.559><c> value</c><00:00:51.039><c> of</c>

00:00:51.270 --> 00:00:51.280 align:start position:0%
different arrays the return value of
 

00:00:51.280 --> 00:00:53.270 align:start position:0%
different arrays the return value of
invoking<00:00:51.840><c> unique</c><00:00:52.320><c> on</c><00:00:52.480><c> an</c><00:00:52.640><c> array</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
invoking unique on an array
 

00:00:53.280 --> 00:00:55.830 align:start position:0%
invoking unique on an array
is<00:00:53.600><c> a</c><00:00:53.760><c> new</c><00:00:54.000><c> array</c><00:00:54.960><c> you</c><00:00:55.039><c> can</c><00:00:55.280><c> see</c><00:00:55.440><c> that</c><00:00:55.600><c> that</c>

00:00:55.830 --> 00:00:55.840 align:start position:0%
is a new array you can see that that
 

00:00:55.840 --> 00:00:59.510 align:start position:0%
is a new array you can see that that
duplicate<00:00:56.399><c> 3</c><00:00:56.800><c> is</c><00:00:56.960><c> not</c><00:00:57.280><c> in</c><00:00:57.360><c> this</c><00:00:57.600><c> new</c><00:00:57.840><c> array</c>

00:00:59.510 --> 00:00:59.520 align:start position:0%
duplicate 3 is not in this new array
 

00:00:59.520 --> 00:01:02.150 align:start position:0%
duplicate 3 is not in this new array
however<00:01:00.079><c> it</c><00:01:00.239><c> did</c><00:01:00.480><c> not</c><00:01:00.800><c> mutate</c><00:01:01.359><c> our</c><00:01:01.600><c> original</c>

00:01:02.150 --> 00:01:02.160 align:start position:0%
however it did not mutate our original
 

00:01:02.160 --> 00:01:03.029 align:start position:0%
however it did not mutate our original
array

00:01:03.029 --> 00:01:03.039 align:start position:0%
array
 

00:01:03.039 --> 00:01:04.869 align:start position:0%
array
as<00:01:03.280><c> you</c><00:01:03.359><c> can</c><00:01:03.520><c> see</c><00:01:03.760><c> in</c><00:01:03.840><c> the</c><00:01:04.080><c> second</c><00:01:04.400><c> line</c><00:01:04.640><c> of</c>

00:01:04.869 --> 00:01:04.879 align:start position:0%
as you can see in the second line of
 

00:01:04.879 --> 00:01:08.550 align:start position:0%
as you can see in the second line of
output

00:01:08.550 --> 00:01:08.560 align:start position:0%
 
 

00:01:08.560 --> 00:01:11.030 align:start position:0%
 
if<00:01:08.640><c> we</c><00:01:08.799><c> want</c><00:01:09.040><c> to</c><00:01:09.360><c> destructively</c><00:01:10.159><c> modify</c><00:01:10.799><c> our</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
if we want to destructively modify our
 

00:01:11.040 --> 00:01:14.310 align:start position:0%
if we want to destructively modify our
original<00:01:11.600><c> array</c>

00:01:14.310 --> 00:01:14.320 align:start position:0%
 
 

00:01:14.320 --> 00:01:17.030 align:start position:0%
 
we<00:01:14.479><c> can</c><00:01:14.720><c> use</c><00:01:14.960><c> the</c><00:01:15.200><c> destructive</c><00:01:15.920><c> unique</c><00:01:16.400><c> method</c>

00:01:17.030 --> 00:01:17.040 align:start position:0%
we can use the destructive unique method
 

00:01:17.040 --> 00:01:19.109 align:start position:0%
we can use the destructive unique method
which<00:01:17.280><c> has</c><00:01:17.520><c> a</c><00:01:17.600><c> bang</c><00:01:17.920><c> at</c><00:01:18.000><c> the</c><00:01:18.159><c> end</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
which has a bang at the end
 

00:01:19.119 --> 00:01:21.749 align:start position:0%
which has a bang at the end
now<00:01:19.280><c> these</c><00:01:19.520><c> are</c><00:01:19.759><c> two</c><00:01:20.080><c> different</c><00:01:20.560><c> methods</c>

00:01:21.749 --> 00:01:21.759 align:start position:0%
now these are two different methods
 

00:01:21.759 --> 00:01:24.830 align:start position:0%
now these are two different methods
you'll<00:01:22.000><c> see</c><00:01:22.159><c> that</c><00:01:22.320><c> in</c><00:01:22.479><c> the</c><00:01:22.560><c> ruby</c>

00:01:24.830 --> 00:01:24.840 align:start position:0%
you'll see that in the ruby
 

00:01:24.840 --> 00:01:26.070 align:start position:0%
you'll see that in the ruby
documentation

00:01:26.070 --> 00:01:26.080 align:start position:0%
documentation
 

00:01:26.080 --> 00:01:28.070 align:start position:0%
documentation
now<00:01:26.240><c> when</c><00:01:26.400><c> we</c><00:01:26.640><c> invoke</c><00:01:27.040><c> the</c><00:01:27.280><c> unique</c><00:01:27.680><c> with</c><00:01:27.920><c> a</c>

00:01:28.070 --> 00:01:28.080 align:start position:0%
now when we invoke the unique with a
 

00:01:28.080 --> 00:01:29.109 align:start position:0%
now when we invoke the unique with a
bang<00:01:28.479><c> on</c><00:01:28.720><c> line</c>

00:01:29.109 --> 00:01:29.119 align:start position:0%
bang on line
 

00:01:29.119 --> 00:01:32.149 align:start position:0%
bang on line
9<00:01:29.840><c> on</c><00:01:30.079><c> our</c><00:01:30.240><c> array</c><00:01:30.960><c> and</c><00:01:31.200><c> output</c><00:01:31.520><c> the</c><00:01:31.759><c> array</c><00:01:32.079><c> on</c>

00:01:32.149 --> 00:01:32.159 align:start position:0%
9 on our array and output the array on
 

00:01:32.159 --> 00:01:33.590 align:start position:0%
9 on our array and output the array on
line<00:01:32.479><c> 10</c>

00:01:33.590 --> 00:01:33.600 align:start position:0%
line 10
 

00:01:33.600 --> 00:01:35.910 align:start position:0%
line 10
we<00:01:33.759><c> expect</c><00:01:34.159><c> to</c><00:01:34.320><c> see</c><00:01:34.560><c> no</c><00:01:34.799><c> duplicates</c><00:01:35.600><c> because</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
we expect to see no duplicates because
 

00:01:35.920 --> 00:01:38.830 align:start position:0%
we expect to see no duplicates because
this<00:01:36.159><c> method</c><00:01:36.560><c> destructively</c><00:01:37.360><c> modified</c><00:01:38.000><c> our</c>

00:01:38.830 --> 00:01:38.840 align:start position:0%
this method destructively modified our
 

00:01:38.840 --> 00:01:42.149 align:start position:0%
this method destructively modified our
array

00:01:42.149 --> 00:01:42.159 align:start position:0%
 
 

00:01:42.159 --> 00:01:44.469 align:start position:0%
 
so<00:01:42.399><c> here's</c><00:01:42.720><c> our</c><00:01:42.880><c> original</c><00:01:43.360><c> array</c><00:01:44.079><c> with</c><00:01:44.320><c> the</c>

00:01:44.469 --> 00:01:44.479 align:start position:0%
so here's our original array with the
 

00:01:44.479 --> 00:01:50.550 align:start position:0%
so here's our original array with the
duplicates<00:01:45.040><c> removed</c>

00:01:50.550 --> 00:01:50.560 align:start position:0%
 
 

00:01:50.560 --> 00:01:52.710 align:start position:0%
 
if<00:01:50.720><c> you're</c><00:01:50.880><c> unsure</c><00:01:51.439><c> about</c><00:01:51.680><c> whether</c><00:01:52.000><c> a</c><00:01:52.159><c> method</c>

00:01:52.710 --> 00:01:52.720 align:start position:0%
if you're unsure about whether a method
 

00:01:52.720 --> 00:01:54.310 align:start position:0%
if you're unsure about whether a method
is<00:01:52.960><c> destructive</c><00:01:53.520><c> or</c><00:01:53.680><c> not</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
is destructive or not
 

00:01:54.320 --> 00:01:55.990 align:start position:0%
is destructive or not
be<00:01:54.479><c> sure</c><00:01:54.720><c> to</c><00:01:54.880><c> read</c><00:01:55.040><c> the</c><00:01:55.200><c> documentation</c>

00:01:55.990 --> 00:01:56.000 align:start position:0%
be sure to read the documentation
 

00:01:56.000 --> 00:01:58.950 align:start position:0%
be sure to read the documentation
carefully<00:01:57.280><c> remember</c><00:01:57.680><c> that</c><00:01:57.920><c> these</c><00:01:58.159><c> methods</c>

00:01:58.950 --> 00:01:58.960 align:start position:0%
carefully remember that these methods
 

00:01:58.960 --> 00:02:01.670 align:start position:0%
carefully remember that these methods
unique<00:01:59.600><c> and</c><00:01:59.920><c> unique</c><00:02:00.159><c> with</c><00:02:00.399><c> a</c><00:02:00.479><c> bang</c><00:02:01.119><c> are</c><00:02:01.360><c> two</c>

00:02:01.670 --> 00:02:01.680 align:start position:0%
unique and unique with a bang are two
 

00:02:01.680 --> 00:02:02.630 align:start position:0%
unique and unique with a bang are two
different<00:02:02.079><c> methods</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
different methods
 

00:02:02.640 --> 00:02:05.109 align:start position:0%
different methods
as<00:02:02.799><c> you'll</c><00:02:02.960><c> see</c><00:02:03.200><c> in</c><00:02:03.280><c> the</c><00:02:03.360><c> documentation</c><00:02:04.960><c> you</c>

00:02:05.109 --> 00:02:05.119 align:start position:0%
as you'll see in the documentation you
 

00:02:05.119 --> 00:02:07.429 align:start position:0%
as you'll see in the documentation you
can't<00:02:05.360><c> simply</c><00:02:05.840><c> make</c><00:02:06.159><c> any</c><00:02:06.399><c> method</c><00:02:06.799><c> destructive</c>

00:02:07.429 --> 00:02:07.439 align:start position:0%
can't simply make any method destructive
 

00:02:07.439 --> 00:02:07.990 align:start position:0%
can't simply make any method destructive
by<00:02:07.680><c> adding</c>

00:02:07.990 --> 00:02:08.000 align:start position:0%
by adding
 

00:02:08.000 --> 00:02:16.879 align:start position:0%
by adding
a<00:02:08.080><c> bang</c><00:02:08.399><c> at</c><00:02:08.479><c> the</c><00:02:13.879><c> end</c>

