WEBVTT
Kind: captions
Language: en

00:00:04.720 --> 00:00:06.110 align:start position:0%
 
we've<00:00:05.040><c> created</c><00:00:05.440><c> a</c><00:00:05.600><c> file</c>

00:00:06.110 --> 00:00:06.120 align:start position:0%
we've created a file
 

00:00:06.120 --> 00:00:09.830 align:start position:0%
we've created a file
age.rb<00:00:07.600><c> and</c><00:00:08.080><c> we</c><00:00:08.240><c> want</c><00:00:08.480><c> our</c><00:00:08.639><c> program</c><00:00:09.200><c> to</c><00:00:09.519><c> ask</c>

00:00:09.830 --> 00:00:09.840 align:start position:0%
age.rb and we want our program to ask
 

00:00:09.840 --> 00:00:10.470 align:start position:0%
age.rb and we want our program to ask
the<00:00:10.000><c> user</c>

00:00:10.470 --> 00:00:10.480 align:start position:0%
the user
 

00:00:10.480 --> 00:00:12.950 align:start position:0%
the user
how<00:00:10.639><c> old</c><00:00:10.880><c> they</c><00:00:11.120><c> are</c><00:00:11.920><c> and</c><00:00:12.080><c> then</c><00:00:12.320><c> display</c><00:00:12.799><c> to</c>

00:00:12.950 --> 00:00:12.960 align:start position:0%
how old they are and then display to
 

00:00:12.960 --> 00:00:13.509 align:start position:0%
how old they are and then display to
them

00:00:13.509 --> 00:00:13.519 align:start position:0%
them
 

00:00:13.519 --> 00:00:16.550 align:start position:0%
them
how<00:00:13.759><c> old</c><00:00:14.000><c> they</c><00:00:14.160><c> will</c><00:00:14.320><c> be</c><00:00:14.639><c> in</c><00:00:14.960><c> 10</c><00:00:15.839><c> 20</c>

00:00:16.550 --> 00:00:16.560 align:start position:0%
how old they will be in 10 20
 

00:00:16.560 --> 00:00:19.910 align:start position:0%
how old they will be in 10 20
30<00:00:17.039><c> and</c><00:00:17.279><c> 40</c><00:00:17.680><c> years</c><00:00:18.960><c> so</c><00:00:19.119><c> the</c><00:00:19.279><c> first</c><00:00:19.600><c> thing</c><00:00:19.760><c> we</c>

00:00:19.910 --> 00:00:19.920 align:start position:0%
30 and 40 years so the first thing we
 

00:00:19.920 --> 00:00:20.870 align:start position:0%
30 and 40 years so the first thing we
want<00:00:20.240><c> to</c><00:00:20.400><c> do</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
want to do
 

00:00:20.880 --> 00:00:24.310 align:start position:0%
want to do
is<00:00:21.279><c> prompt</c><00:00:21.680><c> the</c><00:00:21.840><c> user</c><00:00:22.240><c> to</c><00:00:22.560><c> enter</c><00:00:22.800><c> their</c><00:00:23.119><c> age</c>

00:00:24.310 --> 00:00:24.320 align:start position:0%
is prompt the user to enter their age
 

00:00:24.320 --> 00:00:29.429 align:start position:0%
is prompt the user to enter their age
we'll<00:00:24.560><c> invoke</c><00:00:24.960><c> the</c><00:00:25.119><c> put</c><00:00:25.359><c> us</c><00:00:25.680><c> method</c>

00:00:29.429 --> 00:00:29.439 align:start position:0%
 
 

00:00:29.439 --> 00:00:31.589 align:start position:0%
 
and<00:00:29.599><c> display</c><00:00:30.080><c> a</c><00:00:30.160><c> message</c><00:00:30.560><c> to</c><00:00:30.720><c> the</c><00:00:30.800><c> user</c><00:00:31.199><c> asking</c>

00:00:31.589 --> 00:00:31.599 align:start position:0%
and display a message to the user asking
 

00:00:31.599 --> 00:00:34.229 align:start position:0%
and display a message to the user asking
how<00:00:31.760><c> old</c><00:00:32.000><c> they</c><00:00:32.239><c> are</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
how old they are
 

00:00:34.239 --> 00:00:36.790 align:start position:0%
how old they are
now<00:00:34.399><c> we</c><00:00:34.559><c> want</c><00:00:34.800><c> to</c><00:00:35.200><c> pause</c><00:00:35.520><c> program</c><00:00:36.000><c> execution</c>

00:00:36.790 --> 00:00:36.800 align:start position:0%
now we want to pause program execution
 

00:00:36.800 --> 00:00:40.549 align:start position:0%
now we want to pause program execution
and<00:00:37.120><c> allow</c><00:00:37.440><c> the</c><00:00:37.600><c> user</c><00:00:37.920><c> to</c><00:00:38.079><c> enter</c><00:00:38.399><c> their</c><00:00:38.640><c> age</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
and allow the user to enter their age
 

00:00:40.559 --> 00:00:42.549 align:start position:0%
and allow the user to enter their age
and<00:00:40.719><c> we'll</c><00:00:40.960><c> use</c><00:00:41.120><c> the</c><00:00:41.280><c> get</c><00:00:41.600><c> s</c><00:00:41.840><c> method</c><00:00:42.160><c> to</c><00:00:42.320><c> do</c>

00:00:42.549 --> 00:00:42.559 align:start position:0%
and we'll use the get s method to do
 

00:00:42.559 --> 00:00:43.590 align:start position:0%
and we'll use the get s method to do
that

00:00:43.590 --> 00:00:43.600 align:start position:0%
that
 

00:00:43.600 --> 00:00:46.549 align:start position:0%
that
and<00:00:44.320><c> the</c><00:00:44.559><c> chomp</c><00:00:44.960><c> method</c><00:00:45.680><c> to</c><00:00:46.000><c> remove</c><00:00:46.399><c> the</c>

00:00:46.549 --> 00:00:46.559 align:start position:0%
and the chomp method to remove the
 

00:00:46.559 --> 00:00:48.310 align:start position:0%
and the chomp method to remove the
newline<00:00:47.039><c> character</c><00:00:47.600><c> at</c><00:00:47.680><c> the</c><00:00:47.920><c> end</c><00:00:48.079><c> of</c><00:00:48.160><c> that</c>

00:00:48.310 --> 00:00:48.320 align:start position:0%
newline character at the end of that
 

00:00:48.320 --> 00:00:51.750 align:start position:0%
newline character at the end of that
user<00:00:48.719><c> input</c>

00:00:51.750 --> 00:00:51.760 align:start position:0%
 
 

00:00:51.760 --> 00:00:53.830 align:start position:0%
 
let's<00:00:52.079><c> store</c><00:00:52.399><c> that</c><00:00:52.559><c> user</c><00:00:52.960><c> input</c><00:00:53.280><c> in</c><00:00:53.440><c> a</c><00:00:53.520><c> local</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
let's store that user input in a local
 

00:00:53.840 --> 00:00:57.110 align:start position:0%
let's store that user input in a local
variable<00:00:54.559><c> called</c><00:00:54.879><c> age</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
variable called age
 

00:00:57.120 --> 00:01:04.549 align:start position:0%
variable called age
so<00:00:57.280><c> let's</c><00:00:57.520><c> run</c><00:00:57.680><c> our</c><00:00:57.840><c> code</c><00:00:58.079><c> as</c><00:00:58.239><c> it</c><00:00:58.399><c> is</c><00:00:58.559><c> now</c>

00:01:04.549 --> 00:01:04.559 align:start position:0%
 
 

00:01:04.559 --> 00:01:08.310 align:start position:0%
 
we'll<00:01:04.799><c> input</c><00:01:05.280><c> 20</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
 
 

00:01:08.320 --> 00:01:12.469 align:start position:0%
 
in<00:01:08.479><c> our</c><00:01:08.640><c> program</c><00:01:10.840><c> ends</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
in our program ends
 

00:01:12.479 --> 00:01:15.109 align:start position:0%
in our program ends
the<00:01:12.640><c> next</c><00:01:12.960><c> step</c><00:01:13.520><c> is</c><00:01:13.760><c> to</c><00:01:14.080><c> display</c><00:01:14.560><c> a</c><00:01:14.640><c> message</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
the next step is to display a message
 

00:01:15.119 --> 00:01:19.350 align:start position:0%
the next step is to display a message
back<00:01:15.360><c> to</c><00:01:15.520><c> the</c><00:01:15.680><c> user</c>

00:01:19.350 --> 00:01:19.360 align:start position:0%
 
 

00:01:19.360 --> 00:01:21.590 align:start position:0%
 
so<00:01:19.680><c> let's</c><00:01:19.920><c> just</c><00:01:20.159><c> start</c><00:01:20.400><c> with</c><00:01:20.720><c> the</c><00:01:21.280><c> first</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
so let's just start with the first
 

00:01:21.600 --> 00:01:23.030 align:start position:0%
so let's just start with the first
calculation<00:01:22.400><c> which</c><00:01:22.640><c> is</c>

00:01:23.030 --> 00:01:23.040 align:start position:0%
calculation which is
 

00:01:23.040 --> 00:01:28.149 align:start position:0%
calculation which is
in<00:01:23.360><c> 10</c><00:01:23.680><c> years</c><00:01:25.600><c> you</c><00:01:25.759><c> will</c><00:01:26.000><c> be</c>

00:01:28.149 --> 00:01:28.159 align:start position:0%
in 10 years you will be
 

00:01:28.159 --> 00:01:34.950 align:start position:0%
in 10 years you will be
and<00:01:28.320><c> below</c><00:01:28.640><c> that</c><00:01:28.880><c> will</c><00:01:29.119><c> output</c><00:01:29.439><c> the</c><00:01:29.680><c> age</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
 
 

00:01:34.960 --> 00:01:38.149 align:start position:0%
 
so<00:01:35.119><c> we'll</c><00:01:35.360><c> reference</c><00:01:35.840><c> our</c><00:01:36.079><c> age</c><00:01:36.400><c> variable</c><00:01:37.840><c> and</c>

00:01:38.149 --> 00:01:38.159 align:start position:0%
so we'll reference our age variable and
 

00:01:38.159 --> 00:01:40.310 align:start position:0%
so we'll reference our age variable and
we<00:01:38.320><c> want</c><00:01:38.479><c> to</c><00:01:38.720><c> output</c><00:01:39.119><c> the</c><00:01:39.280><c> return</c><00:01:39.759><c> value</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
we want to output the return value
 

00:01:40.320 --> 00:01:43.350 align:start position:0%
we want to output the return value
of<00:01:40.479><c> adding</c><00:01:40.880><c> 10</c><00:01:41.200><c> to</c><00:01:41.360><c> the</c><00:01:41.520><c> user's</c><00:01:42.000><c> age</c>

00:01:43.350 --> 00:01:43.360 align:start position:0%
of adding 10 to the user's age
 

00:01:43.360 --> 00:01:45.830 align:start position:0%
of adding 10 to the user's age
let's<00:01:43.600><c> run</c><00:01:43.840><c> our</c><00:01:44.000><c> code</c><00:01:44.640><c> and</c><00:01:44.960><c> see</c><00:01:45.200><c> if</c><00:01:45.280><c> we</c><00:01:45.439><c> get</c><00:01:45.600><c> the</c>

00:01:45.830 --> 00:01:45.840 align:start position:0%
let's run our code and see if we get the
 

00:01:45.840 --> 00:01:54.870 align:start position:0%
let's run our code and see if we get the
expected<00:01:52.840><c> behavior</c>

00:01:54.870 --> 00:01:54.880 align:start position:0%
expected behavior
 

00:01:54.880 --> 00:01:56.709 align:start position:0%
expected behavior
so<00:01:55.040><c> we've</c><00:01:55.280><c> successfully</c><00:01:56.000><c> displayed</c><00:01:56.479><c> the</c>

00:01:56.709 --> 00:01:56.719 align:start position:0%
so we've successfully displayed the
 

00:01:56.719 --> 00:01:58.310 align:start position:0%
so we've successfully displayed the
first<00:01:57.040><c> line</c><00:01:57.280><c> of</c><00:01:57.439><c> our</c><00:01:57.520><c> message</c>

00:01:58.310 --> 00:01:58.320 align:start position:0%
first line of our message
 

00:01:58.320 --> 00:02:00.630 align:start position:0%
first line of our message
but<00:01:58.479><c> the</c><00:01:58.719><c> code</c><00:01:58.960><c> on</c><00:01:59.119><c> line</c><00:01:59.520><c> 4</c><00:01:59.840><c> of</c><00:02:00.000><c> our</c><00:02:00.159><c> program</c>

00:02:00.630 --> 00:02:00.640 align:start position:0%
but the code on line 4 of our program
 

00:02:00.640 --> 00:02:01.990 align:start position:0%
but the code on line 4 of our program
raised<00:02:00.960><c> an</c><00:02:01.119><c> error</c>

00:02:01.990 --> 00:02:02.000 align:start position:0%
raised an error
 

00:02:02.000 --> 00:02:03.830 align:start position:0%
raised an error
and<00:02:02.159><c> if</c><00:02:02.320><c> we</c><00:02:02.479><c> read</c><00:02:02.640><c> our</c><00:02:02.880><c> error</c><00:02:03.119><c> message</c><00:02:03.680><c> it</c>

00:02:03.830 --> 00:02:03.840 align:start position:0%
and if we read our error message it
 

00:02:03.840 --> 00:02:05.190 align:start position:0%
and if we read our error message it
tells<00:02:04.159><c> us</c><00:02:04.880><c> no</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
tells us no
 

00:02:05.200 --> 00:02:07.350 align:start position:0%
tells us no
implicit<00:02:05.680><c> conversion</c><00:02:06.320><c> of</c><00:02:06.479><c> integer</c><00:02:06.960><c> into</c>

00:02:07.350 --> 00:02:07.360 align:start position:0%
implicit conversion of integer into
 

00:02:07.360 --> 00:02:08.710 align:start position:0%
implicit conversion of integer into
string

00:02:08.710 --> 00:02:08.720 align:start position:0%
string
 

00:02:08.720 --> 00:02:10.869 align:start position:0%
string
the<00:02:08.959><c> error</c><00:02:09.280><c> was</c><00:02:09.599><c> raised</c><00:02:10.000><c> when</c><00:02:10.160><c> we</c><00:02:10.399><c> tried</c><00:02:10.640><c> to</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
the error was raised when we tried to
 

00:02:10.879 --> 00:02:16.390 align:start position:0%
the error was raised when we tried to
add<00:02:11.200><c> our</c><00:02:11.599><c> age</c><00:02:12.000><c> to</c><00:02:12.160><c> the</c><00:02:12.319><c> integer</c><00:02:12.800><c> 10.</c>

00:02:16.390 --> 00:02:16.400 align:start position:0%
 
 

00:02:16.400 --> 00:02:19.670 align:start position:0%
 
all<00:02:16.720><c> user</c><00:02:17.120><c> input</c><00:02:17.599><c> comes</c><00:02:17.920><c> in</c><00:02:18.160><c> as</c><00:02:18.400><c> a</c><00:02:18.480><c> string</c>

00:02:19.670 --> 00:02:19.680 align:start position:0%
all user input comes in as a string
 

00:02:19.680 --> 00:02:22.309 align:start position:0%
all user input comes in as a string
so<00:02:19.920><c> our</c><00:02:20.160><c> local</c><00:02:20.480><c> variable</c><00:02:21.040><c> age</c><00:02:21.360><c> references</c><00:02:22.080><c> the</c>

00:02:22.309 --> 00:02:22.319 align:start position:0%
so our local variable age references the
 

00:02:22.319 --> 00:02:23.110 align:start position:0%
so our local variable age references the
string

00:02:23.110 --> 00:02:23.120 align:start position:0%
string
 

00:02:23.120 --> 00:02:26.070 align:start position:0%
string
20.<00:02:24.239><c> in</c><00:02:24.400><c> order</c><00:02:24.720><c> for</c><00:02:25.040><c> our</c><00:02:25.200><c> program</c><00:02:25.599><c> to</c><00:02:25.760><c> work</c>

00:02:26.070 --> 00:02:26.080 align:start position:0%
20. in order for our program to work
 

00:02:26.080 --> 00:02:26.790 align:start position:0%
20. in order for our program to work
properly

00:02:26.790 --> 00:02:26.800 align:start position:0%
properly
 

00:02:26.800 --> 00:02:29.750 align:start position:0%
properly
and<00:02:27.120><c> perform</c><00:02:27.680><c> the</c><00:02:27.920><c> addition</c><00:02:28.400><c> on</c><00:02:28.640><c> line</c><00:02:28.959><c> 4</c><00:02:29.599><c> we</c>

00:02:29.750 --> 00:02:29.760 align:start position:0%
and perform the addition on line 4 we
 

00:02:29.760 --> 00:02:31.830 align:start position:0%
and perform the addition on line 4 we
need<00:02:29.920><c> to</c><00:02:30.080><c> convert</c><00:02:30.480><c> that</c><00:02:30.720><c> user</c><00:02:31.120><c> input</c><00:02:31.519><c> to</c><00:02:31.680><c> an</c>

00:02:31.830 --> 00:02:31.840 align:start position:0%
need to convert that user input to an
 

00:02:31.840 --> 00:02:33.830 align:start position:0%
need to convert that user input to an
integer

00:02:33.830 --> 00:02:33.840 align:start position:0%
integer
 

00:02:33.840 --> 00:02:36.150 align:start position:0%
integer
and<00:02:34.000><c> we</c><00:02:34.160><c> can</c><00:02:34.319><c> do</c><00:02:34.480><c> that</c><00:02:34.720><c> by</c><00:02:34.959><c> calling</c><00:02:35.360><c> the</c><00:02:35.599><c> 2i</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
and we can do that by calling the 2i
 

00:02:36.160 --> 00:02:37.270 align:start position:0%
and we can do that by calling the 2i
method

00:02:37.270 --> 00:02:37.280 align:start position:0%
method
 

00:02:37.280 --> 00:02:39.990 align:start position:0%
method
on<00:02:37.360><c> the</c><00:02:37.519><c> user</c><00:02:37.920><c> input</c><00:02:38.239><c> string</c><00:02:39.280><c> now</c><00:02:39.519><c> the</c><00:02:39.680><c> user</c>

00:02:39.990 --> 00:02:40.000 align:start position:0%
on the user input string now the user
 

00:02:40.000 --> 00:02:42.470 align:start position:0%
on the user input string now the user
input<00:02:40.480><c> is</c><00:02:40.720><c> stored</c><00:02:41.120><c> in</c><00:02:41.200><c> the</c><00:02:41.280><c> variable</c><00:02:41.840><c> age</c><00:02:42.239><c> as</c>

00:02:42.470 --> 00:02:42.480 align:start position:0%
input is stored in the variable age as
 

00:02:42.480 --> 00:02:44.390 align:start position:0%
input is stored in the variable age as
an<00:02:42.640><c> integer</c>

00:02:44.390 --> 00:02:44.400 align:start position:0%
an integer
 

00:02:44.400 --> 00:02:50.630 align:start position:0%
an integer
let's<00:02:44.640><c> run</c><00:02:44.879><c> our</c><00:02:45.040><c> code</c><00:02:48.840><c> again</c>

00:02:50.630 --> 00:02:50.640 align:start position:0%
let's run our code again
 

00:02:50.640 --> 00:02:52.309 align:start position:0%
let's run our code again
and<00:02:50.720><c> this</c><00:02:50.959><c> time</c><00:02:51.200><c> we</c><00:02:51.360><c> see</c><00:02:51.599><c> the</c><00:02:51.760><c> appropriate</c>

00:02:52.309 --> 00:02:52.319 align:start position:0%
and this time we see the appropriate
 

00:02:52.319 --> 00:03:02.710 align:start position:0%
and this time we see the appropriate
output

00:03:02.710 --> 00:03:02.720 align:start position:0%
 
 

00:03:02.720 --> 00:03:05.270 align:start position:0%
 
so<00:03:02.959><c> we</c><00:03:03.120><c> also</c><00:03:03.440><c> want</c><00:03:03.599><c> to</c><00:03:03.840><c> output</c><00:03:04.239><c> the</c><00:03:04.400><c> user's</c><00:03:04.959><c> age</c>

00:03:05.270 --> 00:03:05.280 align:start position:0%
so we also want to output the user's age
 

00:03:05.280 --> 00:03:06.390 align:start position:0%
so we also want to output the user's age
in<00:03:05.599><c> 20</c>

00:03:06.390 --> 00:03:06.400 align:start position:0%
in 20
 

00:03:06.400 --> 00:03:16.229 align:start position:0%
in 20
30<00:03:06.879><c> and</c><00:03:07.040><c> 40</c><00:03:07.440><c> years</c>

00:03:16.229 --> 00:03:16.239 align:start position:0%
 
 

00:03:16.239 --> 00:03:22.229 align:start position:0%
 
we'll<00:03:16.400><c> run</c><00:03:16.640><c> our</c><00:03:16.800><c> code</c><00:03:17.040><c> one</c><00:03:17.200><c> more</c><00:03:17.440><c> time</c>

00:03:22.229 --> 00:03:22.239 align:start position:0%
 
 

00:03:22.239 --> 00:03:28.949 align:start position:0%
 
and<00:03:22.400><c> we</c><00:03:22.560><c> see</c><00:03:22.720><c> the</c><00:03:22.959><c> expected</c><00:03:23.519><c> output</c>

00:03:28.949 --> 00:03:28.959 align:start position:0%
 
 

00:03:28.959 --> 00:03:31.110 align:start position:0%
 
be<00:03:29.200><c> sure</c><00:03:29.440><c> to</c><00:03:29.599><c> remember</c><00:03:30.000><c> that</c><00:03:30.239><c> user</c><00:03:30.640><c> input</c>

00:03:31.110 --> 00:03:31.120 align:start position:0%
be sure to remember that user input
 

00:03:31.120 --> 00:03:41.360 align:start position:0%
be sure to remember that user input
always<00:03:31.440><c> comes</c><00:03:31.680><c> in</c><00:03:31.840><c> as</c><00:03:32.000><c> a</c><00:03:38.360><c> string</c>

