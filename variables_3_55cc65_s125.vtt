WEBVTT
Kind: captions
Language: en

00:00:04.160 --> 00:00:05.030 align:start position:0%
 
we<00:00:04.319><c> need</c><00:00:04.560><c> to</c>

00:00:05.030 --> 00:00:05.040 align:start position:0%
we need to
 

00:00:05.040 --> 00:00:08.070 align:start position:0%
we need to
add<00:00:05.359><c> some</c><00:00:05.600><c> more</c><00:00:06.000><c> code</c><00:00:06.399><c> to</c><00:00:06.720><c> our</c><00:00:06.960><c> name.rb</c>

00:00:08.070 --> 00:00:08.080 align:start position:0%
add some more code to our name.rb
 

00:00:08.080 --> 00:00:10.470 align:start position:0%
add some more code to our name.rb
file<00:00:09.200><c> that</c><00:00:09.360><c> will</c><00:00:09.599><c> print</c><00:00:09.840><c> the</c><00:00:10.000><c> name</c><00:00:10.240><c> of</c><00:00:10.320><c> the</c>

00:00:10.470 --> 00:00:10.480 align:start position:0%
file that will print the name of the
 

00:00:10.480 --> 00:00:12.789 align:start position:0%
file that will print the name of the
user<00:00:10.960><c> 10</c><00:00:11.280><c> times</c>

00:00:12.789 --> 00:00:12.799 align:start position:0%
user 10 times
 

00:00:12.799 --> 00:00:17.910 align:start position:0%
user 10 times
let's<00:00:13.040><c> run</c><00:00:13.280><c> our</c><00:00:13.440><c> name.rb</c><00:00:14.240><c> file</c><00:00:14.559><c> as</c><00:00:14.719><c> it</c><00:00:14.920><c> is</c>

00:00:17.910 --> 00:00:17.920 align:start position:0%
let's run our name.rb file as it is
 

00:00:17.920 --> 00:00:21.189 align:start position:0%
let's run our name.rb file as it is
we're<00:00:18.160><c> prompted</c><00:00:18.640><c> for</c><00:00:18.880><c> our</c><00:00:19.039><c> name</c>

00:00:21.189 --> 00:00:21.199 align:start position:0%
we're prompted for our name
 

00:00:21.199 --> 00:00:23.189 align:start position:0%
we're prompted for our name
i'll<00:00:21.439><c> input</c><00:00:21.920><c> bob</c><00:00:22.320><c> and</c><00:00:22.400><c> then</c><00:00:22.560><c> the</c><00:00:22.800><c> program</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
i'll input bob and then the program
 

00:00:23.199 --> 00:00:26.470 align:start position:0%
i'll input bob and then the program
greets<00:00:23.600><c> me</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
 
 

00:00:26.480 --> 00:00:29.830 align:start position:0%
 
going<00:00:26.800><c> back</c><00:00:27.039><c> to</c><00:00:27.359><c> our</c><00:00:27.519><c> name.rb</c><00:00:28.480><c> file</c><00:00:29.359><c> we</c><00:00:29.599><c> want</c>

00:00:29.830 --> 00:00:29.840 align:start position:0%
going back to our name.rb file we want
 

00:00:29.840 --> 00:00:30.390 align:start position:0%
going back to our name.rb file we want
to

00:00:30.390 --> 00:00:30.400 align:start position:0%
to
 

00:00:30.400 --> 00:00:33.430 align:start position:0%
to
output<00:00:31.039><c> the</c><00:00:31.359><c> value</c><00:00:32.079><c> referenced</c><00:00:32.640><c> by</c><00:00:32.960><c> the</c><00:00:33.120><c> local</c>

00:00:33.430 --> 00:00:33.440 align:start position:0%
output the value referenced by the local
 

00:00:33.440 --> 00:00:34.549 align:start position:0%
output the value referenced by the local
variable<00:00:34.079><c> name</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
variable name
 

00:00:34.559 --> 00:00:38.150 align:start position:0%
variable name
10<00:00:34.880><c> times</c><00:00:36.559><c> and</c><00:00:36.800><c> to</c><00:00:37.040><c> output</c><00:00:37.440><c> the</c><00:00:37.600><c> name</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
10 times and to output the name
 

00:00:38.160 --> 00:00:41.750 align:start position:0%
10 times and to output the name
we<00:00:38.320><c> could</c><00:00:38.640><c> simply</c><00:00:39.120><c> invoke</c><00:00:39.520><c> the</c><00:00:39.680><c> put</c><00:00:39.920><c> s</c><00:00:40.160><c> method</c>

00:00:41.750 --> 00:00:41.760 align:start position:0%
we could simply invoke the put s method
 

00:00:41.760 --> 00:00:44.790 align:start position:0%
we could simply invoke the put s method
and<00:00:42.000><c> pass</c><00:00:42.239><c> the</c><00:00:42.399><c> name</c><00:00:42.640><c> variable</c><00:00:43.200><c> to</c><00:00:43.440><c> it</c><00:00:44.320><c> now</c>

00:00:44.790 --> 00:00:44.800 align:start position:0%
and pass the name variable to it now
 

00:00:44.800 --> 00:00:46.869 align:start position:0%
and pass the name variable to it now
in<00:00:44.960><c> this</c><00:00:45.200><c> case</c><00:00:45.520><c> we</c><00:00:45.680><c> want</c><00:00:45.840><c> to</c><00:00:46.079><c> print</c><00:00:46.320><c> the</c><00:00:46.480><c> name</c>

00:00:46.869 --> 00:00:46.879 align:start position:0%
in this case we want to print the name
 

00:00:46.879 --> 00:00:48.470 align:start position:0%
in this case we want to print the name
10<00:00:47.200><c> times</c>

00:00:48.470 --> 00:00:48.480 align:start position:0%
10 times
 

00:00:48.480 --> 00:00:51.029 align:start position:0%
10 times
but<00:00:48.640><c> we</c><00:00:48.879><c> don't</c><00:00:49.120><c> want</c><00:00:49.360><c> to</c><00:00:50.000><c> write</c><00:00:50.239><c> the</c><00:00:50.480><c> same</c><00:00:50.719><c> line</c>

00:00:51.029 --> 00:00:51.039 align:start position:0%
but we don't want to write the same line
 

00:00:51.039 --> 00:00:51.670 align:start position:0%
but we don't want to write the same line
of<00:00:51.199><c> code</c>

00:00:51.670 --> 00:00:51.680 align:start position:0%
of code
 

00:00:51.680 --> 00:00:55.029 align:start position:0%
of code
10<00:00:51.920><c> times</c><00:00:52.320><c> in</c><00:00:52.399><c> our</c><00:00:52.640><c> file</c><00:00:54.399><c> so</c><00:00:54.559><c> we</c><00:00:54.719><c> need</c><00:00:54.879><c> to</c>

00:00:55.029 --> 00:00:55.039 align:start position:0%
10 times in our file so we need to
 

00:00:55.039 --> 00:00:57.029 align:start position:0%
10 times in our file so we need to
figure<00:00:55.360><c> out</c><00:00:55.520><c> how</c><00:00:55.760><c> to</c><00:00:56.000><c> execute</c><00:00:56.559><c> the</c><00:00:56.719><c> code</c>

00:00:57.029 --> 00:00:57.039 align:start position:0%
figure out how to execute the code
 

00:00:57.039 --> 00:00:58.389 align:start position:0%
figure out how to execute the code
written<00:00:57.440><c> on</c><00:00:57.600><c> line</c><00:00:57.920><c> 5</c>

00:00:58.389 --> 00:00:58.399 align:start position:0%
written on line 5
 

00:00:58.399 --> 00:01:02.229 align:start position:0%
written on line 5
10<00:00:58.719><c> times</c><00:00:59.600><c> but</c><00:00:59.840><c> only</c><00:01:00.160><c> write</c><00:01:00.480><c> it</c><00:01:00.719><c> once</c>

00:01:02.229 --> 00:01:02.239 align:start position:0%
10 times but only write it once
 

00:01:02.239 --> 00:01:05.189 align:start position:0%
10 times but only write it once
to<00:01:02.399><c> do</c><00:01:02.640><c> that</c><00:01:03.199><c> we</c><00:01:03.359><c> can</c><00:01:03.600><c> use</c><00:01:03.840><c> the</c><00:01:04.159><c> integer</c><00:01:04.720><c> times</c>

00:01:05.189 --> 00:01:05.199 align:start position:0%
to do that we can use the integer times
 

00:01:05.199 --> 00:01:09.429 align:start position:0%
to do that we can use the integer times
method

00:01:09.429 --> 00:01:09.439 align:start position:0%
 
 

00:01:09.439 --> 00:01:13.429 align:start position:0%
 
we<00:01:09.680><c> invoke</c><00:01:10.080><c> the</c><00:01:10.320><c> times</c><00:01:10.720><c> method</c><00:01:11.200><c> on</c><00:01:11.360><c> an</c><00:01:11.520><c> integer</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
we invoke the times method on an integer
 

00:01:13.439 --> 00:01:17.350 align:start position:0%
we invoke the times method on an integer
in<00:01:13.600><c> this</c><00:01:13.920><c> case</c><00:01:14.479><c> 10</c>

00:01:17.350 --> 00:01:17.360 align:start position:0%
 
 

00:01:17.360 --> 00:01:20.630 align:start position:0%
 
and<00:01:17.600><c> we</c><00:01:17.759><c> pass</c><00:01:18.080><c> it</c><00:01:18.240><c> a</c><00:01:18.320><c> block</c>

00:01:20.630 --> 00:01:20.640 align:start position:0%
and we pass it a block
 

00:01:20.640 --> 00:01:22.550 align:start position:0%
and we pass it a block
and<00:01:20.880><c> in</c><00:01:21.040><c> our</c><00:01:21.200><c> block</c><00:01:21.600><c> we'll</c><00:01:21.840><c> put</c><00:01:22.000><c> the</c><00:01:22.159><c> code</c><00:01:22.400><c> that</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
and in our block we'll put the code that
 

00:01:22.560 --> 00:01:24.390 align:start position:0%
and in our block we'll put the code that
we<00:01:22.640><c> want</c><00:01:22.880><c> to</c><00:01:23.040><c> execute</c>

00:01:24.390 --> 00:01:24.400 align:start position:0%
we want to execute
 

00:01:24.400 --> 00:01:27.109 align:start position:0%
we want to execute
when<00:01:24.640><c> this</c><00:01:24.880><c> code</c><00:01:25.200><c> runs</c><00:01:25.920><c> ruby</c><00:01:26.320><c> will</c><00:01:26.560><c> iterate</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
when this code runs ruby will iterate
 

00:01:27.119 --> 00:01:27.910 align:start position:0%
when this code runs ruby will iterate
through<00:01:27.280><c> the</c><00:01:27.439><c> block</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
through the block
 

00:01:27.920 --> 00:01:30.950 align:start position:0%
through the block
10<00:01:28.240><c> times</c><00:01:29.600><c> this</c><00:01:29.840><c> means</c><00:01:30.159><c> that</c><00:01:30.320><c> the</c><00:01:30.560><c> code</c><00:01:30.799><c> on</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
10 times this means that the code on
 

00:01:30.960 --> 00:01:31.830 align:start position:0%
10 times this means that the code on
line<00:01:31.280><c> 8</c>

00:01:31.830 --> 00:01:31.840 align:start position:0%
line 8
 

00:01:31.840 --> 00:01:34.069 align:start position:0%
line 8
where<00:01:32.000><c> we</c><00:01:32.240><c> print</c><00:01:32.479><c> the</c><00:01:32.560><c> user's</c><00:01:33.040><c> name</c><00:01:33.680><c> will</c><00:01:33.840><c> be</c>

00:01:34.069 --> 00:01:34.079 align:start position:0%
where we print the user's name will be
 

00:01:34.079 --> 00:01:35.910 align:start position:0%
where we print the user's name will be
executed<00:01:34.720><c> 10</c><00:01:35.040><c> times</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
executed 10 times
 

00:01:35.920 --> 00:01:38.630 align:start position:0%
executed 10 times
even<00:01:36.159><c> though</c><00:01:36.400><c> we've</c><00:01:36.640><c> only</c><00:01:36.880><c> written</c><00:01:37.200><c> it</c><00:01:37.360><c> once</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
even though we've only written it once
 

00:01:38.640 --> 00:01:39.990 align:start position:0%
even though we've only written it once
so<00:01:38.799><c> let's</c><00:01:39.040><c> run</c><00:01:39.280><c> our</c><00:01:39.360><c> code</c><00:01:39.600><c> to</c><00:01:39.759><c> see</c>

00:01:39.990 --> 00:01:40.000 align:start position:0%
so let's run our code to see
 

00:01:40.000 --> 00:01:43.670 align:start position:0%
so let's run our code to see
this

00:01:43.670 --> 00:01:43.680 align:start position:0%
 
 

00:01:43.680 --> 00:01:47.990 align:start position:0%
 
i'll<00:01:44.000><c> input</c><00:01:44.479><c> bob</c><00:01:44.960><c> as</c><00:01:45.200><c> the</c><00:01:45.360><c> user's</c><00:01:45.840><c> name</c>

00:01:47.990 --> 00:01:48.000 align:start position:0%
i'll input bob as the user's name
 

00:01:48.000 --> 00:01:50.469 align:start position:0%
i'll input bob as the user's name
the<00:01:48.159><c> program</c><00:01:48.640><c> greets</c><00:01:49.040><c> us</c><00:01:49.439><c> and</c><00:01:49.600><c> then</c><00:01:49.920><c> outputs</c>

00:01:50.469 --> 00:01:50.479 align:start position:0%
the program greets us and then outputs
 

00:01:50.479 --> 00:01:52.630 align:start position:0%
the program greets us and then outputs
bob<00:01:50.880><c> 10</c><00:01:51.119><c> times</c>

00:01:52.630 --> 00:01:52.640 align:start position:0%
bob 10 times
 

00:01:52.640 --> 00:02:04.190 align:start position:0%
bob 10 times
and<00:01:52.799><c> that's</c><00:01:53.040><c> the</c><00:01:53.200><c> behavior</c><00:01:53.600><c> we</c><00:01:53.759><c> were</c>

00:02:04.190 --> 00:02:04.200 align:start position:0%
 
 

00:02:04.200 --> 00:02:07.200 align:start position:0%
 
expecting

