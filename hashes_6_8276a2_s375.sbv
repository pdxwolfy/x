0:00:04.400,0:00:06.960
we need to write a program that's going

0:00:06.640,0:00:09.200
to

0:00:06.960,0:00:10.559
print out groups of words from this

0:00:09.200,0:00:13.360
words array

0:00:10.559,0:00:15.040
that are anagrams so they have the same

0:00:13.360,0:00:16.320
letters but the letters are in a

0:00:15.040,0:00:19.439
different order

0:00:16.320,0:00:22.480
and we see a little code example in our

0:00:19.439,0:00:25.199
words array you can see that demo dome

0:00:22.480,0:00:26.960
and mode for example these are anagrams

0:00:25.199,0:00:28.640
of each other

0:00:26.960,0:00:30.000
so the first thing we need to do is just

0:00:28.640,0:00:32.000
to break down this problem

0:00:30.000,0:00:34.000
a little bit and consider how we're

0:00:32.000,0:00:36.079
going to approach it

0:00:34.000,0:00:39.600
so we've been given an array and the

0:00:36.079,0:00:42.640
first step here is simply going to be to

0:00:39.600,0:00:45.280
iterate over the array

0:00:42.640,0:00:47.680
we're going to organize these anagrams

0:00:45.280,0:00:50.399
into a hash

0:00:47.680,0:00:52.480
the key of the hash is going to be the

0:00:50.399,0:00:54.640
word alphabetically sorted

0:00:52.480,0:00:55.600
so on line one of the example code we

0:00:54.640,0:00:58.640
were given

0:00:55.600,0:01:00.160
demo would be the key and the value

0:00:58.640,0:01:02.879
associated with that key

0:01:00.160,0:01:05.760
is going to be an array of all of the

0:01:02.879,0:01:08.960
anagrams of that word

0:01:05.760,0:01:11.119
so if demo were our key

0:01:08.960,0:01:12.000
then the value associated with that key

0:01:11.119,0:01:15.840
would be an array

0:01:12.000,0:01:19.439
of the strings demo dome and mode

0:01:15.840,0:01:23.680
so in order to get our key we want to

0:01:19.439,0:01:27.200
sort each word into alphabetical order

0:01:23.680,0:01:31.119
as we iterate through this array

0:01:27.200,0:01:31.119
if this key already exists

0:01:32.640,0:01:40.560
we want to append the current word

0:01:36.880,0:01:42.960
into the value which is going to be an

0:01:40.560,0:01:42.960
array

0:01:43.119,0:01:51.840
otherwise we want to create a new key

0:01:48.560,0:01:51.840
with this sorted word

0:01:51.920,0:01:58.719
so now that we've kind of considered our

0:01:54.000,0:02:01.040
approach let's transform this into code

0:01:58.719,0:02:05.119
the first step here is simply to

0:02:01.040,0:02:05.119
initialize a result hash

0:02:05.680,0:02:09.840
and we'll populate this hash with our

0:02:07.600,0:02:12.720
key value pairs as we iterate through

0:02:09.840,0:02:12.720
the words array

0:02:14.080,0:02:20.560
we can iterate through words using each

0:02:18.319,0:02:22.720
each word is going to be passed as an

0:02:20.560,0:02:24.959
argument to the block

0:02:22.720,0:02:28.400
now the next step of our approach is to

0:02:24.959,0:02:30.560
sort each word into alphabetical order

0:02:28.400,0:02:33.120
let's hop over into irb to see how we

0:02:30.560,0:02:33.120
can do this

0:02:34.239,0:02:39.519
let's say we have the string mode we can

0:02:37.120,0:02:41.440
sort this string into alphabetical order

0:02:39.519,0:02:44.080
by splitting it into an array of

0:02:41.440,0:02:44.080
characters

0:02:44.400,0:02:49.920
calling sort to sort those characters

0:02:48.080,0:02:51.280
and then joining this array of

0:02:49.920,0:02:55.840
characters now

0:02:51.280,0:02:55.840
sorted characters back into a string

0:02:56.640,0:02:59.680
and when i hit enter you can see that

0:02:58.400,0:03:05.840
the sorted string

0:02:59.680,0:03:05.840
is demo

0:03:08.959,0:03:13.920
if i use that same code on the string

0:03:11.280,0:03:19.840
dome again we see the string demo is the

0:03:13.920,0:03:19.840
sorted result

0:03:29.760,0:03:33.920
so as we iterate through this array we

0:03:31.519,0:03:38.239
will sort the characters alphabetically

0:03:33.920,0:03:42.480
to create the keys of this result hash

0:03:38.239,0:03:42.480
and let's store that in a variable key

0:03:44.640,0:03:52.319
if our result hash already has this key

0:03:48.879,0:03:55.120
we can use the hash method has key here

0:03:52.319,0:03:55.760
which returns a boolean and we'll pass

0:03:55.120,0:03:58.840
in the

0:03:55.760,0:04:01.840
key that we assigned on line 12 as the

0:03:58.840,0:04:01.840
argument

0:04:04.720,0:04:11.519
then we want to push the current word

0:04:08.879,0:04:14.799
into the array that will be the value

0:04:11.519,0:04:17.120
associated with this key

0:04:14.799,0:04:19.359
looking up at our notes on line 7 we can

0:04:17.120,0:04:21.600
see that otherwise we simply want to

0:04:19.359,0:04:24.720
create a new key in the hash

0:04:21.600,0:04:24.720
with this sorted word

0:04:27.600,0:04:31.440
now when we create this new key we're

0:04:30.720,0:04:35.199
going to

0:04:31.440,0:04:37.199
assign its value to be an array

0:04:35.199,0:04:39.360
we'll place the current word in that

0:04:37.199,0:04:42.240
array

0:04:39.360,0:04:43.520
and this is why on line 14 we can invoke

0:04:42.240,0:04:45.919
the push method

0:04:43.520,0:04:47.120
on the value associated with an existing

0:04:45.919,0:04:49.120
key

0:04:47.120,0:04:51.919
at this point let's just output the

0:04:49.120,0:04:51.919
result hash

0:04:55.600,0:05:00.960
so we see our result hash we've got five

0:04:58.400,0:05:04.160
key value pairs

0:05:00.960,0:05:07.120
and each value is an array or a list

0:05:04.160,0:05:08.639
of the anagrams so this looks pretty

0:05:07.120,0:05:10.720
good

0:05:08.639,0:05:12.560
but looking at the example output and

0:05:10.720,0:05:15.520
the problem description

0:05:12.560,0:05:17.520
we want to output only the values here

0:05:15.520,0:05:19.199
i'm going to remove the notes that we

0:05:17.520,0:05:22.840
previously used

0:05:19.199,0:05:24.160
to make room for a little bit more code

0:05:22.840,0:05:26.639
here

0:05:24.160,0:05:28.080
we've got our list of anagrams stored in

0:05:26.639,0:05:30.960
the result hash

0:05:28.080,0:05:32.960
and we want to output only the values

0:05:30.960,0:05:36.400
only this list of anagrams

0:05:32.960,0:05:39.680
we don't need to output the key

0:05:36.400,0:05:42.880
so we can invoke the each value method

0:05:39.680,0:05:42.880
on our result hash

0:05:44.320,0:05:48.400
each value will be passed to the block

0:05:49.759,0:05:54.639
and then let's use p to output each of

0:05:53.039,0:05:56.720
these lists

0:05:54.639,0:05:58.639
we'll run our code again and we expect

0:05:56.720,0:06:01.199
our output to look like the example that

0:05:58.639,0:06:01.199
we were given

0:06:04.319,0:06:07.840
and that's what we see

