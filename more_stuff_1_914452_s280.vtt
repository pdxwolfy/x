WEBVTT
Kind: captions
Language: en

00:00:04.000 --> 00:00:05.110 align:start position:0%
 
this<00:00:04.319><c> exercise</c>

00:00:05.110 --> 00:00:05.120 align:start position:0%
this exercise
 

00:00:05.120 --> 00:00:08.150 align:start position:0%
this exercise
asks<00:00:05.440><c> us</c><00:00:05.680><c> to</c><00:00:06.080><c> write</c><00:00:06.319><c> a</c><00:00:06.480><c> program</c><00:00:07.520><c> that</c><00:00:07.759><c> checks</c>

00:00:08.150 --> 00:00:08.160 align:start position:0%
asks us to write a program that checks
 

00:00:08.160 --> 00:00:09.350 align:start position:0%
asks us to write a program that checks
if<00:00:08.400><c> the</c><00:00:08.559><c> sequence</c><00:00:09.120><c> of</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
if the sequence of
 

00:00:09.360 --> 00:00:12.629 align:start position:0%
if the sequence of
characters<00:00:10.400><c> lab</c><00:00:11.040><c> or</c><00:00:11.360><c> lab</c>

00:00:12.629 --> 00:00:12.639 align:start position:0%
characters lab or lab
 

00:00:12.639 --> 00:00:15.030 align:start position:0%
characters lab or lab
exists<00:00:13.120><c> in</c><00:00:13.200><c> the</c><00:00:13.440><c> following</c><00:00:14.000><c> strings</c><00:00:14.880><c> and</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
exists in the following strings and
 

00:00:15.040 --> 00:00:17.349 align:start position:0%
exists in the following strings and
we've<00:00:15.280><c> been</c><00:00:15.599><c> given</c><00:00:16.000><c> five</c><00:00:16.400><c> strings</c>

00:00:17.349 --> 00:00:17.359 align:start position:0%
we've been given five strings
 

00:00:17.359 --> 00:00:19.830 align:start position:0%
we've been given five strings
if<00:00:17.520><c> the</c><00:00:17.760><c> sequence</c><00:00:18.240><c> of</c><00:00:18.400><c> characters</c><00:00:19.039><c> does</c><00:00:19.359><c> exist</c>

00:00:19.830 --> 00:00:19.840 align:start position:0%
if the sequence of characters does exist
 

00:00:19.840 --> 00:00:22.870 align:start position:0%
if the sequence of characters does exist
we<00:00:20.000><c> want</c><00:00:20.160><c> to</c><00:00:20.320><c> print</c><00:00:20.640><c> the</c><00:00:20.800><c> word</c><00:00:21.119><c> out</c>

00:00:22.870 --> 00:00:22.880 align:start position:0%
we want to print the word out
 

00:00:22.880 --> 00:00:25.750 align:start position:0%
we want to print the word out
we<00:00:23.039><c> can</c><00:00:23.199><c> accomplish</c><00:00:23.840><c> this</c><00:00:24.160><c> using</c><00:00:24.560><c> regex</c><00:00:25.599><c> and</c>

00:00:25.750 --> 00:00:25.760 align:start position:0%
we can accomplish this using regex and
 

00:00:25.760 --> 00:00:27.589 align:start position:0%
we can accomplish this using regex and
to<00:00:26.000><c> explore</c><00:00:26.400><c> that</c><00:00:26.640><c> a</c><00:00:26.720><c> little</c><00:00:26.960><c> bit</c>

00:00:27.589 --> 00:00:27.599 align:start position:0%
to explore that a little bit
 

00:00:27.599 --> 00:00:30.870 align:start position:0%
to explore that a little bit
let's<00:00:27.920><c> jump</c><00:00:28.160><c> into</c><00:00:28.840><c> irb</c><00:00:30.560><c> so</c>

00:00:30.870 --> 00:00:30.880 align:start position:0%
let's jump into irb so
 

00:00:30.880 --> 00:00:34.630 align:start position:0%
let's jump into irb so
the<00:00:31.039><c> pattern</c><00:00:31.439><c> we</c><00:00:31.679><c> want</c><00:00:31.840><c> to</c><00:00:32.160><c> match</c>

00:00:34.630 --> 00:00:34.640 align:start position:0%
 
 

00:00:34.640 --> 00:00:38.150 align:start position:0%
 
is<00:00:34.800><c> the</c><00:00:34.960><c> sequence</c><00:00:35.520><c> of</c><00:00:35.680><c> characters</c><00:00:36.320><c> lab</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
is the sequence of characters lab
 

00:00:38.160 --> 00:00:42.229 align:start position:0%
is the sequence of characters lab
and<00:00:38.320><c> we</c><00:00:38.480><c> can</c><00:00:38.719><c> use</c><00:00:38.960><c> the</c><00:00:39.200><c> regex</c><00:00:39.840><c> match</c><00:00:40.239><c> operator</c>

00:00:42.229 --> 00:00:42.239 align:start position:0%
and we can use the regex match operator
 

00:00:42.239 --> 00:00:43.990 align:start position:0%
and we can use the regex match operator
let's<00:00:42.480><c> check</c><00:00:42.719><c> this</c><00:00:42.960><c> pattern</c><00:00:43.440><c> against</c><00:00:43.760><c> the</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
let's check this pattern against the
 

00:00:44.000 --> 00:00:47.670 align:start position:0%
let's check this pattern against the
string<00:00:44.640><c> laboratory</c><00:00:45.520><c> first</c>

00:00:47.670 --> 00:00:47.680 align:start position:0%
string laboratory first
 

00:00:47.680 --> 00:00:49.990 align:start position:0%
string laboratory first
now<00:00:48.079><c> looking</c><00:00:48.399><c> at</c><00:00:48.559><c> the</c><00:00:48.719><c> documentation</c><00:00:49.760><c> for</c>

00:00:49.990 --> 00:00:50.000 align:start position:0%
now looking at the documentation for
 

00:00:50.000 --> 00:00:51.990 align:start position:0%
now looking at the documentation for
this<00:00:50.239><c> regex</c><00:00:50.800><c> match</c><00:00:51.120><c> operator</c>

00:00:51.990 --> 00:00:52.000 align:start position:0%
this regex match operator
 

00:00:52.000 --> 00:00:54.389 align:start position:0%
this regex match operator
we<00:00:52.160><c> can</c><00:00:52.320><c> see</c><00:00:52.480><c> that</c><00:00:52.719><c> it</c><00:00:52.800><c> will</c><00:00:53.039><c> return</c><00:00:53.600><c> either</c><00:00:54.160><c> an</c>

00:00:54.389 --> 00:00:54.399 align:start position:0%
we can see that it will return either an
 

00:00:54.399 --> 00:00:55.350 align:start position:0%
we can see that it will return either an
integer

00:00:55.350 --> 00:00:55.360 align:start position:0%
integer
 

00:00:55.360 --> 00:00:58.630 align:start position:0%
integer
or<00:00:55.680><c> nil</c><00:00:57.039><c> let's</c><00:00:57.360><c> see</c><00:00:57.520><c> what's</c><00:00:57.840><c> returned</c><00:00:58.320><c> when</c><00:00:58.480><c> we</c>

00:00:58.630 --> 00:00:58.640 align:start position:0%
or nil let's see what's returned when we
 

00:00:58.640 --> 00:01:02.389 align:start position:0%
or nil let's see what's returned when we
run<00:00:58.879><c> this</c><00:00:59.120><c> code</c>

00:01:02.389 --> 00:01:02.399 align:start position:0%
 
 

00:01:02.399 --> 00:01:06.390 align:start position:0%
 
0<00:01:02.800><c> is</c><00:01:02.960><c> returned</c><00:01:04.320><c> 0</c><00:01:04.799><c> is</c><00:01:04.960><c> the</c><00:01:05.280><c> index</c><00:01:05.840><c> at</c><00:01:06.080><c> which</c>

00:01:06.390 --> 00:01:06.400 align:start position:0%
0 is returned 0 is the index at which
 

00:01:06.400 --> 00:01:08.310 align:start position:0%
0 is returned 0 is the index at which
that<00:01:06.640><c> match</c><00:01:07.040><c> begins</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
that match begins
 

00:01:08.320 --> 00:01:13.350 align:start position:0%
that match begins
if<00:01:08.479><c> we</c><00:01:08.799><c> instead</c><00:01:09.439><c> check</c><00:01:09.680><c> the</c><00:01:09.920><c> string</c><00:01:10.840><c> elaborate</c>

00:01:13.350 --> 00:01:13.360 align:start position:0%
if we instead check the string elaborate
 

00:01:13.360 --> 00:01:16.550 align:start position:0%
if we instead check the string elaborate
we'll<00:01:13.600><c> see</c><00:01:13.760><c> a</c><00:01:13.920><c> different</c><00:01:14.240><c> integer</c><00:01:14.720><c> returned</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
we'll see a different integer returned
 

00:01:16.560 --> 00:01:18.870 align:start position:0%
we'll see a different integer returned
this<00:01:16.799><c> time</c><00:01:17.040><c> we</c><00:01:17.200><c> see</c><00:01:17.520><c> one</c><00:01:18.240><c> because</c><00:01:18.640><c> that</c>

00:01:18.870 --> 00:01:18.880 align:start position:0%
this time we see one because that
 

00:01:18.880 --> 00:01:21.270 align:start position:0%
this time we see one because that
sequence<00:01:19.280><c> of</c><00:01:19.520><c> characters</c><00:01:20.080><c> begins</c><00:01:20.560><c> at</c><00:01:20.720><c> index</c>

00:01:21.270 --> 00:01:21.280 align:start position:0%
sequence of characters begins at index
 

00:01:21.280 --> 00:01:22.550 align:start position:0%
sequence of characters begins at index
one

00:01:22.550 --> 00:01:22.560 align:start position:0%
one
 

00:01:22.560 --> 00:01:26.070 align:start position:0%
one
now<00:01:22.720><c> what</c><00:01:22.960><c> happens</c><00:01:23.520><c> if</c><00:01:23.759><c> we</c><00:01:24.640><c> check</c><00:01:24.880><c> the</c><00:01:25.119><c> string</c>

00:01:26.070 --> 00:01:26.080 align:start position:0%
now what happens if we check the string
 

00:01:26.080 --> 00:01:29.350 align:start position:0%
now what happens if we check the string
experiment

00:01:29.350 --> 00:01:29.360 align:start position:0%
 
 

00:01:29.360 --> 00:01:31.350 align:start position:0%
 
you<00:01:29.439><c> can</c><00:01:29.680><c> see</c><00:01:29.840><c> that</c><00:01:30.000><c> we</c><00:01:30.240><c> don't</c><00:01:30.479><c> expect</c><00:01:30.880><c> a</c><00:01:31.040><c> match</c>

00:01:31.350 --> 00:01:31.360 align:start position:0%
you can see that we don't expect a match
 

00:01:31.360 --> 00:01:32.789 align:start position:0%
you can see that we don't expect a match
here

00:01:32.789 --> 00:01:32.799 align:start position:0%
here
 

00:01:32.799 --> 00:01:35.910 align:start position:0%
here
and<00:01:33.119><c> nil</c><00:01:33.439><c> is</c><00:01:33.600><c> returned</c><00:01:35.520><c> so</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
and nil is returned so
 

00:01:35.920 --> 00:01:40.390 align:start position:0%
and nil is returned so
let's<00:01:36.159><c> hop</c><00:01:36.400><c> into</c><00:01:36.720><c> our</c><00:01:36.880><c> code</c><00:01:38.840><c> editor</c>

00:01:40.390 --> 00:01:40.400 align:start position:0%
let's hop into our code editor
 

00:01:40.400 --> 00:01:44.310 align:start position:0%
let's hop into our code editor
we<00:01:40.560><c> can</c><00:01:40.720><c> write</c><00:01:40.960><c> a</c><00:01:41.119><c> method</c><00:01:42.640><c> let's</c><00:01:42.960><c> call</c><00:01:43.200><c> it</c>

00:01:44.310 --> 00:01:44.320 align:start position:0%
we can write a method let's call it
 

00:01:44.320 --> 00:01:47.510 align:start position:0%
we can write a method let's call it
check<00:01:44.720><c> in</c><00:01:45.759><c> and</c><00:01:46.000><c> we'll</c><00:01:46.240><c> pass</c><00:01:46.560><c> in</c><00:01:46.720><c> the</c><00:01:46.960><c> word</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
check in and we'll pass in the word
 

00:01:47.520 --> 00:01:51.830 align:start position:0%
check in and we'll pass in the word
that<00:01:47.680><c> we</c><00:01:47.840><c> want</c><00:01:48.079><c> to</c><00:01:48.320><c> check</c>

00:01:51.830 --> 00:01:51.840 align:start position:0%
 
 

00:01:51.840 --> 00:01:55.670 align:start position:0%
 
and<00:01:52.079><c> we</c><00:01:52.240><c> know</c><00:01:52.399><c> that</c><00:01:52.560><c> we</c><00:01:52.720><c> can</c><00:01:52.960><c> use</c><00:01:53.200><c> this</c><00:01:53.520><c> regex</c>

00:01:55.670 --> 00:01:55.680 align:start position:0%
and we know that we can use this regex
 

00:01:55.680 --> 00:01:59.270 align:start position:0%
and we know that we can use this regex
to<00:01:56.000><c> check</c><00:01:56.240><c> for</c><00:01:56.479><c> a</c><00:01:56.640><c> match</c><00:01:57.040><c> in</c><00:01:57.200><c> word</c><00:01:58.479><c> as</c><00:01:58.640><c> we</c><00:01:58.880><c> saw</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
to check for a match in word as we saw
 

00:01:59.280 --> 00:02:01.510 align:start position:0%
to check for a match in word as we saw
this<00:01:59.520><c> code</c><00:01:59.759><c> is</c><00:01:59.920><c> going</c><00:02:00.159><c> to</c><00:02:00.320><c> return</c><00:02:00.880><c> either</c><00:02:01.280><c> an</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
this code is going to return either an
 

00:02:01.520 --> 00:02:02.310 align:start position:0%
this code is going to return either an
integer

00:02:02.310 --> 00:02:02.320 align:start position:0%
integer
 

00:02:02.320 --> 00:02:06.789 align:start position:0%
integer
which<00:02:02.560><c> is</c><00:02:02.799><c> truthy</c><00:02:03.920><c> or</c><00:02:04.240><c> nil</c><00:02:04.799><c> which</c><00:02:05.040><c> is</c><00:02:05.200><c> falsey</c>

00:02:06.789 --> 00:02:06.799 align:start position:0%
which is truthy or nil which is falsey
 

00:02:06.799 --> 00:02:08.949 align:start position:0%
which is truthy or nil which is falsey
and<00:02:06.960><c> because</c><00:02:07.280><c> of</c><00:02:07.439><c> this</c><00:02:07.759><c> we</c><00:02:07.920><c> can</c><00:02:08.160><c> easily</c><00:02:08.560><c> use</c><00:02:08.720><c> an</c>

00:02:08.949 --> 00:02:08.959 align:start position:0%
and because of this we can easily use an
 

00:02:08.959 --> 00:02:14.630 align:start position:0%
and because of this we can easily use an
if<00:02:09.119><c> statement</c><00:02:09.520><c> here</c>

00:02:14.630 --> 00:02:14.640 align:start position:0%
 
 

00:02:14.640 --> 00:02:18.309 align:start position:0%
 
if<00:02:14.959><c> there</c><00:02:15.120><c> is</c><00:02:15.280><c> a</c><00:02:15.440><c> match</c><00:02:17.440><c> our</c><00:02:17.680><c> condition</c><00:02:18.160><c> will</c>

00:02:18.309 --> 00:02:18.319 align:start position:0%
if there is a match our condition will
 

00:02:18.319 --> 00:02:19.990 align:start position:0%
if there is a match our condition will
be<00:02:18.560><c> truthy</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
be truthy
 

00:02:20.000 --> 00:02:22.390 align:start position:0%
be truthy
and<00:02:20.239><c> line</c><00:02:20.480><c> three</c><00:02:20.720><c> will</c><00:02:20.879><c> be</c><00:02:21.120><c> executed</c><00:02:22.080><c> so</c><00:02:22.319><c> in</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
and line three will be executed so in
 

00:02:22.400 --> 00:02:23.270 align:start position:0%
and line three will be executed so in
that<00:02:22.640><c> case</c>

00:02:23.270 --> 00:02:23.280 align:start position:0%
that case
 

00:02:23.280 --> 00:02:27.430 align:start position:0%
that case
we<00:02:23.440><c> want</c><00:02:23.680><c> to</c><00:02:23.840><c> output</c><00:02:24.239><c> the</c><00:02:24.400><c> word</c><00:02:24.959><c> with</c><00:02:25.200><c> put</c><00:02:25.440><c> s</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
we want to output the word with put s
 

00:02:27.440 --> 00:02:32.949 align:start position:0%
we want to output the word with put s
if<00:02:27.599><c> there's</c><00:02:27.920><c> no</c><00:02:28.160><c> match</c><00:02:28.720><c> and</c><00:02:28.959><c> nil</c><00:02:29.280><c> is</c><00:02:29.440><c> returned</c>

00:02:32.949 --> 00:02:32.959 align:start position:0%
 
 

00:02:32.959 --> 00:02:34.710 align:start position:0%
 
the<00:02:33.200><c> else</c><00:02:33.519><c> branch</c><00:02:33.760><c> of</c><00:02:33.920><c> our</c><00:02:34.080><c> if</c><00:02:34.239><c> statement</c><00:02:34.560><c> will</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
the else branch of our if statement will
 

00:02:34.720 --> 00:02:37.190 align:start position:0%
the else branch of our if statement will
be<00:02:34.879><c> executed</c>

00:02:37.190 --> 00:02:37.200 align:start position:0%
be executed
 

00:02:37.200 --> 00:02:40.390 align:start position:0%
be executed
in<00:02:37.360><c> that</c><00:02:37.599><c> case</c><00:02:38.000><c> let's</c><00:02:38.239><c> just</c><00:02:38.560><c> output</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
in that case let's just output
 

00:02:40.400 --> 00:02:44.550 align:start position:0%
in that case let's just output
no<00:02:40.640><c> match</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
 
 

00:02:44.560 --> 00:02:47.910 align:start position:0%
 
let's<00:02:44.879><c> test</c><00:02:45.200><c> this</c><00:02:45.440><c> out</c>

00:02:47.910 --> 00:02:47.920 align:start position:0%
 
 

00:02:47.920 --> 00:02:49.670 align:start position:0%
 
we'll<00:02:48.239><c> invoke</c><00:02:48.720><c> our</c><00:02:48.879><c> check</c><00:02:48.879><c> check-in</c><00:02:49.280><c> method</c>

00:02:49.670 --> 00:02:49.680 align:start position:0%
we'll invoke our check check-in method
 

00:02:49.680 --> 00:02:51.830 align:start position:0%
we'll invoke our check check-in method
with<00:02:49.840><c> the</c><00:02:50.000><c> string</c><00:02:50.400><c> laboratory</c>

00:02:51.830 --> 00:02:51.840 align:start position:0%
with the string laboratory
 

00:02:51.840 --> 00:02:53.670 align:start position:0%
with the string laboratory
and<00:02:52.000><c> we</c><00:02:52.239><c> expect</c><00:02:52.640><c> that</c><00:02:52.800><c> this</c><00:02:53.040><c> will</c><00:02:53.200><c> output</c><00:02:53.519><c> the</c>

00:02:53.670 --> 00:02:53.680 align:start position:0%
and we expect that this will output the
 

00:02:53.680 --> 00:02:54.869 align:start position:0%
and we expect that this will output the
string<00:02:54.000><c> laboratory</c>

00:02:54.869 --> 00:02:54.879 align:start position:0%
string laboratory
 

00:02:54.879 --> 00:03:00.070 align:start position:0%
string laboratory
because<00:02:55.200><c> it</c><00:02:55.360><c> is</c><00:02:55.440><c> a</c><00:02:55.599><c> match</c>

00:03:00.070 --> 00:03:00.080 align:start position:0%
 
 

00:03:00.080 --> 00:03:09.589 align:start position:0%
 
and<00:03:00.319><c> it</c><00:03:02.840><c> does</c>

00:03:09.589 --> 00:03:09.599 align:start position:0%
 
 

00:03:09.599 --> 00:03:11.430 align:start position:0%
 
now<00:03:09.760><c> let's</c><00:03:10.000><c> run</c><00:03:10.239><c> our</c><00:03:10.400><c> method</c><00:03:10.800><c> with</c><00:03:11.040><c> the</c><00:03:11.200><c> other</c>

00:03:11.430 --> 00:03:11.440 align:start position:0%
now let's run our method with the other
 

00:03:11.440 --> 00:03:35.990 align:start position:0%
now let's run our method with the other
four<00:03:11.680><c> strings</c><00:03:12.080><c> passed</c><00:03:12.400><c> in</c><00:03:12.560><c> as</c><00:03:16.840><c> arguments</c>

00:03:35.990 --> 00:03:36.000 align:start position:0%
 
 

00:03:36.000 --> 00:03:37.990 align:start position:0%
 
so<00:03:36.159><c> when</c><00:03:36.400><c> we</c><00:03:36.560><c> run</c><00:03:36.799><c> our</c><00:03:36.959><c> code</c><00:03:37.280><c> we</c><00:03:37.519><c> see</c><00:03:37.680><c> that</c>

00:03:37.990 --> 00:03:38.000 align:start position:0%
so when we run our code we see that
 

00:03:38.000 --> 00:03:40.149 align:start position:0%
so when we run our code we see that
laboratory<00:03:38.959><c> and</c><00:03:39.120><c> elaborate</c>

00:03:40.149 --> 00:03:40.159 align:start position:0%
laboratory and elaborate
 

00:03:40.159 --> 00:03:42.630 align:start position:0%
laboratory and elaborate
did<00:03:40.400><c> contain</c><00:03:40.879><c> the</c><00:03:41.120><c> sequence</c><00:03:41.519><c> of</c><00:03:41.680><c> characters</c>

00:03:42.630 --> 00:03:42.640 align:start position:0%
did contain the sequence of characters
 

00:03:42.640 --> 00:03:44.949 align:start position:0%
did contain the sequence of characters
so<00:03:42.799><c> those</c><00:03:43.040><c> strings</c><00:03:43.360><c> were</c><00:03:43.599><c> output</c>

00:03:44.949 --> 00:03:44.959 align:start position:0%
so those strings were output
 

00:03:44.959 --> 00:03:46.949 align:start position:0%
so those strings were output
the<00:03:45.200><c> other</c><00:03:45.440><c> three</c><00:03:45.680><c> strings</c><00:03:46.159><c> did</c><00:03:46.319><c> not</c><00:03:46.560><c> contain</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
the other three strings did not contain
 

00:03:46.959 --> 00:03:48.789 align:start position:0%
the other three strings did not contain
the<00:03:47.040><c> sequence</c><00:03:47.519><c> of</c><00:03:47.680><c> characters</c>

00:03:48.789 --> 00:03:48.799 align:start position:0%
the sequence of characters
 

00:03:48.799 --> 00:03:54.229 align:start position:0%
the sequence of characters
and<00:03:49.040><c> so</c><00:03:49.360><c> no</c><00:03:49.599><c> match</c><00:03:49.920><c> was</c><00:03:50.239><c> output</c>

00:03:54.229 --> 00:03:54.239 align:start position:0%
 
 

00:03:54.239 --> 00:03:55.910 align:start position:0%
 
now<00:03:54.480><c> there's</c><00:03:54.799><c> one</c><00:03:55.040><c> interesting</c><00:03:55.519><c> thing</c><00:03:55.760><c> to</c>

00:03:55.910 --> 00:03:55.920 align:start position:0%
now there's one interesting thing to
 

00:03:55.920 --> 00:03:57.990 align:start position:0%
now there's one interesting thing to
note<00:03:56.159><c> here</c><00:03:56.480><c> which</c><00:03:56.720><c> is</c><00:03:56.879><c> that</c>

00:03:57.990 --> 00:03:58.000 align:start position:0%
note here which is that
 

00:03:58.000 --> 00:04:01.270 align:start position:0%
note here which is that
labyrinth<00:03:59.760><c> did</c><00:03:59.920><c> not</c><00:04:00.080><c> produce</c><00:04:00.480><c> a</c><00:04:00.640><c> match</c><00:04:00.959><c> to</c><00:04:01.120><c> our</c>

00:04:01.270 --> 00:04:01.280 align:start position:0%
labyrinth did not produce a match to our
 

00:04:01.280 --> 00:04:03.589 align:start position:0%
labyrinth did not produce a match to our
sequence<00:04:01.680><c> of</c><00:04:01.840><c> characters</c>

00:04:03.589 --> 00:04:03.599 align:start position:0%
sequence of characters
 

00:04:03.599 --> 00:04:06.309 align:start position:0%
sequence of characters
and<00:04:03.680><c> that's</c><00:04:04.000><c> because</c><00:04:04.640><c> the</c><00:04:04.959><c> l</c><00:04:05.280><c> in</c><00:04:05.439><c> labyrinth</c><00:04:06.080><c> is</c>

00:04:06.309 --> 00:04:06.319 align:start position:0%
and that's because the l in labyrinth is
 

00:04:06.319 --> 00:04:07.589 align:start position:0%
and that's because the l in labyrinth is
uppercase

00:04:07.589 --> 00:04:07.599 align:start position:0%
uppercase
 

00:04:07.599 --> 00:04:09.589 align:start position:0%
uppercase
and<00:04:07.760><c> our</c><00:04:07.920><c> sequence</c><00:04:08.400><c> of</c><00:04:08.560><c> characters</c><00:04:09.360><c> is</c>

00:04:09.589 --> 00:04:09.599 align:start position:0%
and our sequence of characters is
 

00:04:09.599 --> 00:04:11.509 align:start position:0%
and our sequence of characters is
specifically<00:04:10.319><c> looking</c><00:04:10.799><c> for</c>

00:04:11.509 --> 00:04:11.519 align:start position:0%
specifically looking for
 

00:04:11.519 --> 00:04:15.270 align:start position:0%
specifically looking for
a<00:04:11.680><c> lowercase</c><00:04:12.480><c> l</c><00:04:13.680><c> for</c><00:04:14.000><c> case</c><00:04:14.400><c> insensitive</c>

00:04:15.270 --> 00:04:15.280 align:start position:0%
a lowercase l for case insensitive
 

00:04:15.280 --> 00:04:16.069 align:start position:0%
a lowercase l for case insensitive
matches

00:04:16.069 --> 00:04:16.079 align:start position:0%
matches
 

00:04:16.079 --> 00:04:20.789 align:start position:0%
matches
we<00:04:16.239><c> can</c><00:04:16.479><c> use</c><00:04:16.799><c> the</c><00:04:17.120><c> i</c><00:04:17.519><c> option</c><00:04:18.320><c> with</c><00:04:18.560><c> our</c><00:04:18.799><c> regex</c>

00:04:20.789 --> 00:04:20.799 align:start position:0%
we can use the i option with our regex
 

00:04:20.799 --> 00:04:26.830 align:start position:0%
we can use the i option with our regex
now<00:04:20.959><c> when</c><00:04:21.120><c> we</c><00:04:21.280><c> run</c><00:04:21.519><c> our</c><00:04:21.680><c> code</c><00:04:22.000><c> we'll</c><00:04:22.240><c> see</c><00:04:22.560><c> three</c>

00:04:26.830 --> 00:04:26.840 align:start position:0%
 
 

00:04:26.840 --> 00:04:28.870 align:start position:0%
 
matches

00:04:28.870 --> 00:04:28.880 align:start position:0%
matches
 

00:04:28.880 --> 00:04:42.720 align:start position:0%
matches
and<00:04:28.960><c> that's</c><00:04:29.199><c> what</c><00:04:29.360><c> we</c><00:04:39.720><c> see</c>

