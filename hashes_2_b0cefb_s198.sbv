0:00:03.439,0:00:06.240
we're going to

0:00:04.240,0:00:09.120
take a look at the documentation for

0:00:06.240,0:00:11.040
ruby's merge method

0:00:09.120,0:00:12.240
we'll see that there are two merge

0:00:11.040,0:00:14.960
methods

0:00:12.240,0:00:16.160
one has a bang or an exclamation mark at

0:00:14.960,0:00:18.240
the end

0:00:16.160,0:00:20.000
so we're going to write a little bit of

0:00:18.240,0:00:22.480
code to see the difference between these

0:00:20.000,0:00:24.960
two methods

0:00:22.480,0:00:26.000
we've got two hashes on lines one and

0:00:24.960,0:00:29.840
two of our

0:00:26.000,0:00:32.320
text editor cat and weight

0:00:29.840,0:00:35.280
and each of these hashes just has one

0:00:32.320,0:00:35.280
key value pair

0:00:37.360,0:00:42.840
so let's output the return value of

0:00:40.239,0:00:45.760
calling merge on the cat

0:00:42.840,0:00:48.320
hash and we'll pass in weight as the

0:00:45.760,0:00:48.320
argument

0:00:50.559,0:00:55.440
running our code you can see that this

0:00:52.399,0:00:59.039
returns a new hash

0:00:55.440,0:01:01.120
with both key value pairs so the calling

0:00:59.039,0:01:02.239
hash and the hash that was passed in as

0:01:01.120,0:01:05.600
an argument

0:01:02.239,0:01:12.000
have been merged into one hash with

0:01:05.600,0:01:14.640
all key value pairs

0:01:12.000,0:01:15.840
we can see that this merge returns a new

0:01:14.640,0:01:19.920
array

0:01:15.840,0:01:24.799
by then outputting cat

0:01:19.920,0:01:24.799
and weight after we invoke this merge

0:01:24.840,0:01:29.439
method

0:01:27.520,0:01:30.560
you can see that although the merge

0:01:29.439,0:01:33.680
method returned

0:01:30.560,0:01:36.000
a new array with both key value pairs as

0:01:33.680,0:01:38.720
seen on the first line of output

0:01:36.000,0:01:41.840
the original hashes cat and weight were

0:01:38.720,0:01:41.840
not changed

0:01:42.720,0:01:46.320
so this merge the merge without a bang

0:01:45.119,0:01:50.079
is not destructive

0:01:46.320,0:01:50.079
it simply returns a new hash

0:01:50.960,0:01:55.840
now i'm going to comment out this code

0:01:56.640,0:02:01.360
and let's demonstrate the use of merge

0:01:58.799,0:02:01.360
with a bang

0:02:04.719,0:02:08.239
again we'll output the result of

0:02:06.719,0:02:10.640
invoking merge

0:02:08.239,0:02:11.840
on cat and passing in weight as an

0:02:10.640,0:02:13.599
argument

0:02:11.840,0:02:16.560
but this time we're invoking the merge

0:02:13.599,0:02:16.560
method with a bang

0:02:19.599,0:02:22.879
so we see the same output here the

0:02:21.840,0:02:24.879
returned hash

0:02:22.879,0:02:25.920
includes the key value pairs from both

0:02:24.879,0:02:29.120
the calling hash

0:02:25.920,0:02:29.120
and the argument hash

0:02:31.840,0:02:36.239
let's output cat and weight below this

0:02:34.720,0:02:38.640
and now we'll see something a little bit

0:02:36.239,0:02:38.640
different

0:02:40.160,0:02:43.760
on line two is where we output the cat

0:02:42.800,0:02:45.599
hash

0:02:43.760,0:02:48.400
you can see that this hash has been

0:02:45.599,0:02:50.319
permanently modified or mutated

0:02:48.400,0:02:53.519
that's because merge with a bang is a

0:02:50.319,0:02:53.519
destructive method

0:02:53.760,0:02:57.200
the hash we pass in as an argument

0:02:56.080,0:03:00.319
weight

0:02:57.200,0:03:01.280
is not modified or mutated however the

0:03:00.319,0:03:04.400
calling hash

0:03:01.280,0:03:07.040
cat is so the difference here

0:03:04.400,0:03:08.159
is that merge without the bank returns a

0:03:07.040,0:03:10.800
new hash

0:03:08.159,0:03:19.840
merge with the bank is destructive and

0:03:10.800,0:03:19.840
mutates the calling hash

