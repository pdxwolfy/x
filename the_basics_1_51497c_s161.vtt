WEBVTT
Kind: captions
Language: en

00:00:03.760 --> 00:00:06.550 align:start position:0%
 
this<00:00:04.080><c> exercise</c><00:00:04.799><c> has</c><00:00:05.120><c> asked</c><00:00:05.520><c> us</c><00:00:05.759><c> to</c>

00:00:06.550 --> 00:00:06.560 align:start position:0%
this exercise has asked us to
 

00:00:06.560 --> 00:00:09.589 align:start position:0%
this exercise has asked us to
add<00:00:06.960><c> two</c><00:00:07.359><c> strings</c><00:00:07.839><c> together</c><00:00:09.040><c> so</c><00:00:09.200><c> we're</c><00:00:09.440><c> going</c>

00:00:09.589 --> 00:00:09.599 align:start position:0%
add two strings together so we're going
 

00:00:09.599 --> 00:00:10.549 align:start position:0%
add two strings together so we're going
to<00:00:09.840><c> return</c>

00:00:10.549 --> 00:00:10.559 align:start position:0%
to return
 

00:00:10.559 --> 00:00:14.910 align:start position:0%
to return
a<00:00:10.800><c> first</c><00:00:11.120><c> name</c><00:00:11.440><c> and</c><00:00:11.599><c> a</c><00:00:11.759><c> last</c><00:00:12.080><c> name</c><00:00:12.559><c> as</c><00:00:12.719><c> a</c><00:00:12.880><c> single</c>

00:00:14.910 --> 00:00:14.920 align:start position:0%
a first name and a last name as a single
 

00:00:14.920 --> 00:00:16.150 align:start position:0%
a first name and a last name as a single
string

00:00:16.150 --> 00:00:16.160 align:start position:0%
string
 

00:00:16.160 --> 00:00:18.870 align:start position:0%
string
let's<00:00:16.480><c> initialize</c><00:00:17.279><c> a</c><00:00:17.520><c> local</c><00:00:17.920><c> variable</c><00:00:18.480><c> first</c>

00:00:18.870 --> 00:00:18.880 align:start position:0%
let's initialize a local variable first
 

00:00:18.880 --> 00:00:22.310 align:start position:0%
let's initialize a local variable first
name

00:00:22.310 --> 00:00:22.320 align:start position:0%
 
 

00:00:22.320 --> 00:00:27.750 align:start position:0%
 
john<00:00:23.600><c> and</c><00:00:24.160><c> last</c><00:00:24.480><c> name</c><00:00:24.800><c> do</c>

00:00:27.750 --> 00:00:27.760 align:start position:0%
 
 

00:00:27.760 --> 00:00:29.910 align:start position:0%
 
both<00:00:28.080><c> of</c><00:00:28.160><c> these</c><00:00:28.400><c> local</c><00:00:28.720><c> variables</c><00:00:29.279><c> reference</c>

00:00:29.910 --> 00:00:29.920 align:start position:0%
both of these local variables reference
 

00:00:29.920 --> 00:00:31.669 align:start position:0%
both of these local variables reference
strings<00:00:30.560><c> and</c><00:00:30.720><c> we</c><00:00:30.880><c> want</c><00:00:31.199><c> to</c>

00:00:31.669 --> 00:00:31.679 align:start position:0%
strings and we want to
 

00:00:31.679 --> 00:00:34.069 align:start position:0%
strings and we want to
add<00:00:32.000><c> these</c><00:00:32.239><c> two</c><00:00:32.559><c> strings</c><00:00:32.960><c> together</c><00:00:33.840><c> and</c>

00:00:34.069 --> 00:00:34.079 align:start position:0%
add these two strings together and
 

00:00:34.079 --> 00:00:36.229 align:start position:0%
add these two strings together and
return<00:00:34.480><c> a</c><00:00:34.640><c> single</c><00:00:35.040><c> string</c>

00:00:36.229 --> 00:00:36.239 align:start position:0%
return a single string
 

00:00:36.239 --> 00:00:38.950 align:start position:0%
return a single string
we<00:00:36.399><c> can</c><00:00:36.640><c> use</c><00:00:37.200><c> simple</c><00:00:37.680><c> string</c><00:00:38.000><c> concatenation</c>

00:00:38.950 --> 00:00:38.960 align:start position:0%
we can use simple string concatenation
 

00:00:38.960 --> 00:00:41.910 align:start position:0%
we can use simple string concatenation
to<00:00:39.120><c> do</c><00:00:39.360><c> this</c>

00:00:41.910 --> 00:00:41.920 align:start position:0%
 
 

00:00:41.920 --> 00:00:48.310 align:start position:0%
 
we<00:00:42.160><c> can</c><00:00:42.320><c> use</c><00:00:42.559><c> the</c><00:00:42.719><c> plus</c><00:00:43.040><c> sign</c>

00:00:48.310 --> 00:00:48.320 align:start position:0%
 
 

00:00:48.320 --> 00:00:50.389 align:start position:0%
 
to<00:00:48.559><c> add</c><00:00:48.879><c> the</c><00:00:49.039><c> string</c><00:00:49.360><c> reference</c><00:00:49.840><c> by</c><00:00:50.079><c> first</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
to add the string reference by first
 

00:00:50.399 --> 00:00:52.389 align:start position:0%
to add the string reference by first
name<00:00:50.719><c> and</c><00:00:50.879><c> the</c><00:00:51.039><c> string</c><00:00:51.440><c> reference</c><00:00:51.840><c> by</c><00:00:52.079><c> last</c>

00:00:52.389 --> 00:00:52.399 align:start position:0%
name and the string reference by last
 

00:00:52.399 --> 00:00:54.069 align:start position:0%
name and the string reference by last
name<00:00:52.640><c> together</c>

00:00:54.069 --> 00:00:54.079 align:start position:0%
name together
 

00:00:54.079 --> 00:00:55.750 align:start position:0%
name together
there's<00:00:54.320><c> a</c><00:00:54.480><c> problem</c><00:00:54.879><c> with</c><00:00:55.120><c> how</c><00:00:55.280><c> we've</c><00:00:55.440><c> written</c>

00:00:55.750 --> 00:00:55.760 align:start position:0%
there's a problem with how we've written
 

00:00:55.760 --> 00:00:57.510 align:start position:0%
there's a problem with how we've written
our<00:00:55.920><c> code</c><00:00:56.160><c> on</c><00:00:56.320><c> line</c><00:00:56.719><c> 4</c><00:00:57.039><c> though</c>

00:00:57.510 --> 00:00:57.520 align:start position:0%
our code on line 4 though
 

00:00:57.520 --> 00:00:59.510 align:start position:0%
our code on line 4 though
and<00:00:57.760><c> we</c><00:00:58.000><c> can</c><00:00:58.160><c> see</c><00:00:58.399><c> that</c><00:00:58.719><c> if</c><00:00:58.879><c> we</c><00:00:59.039><c> run</c><00:00:59.280><c> this</c>

00:00:59.510 --> 00:00:59.520 align:start position:0%
and we can see that if we run this
 

00:00:59.520 --> 00:01:05.189 align:start position:0%
and we can see that if we run this
program

00:01:05.189 --> 00:01:05.199 align:start position:0%
 
 

00:01:05.199 --> 00:01:07.350 align:start position:0%
 
so<00:01:05.519><c> let's</c><00:01:05.840><c> output</c><00:01:06.240><c> the</c><00:01:06.400><c> string</c><00:01:06.720><c> returned</c><00:01:07.200><c> by</c>

00:01:07.350 --> 00:01:07.360 align:start position:0%
so let's output the string returned by
 

00:01:07.360 --> 00:01:10.630 align:start position:0%
so let's output the string returned by
this<00:01:07.600><c> concatenation</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
 
 

00:01:10.640 --> 00:01:12.390 align:start position:0%
 
i'm<00:01:10.799><c> going</c><00:01:11.040><c> to</c><00:01:11.200><c> hop</c><00:01:11.439><c> over</c><00:01:11.680><c> to</c><00:01:11.760><c> the</c><00:01:11.920><c> command</c>

00:01:12.390 --> 00:01:12.400 align:start position:0%
i'm going to hop over to the command
 

00:01:12.400 --> 00:01:16.550 align:start position:0%
i'm going to hop over to the command
line<00:01:12.880><c> and</c><00:01:13.200><c> run</c><00:01:13.439><c> the</c><00:01:13.600><c> file</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
 
 

00:01:16.560 --> 00:01:18.230 align:start position:0%
 
and<00:01:16.640><c> you</c><00:01:16.799><c> can</c><00:01:17.040><c> see</c><00:01:17.280><c> that</c><00:01:17.680><c> although</c><00:01:18.000><c> we've</c>

00:01:18.230 --> 00:01:18.240 align:start position:0%
and you can see that although we've
 

00:01:18.240 --> 00:01:20.550 align:start position:0%
and you can see that although we've
added<00:01:18.640><c> the</c><00:01:18.799><c> two</c><00:01:19.040><c> strings</c><00:01:19.439><c> together</c><00:01:20.000><c> into</c><00:01:20.400><c> a</c>

00:01:20.550 --> 00:01:20.560 align:start position:0%
added the two strings together into a
 

00:01:20.560 --> 00:01:21.510 align:start position:0%
added the two strings together into a
single<00:01:20.960><c> string</c>

00:01:21.510 --> 00:01:21.520 align:start position:0%
single string
 

00:01:21.520 --> 00:01:25.190 align:start position:0%
single string
the<00:01:21.680><c> format</c><00:01:22.320><c> is</c><00:01:22.400><c> not</c><00:01:22.640><c> what</c><00:01:22.799><c> we</c><00:01:22.960><c> want</c>

00:01:25.190 --> 00:01:25.200 align:start position:0%
the format is not what we want
 

00:01:25.200 --> 00:01:27.910 align:start position:0%
the format is not what we want
we<00:01:25.360><c> need</c><00:01:25.520><c> to</c><00:01:25.840><c> put</c><00:01:26.080><c> a</c><00:01:26.240><c> space</c><00:01:26.640><c> between</c><00:01:27.280><c> john</c><00:01:27.680><c> and</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
we need to put a space between john and
 

00:01:27.920 --> 00:01:33.350 align:start position:0%
we need to put a space between john and
go

00:01:33.350 --> 00:01:33.360 align:start position:0%
 
 

00:01:33.360 --> 00:01:35.670 align:start position:0%
 
now<00:01:33.520><c> when</c><00:01:33.759><c> we</c><00:01:33.920><c> run</c><00:01:34.159><c> our</c><00:01:34.320><c> file</c><00:01:34.720><c> we</c><00:01:34.960><c> expect</c><00:01:35.439><c> to</c>

00:01:35.670 --> 00:01:35.680 align:start position:0%
now when we run our file we expect to
 

00:01:35.680 --> 00:01:37.990 align:start position:0%
now when we run our file we expect to
see<00:01:36.079><c> the</c><00:01:36.240><c> first</c><00:01:36.560><c> name</c><00:01:36.880><c> a</c><00:01:37.040><c> space</c><00:01:37.520><c> and</c><00:01:37.680><c> then</c><00:01:37.840><c> the</c>

00:01:37.990 --> 00:01:38.000 align:start position:0%
see the first name a space and then the
 

00:01:38.000 --> 00:01:39.990 align:start position:0%
see the first name a space and then the
last<00:01:38.840><c> name</c>

00:01:39.990 --> 00:01:40.000 align:start position:0%
last name
 

00:01:40.000 --> 00:01:45.190 align:start position:0%
last name
and<00:01:40.240><c> we</c><00:01:40.400><c> do</c><00:01:42.560><c> so</c><00:01:42.720><c> that's</c><00:01:43.040><c> string</c><00:01:43.360><c> concatenation</c>

00:01:45.190 --> 00:01:45.200 align:start position:0%
and we do so that's string concatenation
 

00:01:45.200 --> 00:01:46.870 align:start position:0%
and we do so that's string concatenation
another<00:01:45.520><c> way</c><00:01:45.680><c> that</c><00:01:45.840><c> we</c><00:01:46.000><c> could</c><00:01:46.240><c> achieve</c><00:01:46.640><c> this</c>

00:01:46.870 --> 00:01:46.880 align:start position:0%
another way that we could achieve this
 

00:01:46.880 --> 00:01:49.590 align:start position:0%
another way that we could achieve this
result<00:01:47.439><c> is</c><00:01:47.600><c> with</c><00:01:47.920><c> string</c><00:01:48.320><c> interpolation</c>

00:01:49.590 --> 00:01:49.600 align:start position:0%
result is with string interpolation
 

00:01:49.600 --> 00:01:53.350 align:start position:0%
result is with string interpolation
this<00:01:49.920><c> allows</c><00:01:50.399><c> us</c><00:01:50.640><c> to</c><00:01:51.520><c> insert</c><00:01:52.159><c> these</c><00:01:52.479><c> variables</c>

00:01:53.350 --> 00:01:53.360 align:start position:0%
this allows us to insert these variables
 

00:01:53.360 --> 00:01:57.830 align:start position:0%
this allows us to insert these variables
into<00:01:54.000><c> an</c><00:01:54.240><c> existing</c><00:01:54.799><c> string</c>

00:01:57.830 --> 00:01:57.840 align:start position:0%
 
 

00:01:57.840 --> 00:02:01.429 align:start position:0%
 
using<00:01:58.159><c> a</c><00:01:58.320><c> special</c><00:01:58.719><c> syntax</c><00:02:00.799><c> we'll</c><00:02:01.040><c> place</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
using a special syntax we'll place
 

00:02:01.439 --> 00:02:04.230 align:start position:0%
using a special syntax we'll place
a<00:02:01.600><c> hash</c><00:02:02.479><c> and</c><00:02:02.560><c> then</c><00:02:02.799><c> a</c><00:02:02.880><c> pair</c><00:02:03.119><c> of</c><00:02:03.280><c> curly</c><00:02:03.600><c> braces</c>

00:02:04.230 --> 00:02:04.240 align:start position:0%
a hash and then a pair of curly braces
 

00:02:04.240 --> 00:02:09.109 align:start position:0%
a hash and then a pair of curly braces
around<00:02:04.560><c> our</c><00:02:04.719><c> variable</c><00:02:06.840><c> names</c>

00:02:09.109 --> 00:02:09.119 align:start position:0%
around our variable names
 

00:02:09.119 --> 00:02:11.350 align:start position:0%
around our variable names
in<00:02:09.280><c> order</c><00:02:09.679><c> for</c><00:02:10.000><c> string</c><00:02:10.399><c> interpolation</c><00:02:11.120><c> to</c>

00:02:11.350 --> 00:02:11.360 align:start position:0%
in order for string interpolation to
 

00:02:11.360 --> 00:02:13.350 align:start position:0%
in order for string interpolation to
work<00:02:11.840><c> we</c><00:02:12.000><c> need</c><00:02:12.160><c> the</c><00:02:12.319><c> string</c><00:02:12.640><c> to</c><00:02:12.720><c> be</c><00:02:12.879><c> wrapped</c>

00:02:13.350 --> 00:02:13.360 align:start position:0%
work we need the string to be wrapped
 

00:02:13.360 --> 00:02:15.270 align:start position:0%
work we need the string to be wrapped
in<00:02:13.520><c> double</c><00:02:13.920><c> quotes</c><00:02:14.319><c> rather</c><00:02:14.640><c> than</c><00:02:14.879><c> single</c>

00:02:15.270 --> 00:02:15.280 align:start position:0%
in double quotes rather than single
 

00:02:15.280 --> 00:02:19.350 align:start position:0%
in double quotes rather than single
quotes

00:02:19.350 --> 00:02:19.360 align:start position:0%
 
 

00:02:19.360 --> 00:02:21.430 align:start position:0%
 
running<00:02:19.680><c> our</c><00:02:19.840><c> file</c><00:02:20.239><c> again</c><00:02:20.560><c> we</c><00:02:20.720><c> see</c><00:02:20.959><c> the</c><00:02:21.120><c> same</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
running our file again we see the same
 

00:02:21.440 --> 00:02:26.070 align:start position:0%
running our file again we see the same
output

00:02:26.070 --> 00:02:26.080 align:start position:0%
 
 

00:02:26.080 --> 00:02:28.790 align:start position:0%
 
so<00:02:26.480><c> two</c><00:02:26.720><c> simple</c><00:02:27.120><c> ways</c><00:02:27.520><c> that</c><00:02:27.680><c> we</c><00:02:27.920><c> can</c><00:02:28.400><c> add</c>

00:02:28.790 --> 00:02:28.800 align:start position:0%
so two simple ways that we can add
 

00:02:28.800 --> 00:02:30.949 align:start position:0%
so two simple ways that we can add
multiple<00:02:29.280><c> strings</c><00:02:29.680><c> together</c><00:02:30.239><c> to</c><00:02:30.400><c> return</c><00:02:30.800><c> a</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
multiple strings together to return a
 

00:02:30.959 --> 00:02:32.390 align:start position:0%
multiple strings together to return a
single<00:02:31.360><c> string</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
single string
 

00:02:32.400 --> 00:02:34.869 align:start position:0%
single string
are<00:02:32.800><c> string</c><00:02:33.040><c> concatenation</c><00:02:34.160><c> and</c><00:02:34.560><c> string</c>

00:02:34.869 --> 00:02:34.879 align:start position:0%
are string concatenation and string
 

00:02:34.879 --> 00:02:37.840 align:start position:0%
are string concatenation and string
interpolation

