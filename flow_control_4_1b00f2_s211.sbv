0:00:04.080,0:00:07.520
we've been given

0:00:05.359,0:00:09.599
three pieces of code and we need to

0:00:07.520,0:00:11.759
determine what each piece of code is

0:00:09.599,0:00:13.679
going to print to the screen

0:00:11.759,0:00:15.519
so i've pasted up the first piece of

0:00:13.679,0:00:19.359
code that we've been given

0:00:15.519,0:00:21.279
and this code uses a ternary operator

0:00:19.359,0:00:24.240
if the expression that we provide the

0:00:21.279,0:00:26.160
operator evaluates as true

0:00:24.240,0:00:28.640
then the code on the left side of the

0:00:26.160,0:00:28.640
colon

0:00:28.880,0:00:33.760
will be executed if the condition that

0:00:32.000,0:00:36.079
we've provided evaluates as

0:00:33.760,0:00:38.559
false then the code on the right side of

0:00:36.079,0:00:40.719
the colon will be executed

0:00:38.559,0:00:43.760
so the condition we've provided our

0:00:40.719,0:00:47.600
ternary operator is a comparison

0:00:43.760,0:00:50.640
the string 4 is equal to the integer 4.

0:00:47.600,0:00:52.960
comparing a string to an integer for

0:00:50.640,0:00:56.079
equality is always going to return

0:00:52.960,0:00:58.000
false so we expect that ruby will

0:00:56.079,0:00:59.920
execute the code on the right side of

0:00:58.000,0:01:03.199
the colon

0:00:59.920,0:01:06.400
in this case we're invoking put us

0:01:03.199,0:01:07.680
and passing it the string false so we

0:01:06.400,0:01:12.799
expect to output

0:01:07.680,0:01:16.400
false let's run our code

0:01:12.799,0:01:16.400
and we see the output false

0:01:17.680,0:01:22.000
i'll paste in our next snippet of code

0:01:23.680,0:01:29.840
a local variable x has been initialized

0:01:26.400,0:01:32.799
and set to reference the integer 2.

0:01:29.840,0:01:34.320
below that we have an if statement the

0:01:32.799,0:01:37.200
condition we provide to this

0:01:34.320,0:01:39.119
if statement is comparing the equality

0:01:37.200,0:01:41.840
of the result of two different

0:01:39.119,0:01:43.840
arithmetic operations

0:01:41.840,0:01:47.840
so in our first expression here on the

0:01:43.840,0:01:50.159
left side we're multiplying 2 times 3

0:01:47.840,0:01:52.560
which will return 6 and then dividing

0:01:50.159,0:01:55.439
that by 2

0:01:52.560,0:01:56.399
which results in the integer three on

0:01:55.439,0:01:59.119
the right side

0:01:56.399,0:02:00.000
we add four and four to get eight

0:01:59.119,0:02:03.040
subtract

0:02:00.000,0:02:04.640
two to get six and subtract three which

0:02:03.040,0:02:06.960
will equal three

0:02:04.640,0:02:08.959
so this comparison that we have provided

0:02:06.960,0:02:12.160
as a condition to our if statement

0:02:08.959,0:02:13.680
is 3 is equal to 3 and this will return

0:02:12.160,0:02:15.760
true

0:02:13.680,0:02:17.280
so we expect that the code in this first

0:02:15.760,0:02:19.200
branch of our if statement will be

0:02:17.280,0:02:21.520
executed on line 3.

0:02:19.200,0:02:22.640
this code outputs the string did you get

0:02:21.520,0:02:26.239
it right

0:02:22.640,0:02:26.239
and let's run our code to see this

0:02:32.000,0:02:37.519
i'll paste in our third snippet of code

0:02:35.040,0:02:38.400
we have two local variables initialized

0:02:37.519,0:02:41.599
on lines 1

0:02:38.400,0:02:44.400
and 2 y references 9 and

0:02:41.599,0:02:45.360
x references 10. so let's check out our

0:02:44.400,0:02:47.200
if statement

0:02:45.360,0:02:48.720
the first condition we provide our if

0:02:47.200,0:02:51.519
statement on line 3

0:02:48.720,0:02:52.400
compares whether x plus 1 which will

0:02:51.519,0:02:55.200
evaluate to

0:02:52.400,0:02:55.920
11 is less than or equal to y which

0:02:55.200,0:02:59.360
references

0:02:55.920,0:03:02.239
9. so this condition evaluates to false

0:02:59.360,0:03:04.239
ruby will move on to line 5. this

0:03:02.239,0:03:07.920
condition evaluates whether x

0:03:04.239,0:03:10.560
plus 1 which evaluates to 11

0:03:07.920,0:03:11.840
is greater than or equal to y which

0:03:10.560,0:03:14.959
references 9.

0:03:11.840,0:03:17.360
since 11 is greater than 9 line

0:03:14.959,0:03:33.760
6 of our code will be executed we'll run

0:03:17.360,0:03:33.760
our code one more time to see that

