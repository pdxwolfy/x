WEBVTT
Kind: captions
Language: en

00:00:04.000 --> 00:00:06.070 align:start position:0%
 
this<00:00:04.319><c> exercise</c><00:00:05.040><c> has</c><00:00:05.359><c> given</c><00:00:05.759><c> us</c>

00:00:06.070 --> 00:00:06.080 align:start position:0%
this exercise has given us
 

00:00:06.080 --> 00:00:08.629 align:start position:0%
this exercise has given us
two<00:00:06.399><c> programs</c><00:00:07.279><c> and</c><00:00:07.520><c> we</c><00:00:07.680><c> need</c><00:00:07.839><c> to</c><00:00:08.000><c> determine</c>

00:00:08.629 --> 00:00:08.639 align:start position:0%
two programs and we need to determine
 

00:00:08.639 --> 00:00:11.110 align:start position:0%
two programs and we need to determine
what<00:00:08.960><c> each</c><00:00:09.280><c> one</c><00:00:09.599><c> will</c><00:00:09.840><c> return</c>

00:00:11.110 --> 00:00:11.120 align:start position:0%
what each one will return
 

00:00:11.120 --> 00:00:15.110 align:start position:0%
what each one will return
and<00:00:11.440><c> what</c><00:00:11.679><c> the</c><00:00:11.920><c> value</c><00:00:12.320><c> of</c><00:00:12.639><c> r</c><00:00:12.960><c> is</c><00:00:13.120><c> going</c><00:00:13.360><c> to</c><00:00:13.599><c> be</c>

00:00:15.110 --> 00:00:15.120 align:start position:0%
and what the value of r is going to be
 

00:00:15.120 --> 00:00:17.830 align:start position:0%
and what the value of r is going to be
so<00:00:15.280><c> you</c><00:00:15.440><c> can</c><00:00:15.599><c> see</c><00:00:15.839><c> on</c><00:00:15.920><c> line</c><00:00:16.320><c> one</c><00:00:16.800><c> we</c><00:00:17.119><c> initialize</c>

00:00:17.830 --> 00:00:17.840 align:start position:0%
so you can see on line one we initialize
 

00:00:17.840 --> 00:00:18.710 align:start position:0%
so you can see on line one we initialize
an<00:00:18.000><c> array</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
an array
 

00:00:18.720 --> 00:00:22.550 align:start position:0%
an array
r<00:00:19.600><c> and</c><00:00:19.920><c> it</c><00:00:20.080><c> contains</c><00:00:20.880><c> two</c><00:00:21.279><c> strings</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
r and it contains two strings
 

00:00:22.560 --> 00:00:27.269 align:start position:0%
r and it contains two strings
b<00:00:23.199><c> and</c><00:00:23.439><c> a</c><00:00:24.800><c> and</c><00:00:24.960><c> we're</c><00:00:25.119><c> going</c><00:00:25.359><c> to</c><00:00:25.680><c> hop</c><00:00:26.000><c> into</c><00:00:26.400><c> irb</c>

00:00:27.269 --> 00:00:27.279 align:start position:0%
b and a and we're going to hop into irb
 

00:00:27.279 --> 00:00:29.910 align:start position:0%
b and a and we're going to hop into irb
to<00:00:27.680><c> examine</c><00:00:28.160><c> the</c><00:00:28.320><c> code</c><00:00:28.640><c> on</c><00:00:28.800><c> lines</c><00:00:29.279><c> two</c><00:00:29.679><c> and</c>

00:00:29.910 --> 00:00:29.920 align:start position:0%
to examine the code on lines two and
 

00:00:29.920 --> 00:00:33.510 align:start position:0%
to examine the code on lines two and
three

00:00:33.510 --> 00:00:33.520 align:start position:0%
 
 

00:00:33.520 --> 00:00:35.590 align:start position:0%
 
so<00:00:33.760><c> i'll</c><00:00:33.920><c> hop</c><00:00:34.160><c> into</c><00:00:34.399><c> irb</c><00:00:34.960><c> and</c><00:00:35.120><c> i'm</c><00:00:35.200><c> going</c><00:00:35.440><c> to</c>

00:00:35.590 --> 00:00:35.600 align:start position:0%
so i'll hop into irb and i'm going to
 

00:00:35.600 --> 00:00:39.270 align:start position:0%
so i'll hop into irb and i'm going to
paste<00:00:36.000><c> in</c><00:00:36.160><c> that</c><00:00:36.399><c> array</c>

00:00:39.270 --> 00:00:39.280 align:start position:0%
 
 

00:00:39.280 --> 00:00:41.990 align:start position:0%
 
now<00:00:39.680><c> looking</c><00:00:40.079><c> at</c><00:00:40.399><c> line</c><00:00:40.800><c> two</c><00:00:41.360><c> you</c><00:00:41.440><c> can</c><00:00:41.680><c> see</c><00:00:41.840><c> that</c>

00:00:41.990 --> 00:00:42.000 align:start position:0%
now looking at line two you can see that
 

00:00:42.000 --> 00:00:44.790 align:start position:0%
now looking at line two you can see that
we<00:00:42.320><c> first</c><00:00:42.719><c> call</c><00:00:43.040><c> the</c><00:00:43.360><c> product</c><00:00:43.840><c> method</c><00:00:44.320><c> on</c><00:00:44.480><c> this</c>

00:00:44.790 --> 00:00:44.800 align:start position:0%
we first call the product method on this
 

00:00:44.800 --> 00:00:45.990 align:start position:0%
we first call the product method on this
array

00:00:45.990 --> 00:00:46.000 align:start position:0%
array
 

00:00:46.000 --> 00:00:48.950 align:start position:0%
array
and<00:00:46.320><c> we</c><00:00:46.559><c> pass</c><00:00:47.120><c> in</c><00:00:47.760><c> some</c><00:00:48.079><c> other</c><00:00:48.320><c> code</c><00:00:48.640><c> as</c><00:00:48.800><c> an</c>

00:00:48.950 --> 00:00:48.960 align:start position:0%
and we pass in some other code as an
 

00:00:48.960 --> 00:00:49.670 align:start position:0%
and we pass in some other code as an
argument

00:00:49.670 --> 00:00:49.680 align:start position:0%
argument
 

00:00:49.680 --> 00:00:52.709 align:start position:0%
argument
that<00:00:50.000><c> may</c><00:00:50.160><c> not</c><00:00:50.399><c> look</c><00:00:50.640><c> familiar</c><00:00:51.120><c> to</c><00:00:51.280><c> you</c><00:00:52.480><c> let's</c>

00:00:52.709 --> 00:00:52.719 align:start position:0%
that may not look familiar to you let's
 

00:00:52.719 --> 00:00:54.470 align:start position:0%
that may not look familiar to you let's
just<00:00:52.960><c> run</c><00:00:53.199><c> this</c><00:00:53.440><c> code</c><00:00:53.680><c> in</c><00:00:53.840><c> irb</c>

00:00:54.470 --> 00:00:54.480 align:start position:0%
just run this code in irb
 

00:00:54.480 --> 00:01:01.110 align:start position:0%
just run this code in irb
and<00:00:54.719><c> see</c><00:00:54.879><c> what</c><00:00:55.039><c> it</c><00:00:56.840><c> does</c>

00:01:01.110 --> 00:01:01.120 align:start position:0%
 
 

00:01:01.120 --> 00:01:04.310 align:start position:0%
 
you<00:01:01.280><c> can</c><00:01:01.440><c> see</c><00:01:01.600><c> that</c><00:01:01.840><c> it</c><00:01:02.000><c> returns</c><00:01:02.719><c> an</c><00:01:02.960><c> array</c><00:01:04.080><c> of</c>

00:01:04.310 --> 00:01:04.320 align:start position:0%
you can see that it returns an array of
 

00:01:04.320 --> 00:01:05.109 align:start position:0%
you can see that it returns an array of
integers

00:01:05.109 --> 00:01:05.119 align:start position:0%
integers
 

00:01:05.119 --> 00:01:08.390 align:start position:0%
integers
in<00:01:05.280><c> the</c><00:01:05.439><c> range</c><00:01:05.840><c> provided</c><00:01:06.880><c> so</c><00:01:07.119><c> in</c><00:01:07.200><c> this</c><00:01:07.439><c> case</c><00:01:07.920><c> 1</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
in the range provided so in this case 1
 

00:01:08.400 --> 00:01:11.830 align:start position:0%
in the range provided so in this case 1
2<00:01:08.799><c> and</c><00:01:09.040><c> 3.</c><00:01:10.320><c> so</c><00:01:10.479><c> when</c><00:01:10.720><c> thinking</c><00:01:11.119><c> about</c><00:01:11.439><c> what</c><00:01:11.600><c> the</c>

00:01:11.830 --> 00:01:11.840 align:start position:0%
2 and 3. so when thinking about what the
 

00:01:11.840 --> 00:01:13.990 align:start position:0%
2 and 3. so when thinking about what the
argument<00:01:12.320><c> to</c><00:01:12.479><c> the</c><00:01:12.640><c> product</c><00:01:13.040><c> method</c><00:01:13.520><c> on</c><00:01:13.680><c> line</c>

00:01:13.990 --> 00:01:14.000 align:start position:0%
argument to the product method on line
 

00:01:14.000 --> 00:01:15.109 align:start position:0%
argument to the product method on line
two<00:01:14.320><c> will</c><00:01:14.479><c> be</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
two will be
 

00:01:15.119 --> 00:01:16.950 align:start position:0%
two will be
it's<00:01:15.360><c> going</c><00:01:15.600><c> to</c><00:01:15.759><c> be</c><00:01:16.000><c> an</c><00:01:16.159><c> array</c><00:01:16.640><c> of</c><00:01:16.799><c> the</c>

00:01:16.950 --> 00:01:16.960 align:start position:0%
it's going to be an array of the
 

00:01:16.960 --> 00:01:19.510 align:start position:0%
it's going to be an array of the
integers<00:01:17.520><c> one</c><00:01:17.840><c> two</c><00:01:18.080><c> and</c><00:01:18.240><c> three</c>

00:01:19.510 --> 00:01:19.520 align:start position:0%
integers one two and three
 

00:01:19.520 --> 00:01:21.109 align:start position:0%
integers one two and three
the<00:01:19.680><c> next</c><00:01:20.000><c> question</c><00:01:20.320><c> we</c><00:01:20.479><c> need</c><00:01:20.640><c> to</c><00:01:20.799><c> ask</c>

00:01:21.109 --> 00:01:21.119 align:start position:0%
the next question we need to ask
 

00:01:21.119 --> 00:01:23.109 align:start position:0%
the next question we need to ask
ourselves<00:01:21.759><c> is</c><00:01:22.080><c> what</c><00:01:22.240><c> does</c><00:01:22.479><c> the</c><00:01:22.640><c> product</c>

00:01:23.109 --> 00:01:23.119 align:start position:0%
ourselves is what does the product
 

00:01:23.119 --> 00:01:25.109 align:start position:0%
ourselves is what does the product
method<00:01:23.520><c> do</c>

00:01:25.109 --> 00:01:25.119 align:start position:0%
method do
 

00:01:25.119 --> 00:01:27.190 align:start position:0%
method do
this<00:01:25.360><c> would</c><00:01:25.439><c> be</c><00:01:25.600><c> a</c><00:01:25.759><c> good</c><00:01:26.080><c> time</c><00:01:26.400><c> to</c><00:01:26.720><c> check</c><00:01:26.960><c> out</c>

00:01:27.190 --> 00:01:27.200 align:start position:0%
this would be a good time to check out
 

00:01:27.200 --> 00:01:29.190 align:start position:0%
this would be a good time to check out
the<00:01:27.439><c> array</c><00:01:27.960><c> documentation</c>

00:01:29.190 --> 00:01:29.200 align:start position:0%
the array documentation
 

00:01:29.200 --> 00:01:31.990 align:start position:0%
the array documentation
and<00:01:29.520><c> take</c><00:01:29.759><c> a</c><00:01:29.840><c> look</c><00:01:30.000><c> at</c><00:01:30.079><c> the</c><00:01:30.320><c> product</c><00:01:30.720><c> method</c><00:01:31.840><c> as</c>

00:01:31.990 --> 00:01:32.000 align:start position:0%
and take a look at the product method as
 

00:01:32.000 --> 00:01:33.910 align:start position:0%
and take a look at the product method as
you'll<00:01:32.240><c> see</c><00:01:32.479><c> in</c><00:01:32.640><c> the</c><00:01:32.799><c> documentation</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
you'll see in the documentation
 

00:01:33.920 --> 00:01:36.950 align:start position:0%
you'll see in the documentation
the<00:01:34.159><c> product</c><00:01:34.640><c> method</c><00:01:35.040><c> returns</c><00:01:35.600><c> an</c><00:01:35.759><c> array</c><00:01:36.640><c> of</c>

00:01:36.950 --> 00:01:36.960 align:start position:0%
the product method returns an array of
 

00:01:36.960 --> 00:01:39.350 align:start position:0%
the product method returns an array of
all<00:01:37.200><c> combinations</c><00:01:38.000><c> of</c><00:01:38.159><c> elements</c><00:01:38.720><c> from</c><00:01:39.040><c> all</c>

00:01:39.350 --> 00:01:39.360 align:start position:0%
all combinations of elements from all
 

00:01:39.360 --> 00:01:40.950 align:start position:0%
all combinations of elements from all
arrays

00:01:40.950 --> 00:01:40.960 align:start position:0%
arrays
 

00:01:40.960 --> 00:01:43.190 align:start position:0%
arrays
so<00:01:41.280><c> on</c><00:01:41.439><c> line</c><00:01:41.840><c> two</c><00:01:42.320><c> when</c><00:01:42.479><c> we</c><00:01:42.640><c> invoke</c><00:01:43.040><c> the</c>

00:01:43.190 --> 00:01:43.200 align:start position:0%
so on line two when we invoke the
 

00:01:43.200 --> 00:01:44.630 align:start position:0%
so on line two when we invoke the
product<00:01:43.680><c> method</c>

00:01:44.630 --> 00:01:44.640 align:start position:0%
product method
 

00:01:44.640 --> 00:01:47.749 align:start position:0%
product method
we<00:01:44.960><c> return</c><00:01:45.439><c> a</c><00:01:45.600><c> new</c><00:01:45.920><c> array</c><00:01:47.040><c> containing</c>

00:01:47.749 --> 00:01:47.759 align:start position:0%
we return a new array containing
 

00:01:47.759 --> 00:01:50.870 align:start position:0%
we return a new array containing
all<00:01:48.000><c> combinations</c><00:01:49.200><c> of</c><00:01:49.840><c> our</c><00:01:50.159><c> array</c>

00:01:50.870 --> 00:01:50.880 align:start position:0%
all combinations of our array
 

00:01:50.880 --> 00:01:54.230 align:start position:0%
all combinations of our array
r<00:01:52.000><c> and</c><00:01:52.240><c> the</c><00:01:52.399><c> array</c><00:01:52.799><c> passed</c><00:01:53.119><c> in</c><00:01:53.280><c> as</c><00:01:53.360><c> an</c><00:01:53.520><c> argument</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
r and the array passed in as an argument
 

00:01:54.240 --> 00:01:57.429 align:start position:0%
r and the array passed in as an argument
of<00:01:54.320><c> the</c><00:01:54.479><c> integers</c><00:01:55.040><c> 1</c><00:01:55.439><c> 2</c><00:01:55.680><c> and</c><00:01:55.920><c> 3</c><00:01:56.960><c> and</c><00:01:57.200><c> we</c>

00:01:57.429 --> 00:01:57.439 align:start position:0%
of the integers 1 2 and 3 and we
 

00:01:57.439 --> 00:01:58.230 align:start position:0%
of the integers 1 2 and 3 and we
reassign

00:01:58.230 --> 00:01:58.240 align:start position:0%
reassign
 

00:01:58.240 --> 00:02:01.990 align:start position:0%
reassign
r<00:01:58.479><c> to</c><00:01:58.640><c> this</c><00:01:58.880><c> new</c><00:01:59.119><c> array</c><00:02:00.960><c> so</c><00:02:01.200><c> let's</c><00:02:01.439><c> take</c><00:02:01.680><c> a</c><00:02:01.759><c> look</c>

00:02:01.990 --> 00:02:02.000 align:start position:0%
r to this new array so let's take a look
 

00:02:02.000 --> 00:02:04.149 align:start position:0%
r to this new array so let's take a look
at<00:02:02.079><c> this</c><00:02:02.320><c> code</c>

00:02:04.149 --> 00:02:04.159 align:start position:0%
at this code
 

00:02:04.159 --> 00:02:07.350 align:start position:0%
at this code
we'll<00:02:04.399><c> reassign</c><00:02:05.200><c> r</c><00:02:06.000><c> to</c><00:02:06.159><c> the</c><00:02:06.320><c> new</c><00:02:06.560><c> array</c>

00:02:07.350 --> 00:02:07.360 align:start position:0%
we'll reassign r to the new array
 

00:02:07.360 --> 00:02:10.469 align:start position:0%
we'll reassign r to the new array
returned<00:02:08.080><c> by</c><00:02:08.399><c> calling</c><00:02:09.920><c> product</c>

00:02:10.469 --> 00:02:10.479 align:start position:0%
returned by calling product
 

00:02:10.479 --> 00:02:17.030 align:start position:0%
returned by calling product
on<00:02:10.720><c> r</c>

00:02:17.030 --> 00:02:17.040 align:start position:0%
 
 

00:02:17.040 --> 00:02:19.350 align:start position:0%
 
and<00:02:17.280><c> we</c><00:02:17.440><c> pass</c><00:02:17.760><c> in</c><00:02:17.920><c> this</c><00:02:18.160><c> code</c><00:02:18.480><c> as</c><00:02:18.640><c> an</c><00:02:18.800><c> argument</c>

00:02:19.350 --> 00:02:19.360 align:start position:0%
and we pass in this code as an argument
 

00:02:19.360 --> 00:02:25.030 align:start position:0%
and we pass in this code as an argument
which<00:02:19.680><c> generates</c><00:02:20.239><c> a</c><00:02:20.319><c> new</c><00:02:20.840><c> array</c>

00:02:25.030 --> 00:02:25.040 align:start position:0%
 
 

00:02:25.040 --> 00:02:27.430 align:start position:0%
 
you<00:02:25.200><c> can</c><00:02:25.360><c> see</c><00:02:25.599><c> the</c><00:02:25.760><c> returned</c><00:02:26.239><c> array</c><00:02:26.800><c> this</c><00:02:27.040><c> is</c><00:02:27.200><c> a</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
you can see the returned array this is a
 

00:02:27.440 --> 00:02:29.510 align:start position:0%
you can see the returned array this is a
two-dimensional<00:02:28.239><c> array</c><00:02:28.640><c> it's</c><00:02:28.879><c> an</c><00:02:29.040><c> array</c><00:02:29.360><c> of</c>

00:02:29.510 --> 00:02:29.520 align:start position:0%
two-dimensional array it's an array of
 

00:02:29.520 --> 00:02:30.550 align:start position:0%
two-dimensional array it's an array of
arrays

00:02:30.550 --> 00:02:30.560 align:start position:0%
arrays
 

00:02:30.560 --> 00:02:32.710 align:start position:0%
arrays
and<00:02:30.720><c> each</c><00:02:31.040><c> of</c><00:02:31.120><c> these</c><00:02:31.440><c> sub-arrays</c><00:02:32.160><c> contains</c>

00:02:32.710 --> 00:02:32.720 align:start position:0%
and each of these sub-arrays contains
 

00:02:32.720 --> 00:02:33.830 align:start position:0%
and each of these sub-arrays contains
two<00:02:32.959><c> elements</c>

00:02:33.830 --> 00:02:33.840 align:start position:0%
two elements
 

00:02:33.840 --> 00:02:37.110 align:start position:0%
two elements
a<00:02:34.000><c> string</c><00:02:34.480><c> and</c><00:02:34.640><c> an</c><00:02:34.879><c> integer</c><00:02:36.560><c> so</c><00:02:36.800><c> now</c><00:02:36.959><c> that</c>

00:02:37.110 --> 00:02:37.120 align:start position:0%
a string and an integer so now that
 

00:02:37.120 --> 00:02:39.030 align:start position:0%
a string and an integer so now that
we've<00:02:37.280><c> determined</c><00:02:37.840><c> what</c><00:02:38.080><c> line</c><00:02:38.400><c> two</c><00:02:38.640><c> will</c><00:02:38.800><c> do</c>

00:02:39.030 --> 00:02:39.040 align:start position:0%
we've determined what line two will do
 

00:02:39.040 --> 00:02:40.949 align:start position:0%
we've determined what line two will do
let's<00:02:39.280><c> take</c><00:02:39.519><c> a</c><00:02:39.599><c> look</c><00:02:39.840><c> at</c><00:02:40.000><c> line</c><00:02:40.319><c> three</c><00:02:40.640><c> of</c><00:02:40.720><c> the</c>

00:02:40.949 --> 00:02:40.959 align:start position:0%
let's take a look at line three of the
 

00:02:40.959 --> 00:02:43.430 align:start position:0%
let's take a look at line three of the
exercise

00:02:43.430 --> 00:02:43.440 align:start position:0%
exercise
 

00:02:43.440 --> 00:02:47.110 align:start position:0%
exercise
we<00:02:43.680><c> call</c><00:02:43.920><c> the</c><00:02:44.239><c> first</c><00:02:44.720><c> method</c><00:02:45.280><c> on</c><00:02:45.599><c> r</c>

00:02:47.110 --> 00:02:47.120 align:start position:0%
we call the first method on r
 

00:02:47.120 --> 00:02:49.110 align:start position:0%
we call the first method on r
and<00:02:47.280><c> we</c><00:02:47.440><c> can</c><00:02:47.680><c> see</c><00:02:47.840><c> what</c><00:02:48.000><c> that</c><00:02:48.239><c> returns</c><00:02:48.720><c> by</c><00:02:48.879><c> just</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
and we can see what that returns by just
 

00:02:49.120 --> 00:02:54.949 align:start position:0%
and we can see what that returns by just
testing<00:02:49.440><c> it</c><00:02:49.599><c> out</c><00:02:49.680><c> in</c><00:02:49.840><c> irb</c>

00:02:54.949 --> 00:02:54.959 align:start position:0%
 
 

00:02:54.959 --> 00:02:57.110 align:start position:0%
 
first<00:02:55.280><c> returns</c><00:02:55.840><c> the</c><00:02:56.080><c> first</c><00:02:56.400><c> element</c><00:02:56.879><c> of</c><00:02:56.959><c> the</c>

00:02:57.110 --> 00:02:57.120 align:start position:0%
first returns the first element of the
 

00:02:57.120 --> 00:02:58.070 align:start position:0%
first returns the first element of the
calling<00:02:57.519><c> array</c>

00:02:58.070 --> 00:02:58.080 align:start position:0%
calling array
 

00:02:58.080 --> 00:03:01.190 align:start position:0%
calling array
which<00:02:58.319><c> in</c><00:02:58.480><c> this</c><00:02:58.720><c> case</c><00:02:59.200><c> is</c><00:02:59.440><c> also</c><00:02:59.760><c> an</c><00:02:59.920><c> array</c>

00:03:01.190 --> 00:03:01.200 align:start position:0%
which in this case is also an array
 

00:03:01.200 --> 00:03:03.589 align:start position:0%
which in this case is also an array
and<00:03:01.360><c> looking</c><00:03:01.680><c> at</c><00:03:01.840><c> line</c><00:03:02.159><c> three</c><00:03:02.879><c> you</c><00:03:03.040><c> can</c><00:03:03.280><c> see</c>

00:03:03.589 --> 00:03:03.599 align:start position:0%
and looking at line three you can see
 

00:03:03.599 --> 00:03:04.309 align:start position:0%
and looking at line three you can see
that<00:03:03.840><c> we</c>

00:03:04.309 --> 00:03:04.319 align:start position:0%
that we
 

00:03:04.319 --> 00:03:08.550 align:start position:0%
that we
invoke<00:03:04.800><c> the</c><00:03:05.120><c> delete</c><00:03:05.599><c> method</c><00:03:06.239><c> on</c><00:03:06.480><c> this</c><00:03:06.800><c> element</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
invoke the delete method on this element
 

00:03:08.560 --> 00:03:10.229 align:start position:0%
invoke the delete method on this element
again<00:03:08.800><c> this</c><00:03:09.040><c> is</c><00:03:09.200><c> a</c><00:03:09.280><c> good</c><00:03:09.440><c> time</c><00:03:09.680><c> to</c><00:03:09.840><c> look</c><00:03:10.080><c> at</c>

00:03:10.229 --> 00:03:10.239 align:start position:0%
again this is a good time to look at
 

00:03:10.239 --> 00:03:13.270 align:start position:0%
again this is a good time to look at
ruby's<00:03:10.720><c> array</c><00:03:11.280><c> documentation</c>

00:03:13.270 --> 00:03:13.280 align:start position:0%
ruby's array documentation
 

00:03:13.280 --> 00:03:16.869 align:start position:0%
ruby's array documentation
the<00:03:13.440><c> delete</c><00:03:13.920><c> method</c><00:03:14.959><c> will</c><00:03:15.599><c> delete</c><00:03:16.080><c> all</c><00:03:16.400><c> items</c>

00:03:16.869 --> 00:03:16.879 align:start position:0%
the delete method will delete all items
 

00:03:16.879 --> 00:03:18.149 align:start position:0%
the delete method will delete all items
from<00:03:17.120><c> the</c><00:03:17.280><c> calling</c><00:03:17.680><c> array</c>

00:03:18.149 --> 00:03:18.159 align:start position:0%
from the calling array
 

00:03:18.159 --> 00:03:21.190 align:start position:0%
from the calling array
that<00:03:18.400><c> are</c><00:03:18.560><c> equal</c><00:03:19.040><c> to</c><00:03:19.440><c> the</c><00:03:19.680><c> argument</c>

00:03:21.190 --> 00:03:21.200 align:start position:0%
that are equal to the argument
 

00:03:21.200 --> 00:03:23.430 align:start position:0%
that are equal to the argument
and<00:03:21.440><c> importantly</c><00:03:22.239><c> it</c><00:03:22.400><c> will</c><00:03:22.640><c> return</c><00:03:23.200><c> the</c>

00:03:23.430 --> 00:03:23.440 align:start position:0%
and importantly it will return the
 

00:03:23.440 --> 00:03:25.190 align:start position:0%
and importantly it will return the
deleted<00:03:24.000><c> item</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
deleted item
 

00:03:25.200 --> 00:03:27.270 align:start position:0%
deleted item
so<00:03:25.360><c> let's</c><00:03:25.599><c> look</c><00:03:25.840><c> at</c><00:03:26.000><c> what</c><00:03:26.319><c> argument</c><00:03:26.720><c> we</c><00:03:26.959><c> passed</c>

00:03:27.270 --> 00:03:27.280 align:start position:0%
so let's look at what argument we passed
 

00:03:27.280 --> 00:03:28.789 align:start position:0%
so let's look at what argument we passed
to<00:03:27.360><c> the</c><00:03:27.519><c> delete</c><00:03:27.920><c> method</c>

00:03:28.789 --> 00:03:28.799 align:start position:0%
to the delete method
 

00:03:28.799 --> 00:03:30.229 align:start position:0%
to the delete method
we've<00:03:29.040><c> chained</c><00:03:29.360><c> a</c><00:03:29.440><c> couple</c><00:03:29.680><c> of</c><00:03:29.840><c> methods</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
we've chained a couple of methods
 

00:03:30.239 --> 00:03:32.149 align:start position:0%
we've chained a couple of methods
together<00:03:30.840><c> here</c>

00:03:32.149 --> 00:03:32.159 align:start position:0%
together here
 

00:03:32.159 --> 00:03:35.670 align:start position:0%
together here
we<00:03:32.400><c> already</c><00:03:32.799><c> saw</c><00:03:33.120><c> what</c><00:03:33.840><c> our</c><00:03:34.560><c> first</c><00:03:34.959><c> returns</c>

00:03:35.670 --> 00:03:35.680 align:start position:0%
we already saw what our first returns
 

00:03:35.680 --> 00:03:39.670 align:start position:0%
we already saw what our first returns
which<00:03:36.000><c> is</c><00:03:36.640><c> an</c><00:03:36.799><c> array</c><00:03:37.200><c> of</c><00:03:37.360><c> two</c><00:03:37.599><c> elements</c>

00:03:39.670 --> 00:03:39.680 align:start position:0%
which is an array of two elements
 

00:03:39.680 --> 00:03:43.270 align:start position:0%
which is an array of two elements
on<00:03:39.920><c> line</c><00:03:40.239><c> three</c><00:03:41.360><c> we</c><00:03:41.599><c> also</c><00:03:42.080><c> chain</c><00:03:42.319><c> on</c><00:03:42.560><c> a</c><00:03:42.720><c> call</c><00:03:42.959><c> to</c>

00:03:43.270 --> 00:03:43.280 align:start position:0%
on line three we also chain on a call to
 

00:03:43.280 --> 00:03:44.550 align:start position:0%
on line three we also chain on a call to
last

00:03:44.550 --> 00:03:44.560 align:start position:0%
last
 

00:03:44.560 --> 00:03:47.670 align:start position:0%
last
and<00:03:44.640><c> this</c><00:03:44.799><c> will</c><00:03:45.040><c> return</c><00:03:45.680><c> the</c><00:03:46.000><c> last</c><00:03:46.480><c> element</c><00:03:47.519><c> of</c>

00:03:47.670 --> 00:03:47.680 align:start position:0%
and this will return the last element of
 

00:03:47.680 --> 00:03:48.710 align:start position:0%
and this will return the last element of
this<00:03:47.920><c> array</c>

00:03:48.710 --> 00:03:48.720 align:start position:0%
this array
 

00:03:48.720 --> 00:03:51.750 align:start position:0%
this array
so<00:03:48.879><c> that</c><00:03:49.040><c> will</c><00:03:49.200><c> be</c><00:03:49.360><c> the</c><00:03:49.519><c> integer</c><00:03:50.000><c> one</c><00:03:51.519><c> so</c>

00:03:51.750 --> 00:03:51.760 align:start position:0%
so that will be the integer one so
 

00:03:51.760 --> 00:03:56.550 align:start position:0%
so that will be the integer one so
running<00:03:52.080><c> our</c><00:03:52.239><c> code</c><00:03:52.560><c> all</c><00:03:52.720><c> together</c>

00:03:56.550 --> 00:03:56.560 align:start position:0%
 
 

00:03:56.560 --> 00:03:59.509 align:start position:0%
 
we're<00:03:56.720><c> going</c><00:03:57.040><c> to</c><00:03:57.439><c> invoke</c><00:03:57.840><c> the</c><00:03:58.000><c> delete</c><00:03:58.480><c> method</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
we're going to invoke the delete method
 

00:03:59.519 --> 00:03:59.990 align:start position:0%
we're going to invoke the delete method
on<00:03:59.680><c> the</c>

00:03:59.990 --> 00:04:00.000 align:start position:0%
on the
 

00:04:00.000 --> 00:04:07.270 align:start position:0%
on the
first<00:04:00.319><c> sub-array</c><00:04:00.879><c> in</c><00:04:01.120><c> r</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
 
 

00:04:07.280 --> 00:04:09.429 align:start position:0%
 
this<00:04:07.519><c> code</c><00:04:07.840><c> will</c><00:04:08.080><c> return</c><00:04:08.480><c> the</c><00:04:08.640><c> deleted</c><00:04:09.120><c> item</c>

00:04:09.429 --> 00:04:09.439 align:start position:0%
this code will return the deleted item
 

00:04:09.439 --> 00:04:12.710 align:start position:0%
this code will return the deleted item
which<00:04:09.680><c> will</c><00:04:09.840><c> be</c><00:04:09.920><c> the</c><00:04:10.159><c> integer</c><00:04:10.640><c> one</c>

00:04:12.710 --> 00:04:12.720 align:start position:0%
which will be the integer one
 

00:04:12.720 --> 00:04:16.069 align:start position:0%
which will be the integer one
and<00:04:12.959><c> it</c><00:04:13.040><c> does</c><00:04:14.799><c> now</c><00:04:14.959><c> that</c><00:04:15.120><c> we've</c><00:04:15.280><c> deleted</c><00:04:15.840><c> that</c>

00:04:16.069 --> 00:04:16.079 align:start position:0%
and it does now that we've deleted that
 

00:04:16.079 --> 00:04:16.789 align:start position:0%
and it does now that we've deleted that
item<00:04:16.479><c> from</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
item from
 

00:04:16.799 --> 00:04:19.830 align:start position:0%
item from
r<00:04:17.519><c> we</c><00:04:17.759><c> expect</c><00:04:18.160><c> that</c><00:04:18.320><c> the</c><00:04:18.560><c> first</c><00:04:18.880><c> subarray</c><00:04:19.600><c> in</c>

00:04:19.830 --> 00:04:19.840 align:start position:0%
r we expect that the first subarray in
 

00:04:19.840 --> 00:04:22.469 align:start position:0%
r we expect that the first subarray in
r<00:04:20.320><c> will</c><00:04:20.479><c> contain</c><00:04:20.959><c> only</c><00:04:21.280><c> one</c><00:04:21.519><c> element</c><00:04:22.320><c> the</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
r will contain only one element the
 

00:04:22.479 --> 00:04:27.430 align:start position:0%
r will contain only one element the
string<00:04:22.880><c> b</c>

00:04:27.430 --> 00:04:27.440 align:start position:0%
 
 

00:04:27.440 --> 00:04:30.629 align:start position:0%
 
and<00:04:27.600><c> it</c><00:04:27.759><c> does</c><00:04:29.520><c> so</c><00:04:29.759><c> i'm</c><00:04:29.919><c> going</c><00:04:30.160><c> to</c>

00:04:30.629 --> 00:04:30.639 align:start position:0%
and it does so i'm going to
 

00:04:30.639 --> 00:04:36.469 align:start position:0%
and it does so i'm going to
clear<00:04:30.960><c> out</c><00:04:31.120><c> this</c><00:04:31.360><c> irb</c><00:04:31.919><c> session</c>

00:04:36.469 --> 00:04:36.479 align:start position:0%
 
 

00:04:36.479 --> 00:04:39.510 align:start position:0%
 
and<00:04:36.720><c> go</c><00:04:36.960><c> over</c><00:04:37.199><c> to</c><00:04:37.360><c> our</c><00:04:37.520><c> code</c>

00:04:39.510 --> 00:04:39.520 align:start position:0%
and go over to our code
 

00:04:39.520 --> 00:04:41.590 align:start position:0%
and go over to our code
let's<00:04:39.759><c> comment</c><00:04:40.240><c> out</c><00:04:40.400><c> this</c><00:04:40.720><c> first</c><00:04:41.040><c> program</c><00:04:41.520><c> and</c>

00:04:41.590 --> 00:04:41.600 align:start position:0%
let's comment out this first program and
 

00:04:41.600 --> 00:04:45.030 align:start position:0%
let's comment out this first program and
take<00:04:41.840><c> a</c><00:04:41.919><c> look</c><00:04:42.080><c> at</c><00:04:42.160><c> the</c><00:04:42.320><c> second</c><00:04:42.720><c> one</c>

00:04:45.030 --> 00:04:45.040 align:start position:0%
 
 

00:04:45.040 --> 00:04:47.110 align:start position:0%
 
again<00:04:45.520><c> in</c><00:04:45.680><c> the</c><00:04:45.919><c> second</c><00:04:46.320><c> program</c><00:04:46.800><c> we've</c>

00:04:47.110 --> 00:04:47.120 align:start position:0%
again in the second program we've
 

00:04:47.120 --> 00:04:48.070 align:start position:0%
again in the second program we've
initialized

00:04:48.070 --> 00:04:48.080 align:start position:0%
initialized
 

00:04:48.080 --> 00:04:51.270 align:start position:0%
initialized
r<00:04:48.320><c> with</c><00:04:48.639><c> two</c><00:04:48.880><c> strings</c><00:04:49.440><c> b</c><00:04:49.919><c> and</c><00:04:50.080><c> a</c>

00:04:51.270 --> 00:04:51.280 align:start position:0%
r with two strings b and a
 

00:04:51.280 --> 00:04:53.590 align:start position:0%
r with two strings b and a
and<00:04:51.600><c> this</c><00:04:51.840><c> code</c><00:04:52.160><c> looks</c><00:04:52.479><c> very</c><00:04:52.800><c> similar</c><00:04:53.280><c> to</c><00:04:53.440><c> what</c>

00:04:53.590 --> 00:04:53.600 align:start position:0%
and this code looks very similar to what
 

00:04:53.600 --> 00:04:55.030 align:start position:0%
and this code looks very similar to what
we<00:04:53.759><c> just</c><00:04:54.080><c> looked</c><00:04:54.400><c> at</c>

00:04:55.030 --> 00:04:55.040 align:start position:0%
we just looked at
 

00:04:55.040 --> 00:04:58.790 align:start position:0%
we just looked at
but<00:04:55.280><c> there</c><00:04:55.520><c> is</c><00:04:55.680><c> one</c><00:04:55.919><c> small</c><00:04:56.240><c> difference</c>

00:04:58.790 --> 00:04:58.800 align:start position:0%
but there is one small difference
 

00:04:58.800 --> 00:05:04.870 align:start position:0%
but there is one small difference
let's<00:04:59.040><c> hop</c><00:04:59.360><c> back</c><00:04:59.600><c> into</c><00:04:59.759><c> irb</c>

00:05:04.870 --> 00:05:04.880 align:start position:0%
 
 

00:05:04.880 --> 00:05:08.310 align:start position:0%
 
i'll<00:05:05.120><c> paste</c><00:05:05.520><c> in</c><00:05:05.680><c> our</c><00:05:05.840><c> array</c><00:05:07.520><c> now</c><00:05:07.759><c> the</c><00:05:07.919><c> second</c>

00:05:08.310 --> 00:05:08.320 align:start position:0%
i'll paste in our array now the second
 

00:05:08.320 --> 00:05:10.469 align:start position:0%
i'll paste in our array now the second
line<00:05:08.560><c> of</c><00:05:08.639><c> the</c><00:05:08.800><c> code</c><00:05:09.039><c> that</c><00:05:09.199><c> we</c><00:05:09.360><c> were</c><00:05:09.520><c> given</c>

00:05:10.469 --> 00:05:10.479 align:start position:0%
line of the code that we were given
 

00:05:10.479 --> 00:05:12.550 align:start position:0%
line of the code that we were given
looks<00:05:10.880><c> a</c><00:05:11.039><c> little</c><00:05:11.280><c> bit</c><00:05:11.600><c> different</c><00:05:12.080><c> than</c><00:05:12.400><c> the</c>

00:05:12.550 --> 00:05:12.560 align:start position:0%
looks a little bit different than the
 

00:05:12.560 --> 00:05:14.469 align:start position:0%
looks a little bit different than the
last<00:05:12.880><c> program</c>

00:05:14.469 --> 00:05:14.479 align:start position:0%
last program
 

00:05:14.479 --> 00:05:17.029 align:start position:0%
last program
the<00:05:14.720><c> difference</c><00:05:15.199><c> here</c><00:05:15.680><c> is</c><00:05:15.840><c> that</c><00:05:16.560><c> we</c><00:05:16.720><c> have</c>

00:05:17.029 --> 00:05:17.039 align:start position:0%
the difference here is that we have
 

00:05:17.039 --> 00:05:21.670 align:start position:0%
the difference here is that we have
square<00:05:17.440><c> brackets</c>

00:05:21.670 --> 00:05:21.680 align:start position:0%
 
 

00:05:21.680 --> 00:05:23.590 align:start position:0%
 
around<00:05:22.080><c> this</c><00:05:22.320><c> code</c><00:05:22.560><c> that</c><00:05:22.800><c> we</c><00:05:22.960><c> use</c><00:05:23.280><c> as</c><00:05:23.440><c> an</c>

00:05:23.590 --> 00:05:23.600 align:start position:0%
around this code that we use as an
 

00:05:23.600 --> 00:05:28.230 align:start position:0%
around this code that we use as an
argument<00:05:24.080><c> to</c><00:05:24.240><c> the</c><00:05:24.479><c> product</c><00:05:24.880><c> method</c>

00:05:28.230 --> 00:05:28.240 align:start position:0%
 
 

00:05:28.240 --> 00:05:31.029 align:start position:0%
 
what<00:05:28.400><c> this</c><00:05:28.720><c> does</c><00:05:29.280><c> is</c><00:05:29.520><c> it</c><00:05:29.759><c> wraps</c><00:05:30.240><c> the</c><00:05:30.560><c> return</c>

00:05:31.029 --> 00:05:31.039 align:start position:0%
what this does is it wraps the return
 

00:05:31.039 --> 00:05:31.830 align:start position:0%
what this does is it wraps the return
value

00:05:31.830 --> 00:05:31.840 align:start position:0%
value
 

00:05:31.840 --> 00:05:34.550 align:start position:0%
value
of<00:05:32.320><c> generating</c><00:05:32.960><c> an</c><00:05:33.120><c> array</c><00:05:33.440><c> of</c><00:05:33.600><c> elements</c><00:05:34.160><c> 1</c><00:05:34.400><c> to</c>

00:05:34.550 --> 00:05:34.560 align:start position:0%
of generating an array of elements 1 to
 

00:05:34.560 --> 00:05:35.510 align:start position:0%
of generating an array of elements 1 to
3

00:05:35.510 --> 00:05:35.520 align:start position:0%
3
 

00:05:35.520 --> 00:05:38.710 align:start position:0%
3
into<00:05:35.919><c> an</c><00:05:36.080><c> array</c><00:05:36.400><c> itself</c><00:05:37.280><c> the</c><00:05:37.440><c> subarray</c><00:05:38.479><c> has</c>

00:05:38.710 --> 00:05:38.720 align:start position:0%
into an array itself the subarray has
 

00:05:38.720 --> 00:05:39.909 align:start position:0%
into an array itself the subarray has
three<00:05:39.039><c> elements</c>

00:05:39.909 --> 00:05:39.919 align:start position:0%
three elements
 

00:05:39.919 --> 00:05:43.430 align:start position:0%
three elements
the<00:05:40.080><c> integers</c><00:05:40.560><c> one</c><00:05:40.880><c> two</c><00:05:41.199><c> and</c><00:05:41.360><c> three</c>

00:05:43.430 --> 00:05:43.440 align:start position:0%
the integers one two and three
 

00:05:43.440 --> 00:05:45.830 align:start position:0%
the integers one two and three
so<00:05:43.680><c> let's</c><00:05:44.000><c> take</c><00:05:44.240><c> a</c><00:05:44.400><c> look</c><00:05:44.800><c> at</c><00:05:45.120><c> how</c><00:05:45.360><c> this</c><00:05:45.680><c> is</c>

00:05:45.830 --> 00:05:45.840 align:start position:0%
so let's take a look at how this is
 

00:05:45.840 --> 00:05:46.550 align:start position:0%
so let's take a look at how this is
going<00:05:46.160><c> to</c>

00:05:46.550 --> 00:05:46.560 align:start position:0%
going to
 

00:05:46.560 --> 00:05:50.830 align:start position:0%
going to
affect<00:05:46.960><c> our</c><00:05:47.199><c> invocation</c><00:05:47.759><c> of</c><00:05:47.840><c> the</c><00:05:48.000><c> product</c>

00:05:50.830 --> 00:05:50.840 align:start position:0%
 
 

00:05:50.840 --> 00:05:54.310 align:start position:0%
 
method

00:05:54.310 --> 00:05:54.320 align:start position:0%
 
 

00:05:54.320 --> 00:06:04.070 align:start position:0%
 
we'll<00:05:54.560><c> invoke</c><00:05:55.039><c> product</c><00:05:55.520><c> on</c><00:05:55.759><c> r</c>

00:06:04.070 --> 00:06:04.080 align:start position:0%
 
 

00:06:04.080 --> 00:06:06.070 align:start position:0%
 
and<00:06:04.240><c> now</c><00:06:04.479><c> we</c><00:06:04.639><c> see</c><00:06:04.800><c> that</c><00:06:05.039><c> the</c><00:06:05.199><c> returned</c><00:06:05.600><c> array</c>

00:06:06.070 --> 00:06:06.080 align:start position:0%
and now we see that the returned array
 

00:06:06.080 --> 00:06:08.309 align:start position:0%
and now we see that the returned array
is<00:06:06.240><c> three</c><00:06:06.479><c> levels</c><00:06:06.960><c> deep</c>

00:06:08.309 --> 00:06:08.319 align:start position:0%
is three levels deep
 

00:06:08.319 --> 00:06:10.870 align:start position:0%
is three levels deep
we<00:06:08.479><c> have</c><00:06:08.720><c> an</c><00:06:08.880><c> outer</c><00:06:09.280><c> array</c><00:06:10.000><c> which</c><00:06:10.319><c> contains</c>

00:06:10.870 --> 00:06:10.880 align:start position:0%
we have an outer array which contains
 

00:06:10.880 --> 00:06:11.990 align:start position:0%
we have an outer array which contains
two<00:06:11.120><c> elements</c>

00:06:11.990 --> 00:06:12.000 align:start position:0%
two elements
 

00:06:12.000 --> 00:06:14.629 align:start position:0%
two elements
both<00:06:12.240><c> of</c><00:06:12.319><c> which</c><00:06:12.639><c> are</c><00:06:12.800><c> arrays</c><00:06:14.080><c> each</c><00:06:14.240><c> of</c><00:06:14.400><c> those</c>

00:06:14.629 --> 00:06:14.639 align:start position:0%
both of which are arrays each of those
 

00:06:14.639 --> 00:06:15.670 align:start position:0%
both of which are arrays each of those
two<00:06:14.880><c> sub-arrays</c>

00:06:15.670 --> 00:06:15.680 align:start position:0%
two sub-arrays
 

00:06:15.680 --> 00:06:18.629 align:start position:0%
two sub-arrays
also<00:06:16.000><c> contains</c><00:06:16.560><c> two</c><00:06:16.800><c> elements</c><00:06:17.919><c> one</c><00:06:18.319><c> is</c><00:06:18.479><c> a</c>

00:06:18.629 --> 00:06:18.639 align:start position:0%
also contains two elements one is a
 

00:06:18.639 --> 00:06:19.510 align:start position:0%
also contains two elements one is a
string

00:06:19.510 --> 00:06:19.520 align:start position:0%
string
 

00:06:19.520 --> 00:06:23.270 align:start position:0%
string
and<00:06:19.759><c> one</c><00:06:20.240><c> is</c><00:06:20.479><c> another</c><00:06:20.880><c> array</c><00:06:22.479><c> finally</c><00:06:23.039><c> let's</c>

00:06:23.270 --> 00:06:23.280 align:start position:0%
and one is another array finally let's
 

00:06:23.280 --> 00:06:26.230 align:start position:0%
and one is another array finally let's
look<00:06:23.440><c> at</c><00:06:23.520><c> the</c><00:06:23.680><c> last</c><00:06:24.000><c> line</c><00:06:24.240><c> of</c><00:06:24.319><c> this</c><00:06:24.560><c> program</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
look at the last line of this program
 

00:06:26.240 --> 00:06:31.590 align:start position:0%
look at the last line of this program
again<00:06:26.880><c> we</c><00:06:27.120><c> call</c><00:06:27.600><c> first</c><00:06:28.240><c> on</c><00:06:28.560><c> r</c>

00:06:31.590 --> 00:06:31.600 align:start position:0%
 
 

00:06:31.600 --> 00:06:33.749 align:start position:0%
 
and<00:06:31.759><c> when</c><00:06:31.919><c> we</c><00:06:32.080><c> do</c><00:06:32.240><c> that</c><00:06:32.479><c> we</c><00:06:32.639><c> can</c><00:06:32.880><c> see</c><00:06:33.199><c> that</c><00:06:33.600><c> the</c>

00:06:33.749 --> 00:06:33.759 align:start position:0%
and when we do that we can see that the
 

00:06:33.759 --> 00:06:35.270 align:start position:0%
and when we do that we can see that the
first<00:06:34.080><c> element</c><00:06:34.560><c> of</c><00:06:34.800><c> r</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
first element of r
 

00:06:35.280 --> 00:06:38.710 align:start position:0%
first element of r
is<00:06:35.520><c> this</c><00:06:35.840><c> two</c><00:06:36.080><c> element</c><00:06:36.560><c> subarray</c><00:06:38.000><c> now</c><00:06:38.319><c> as</c><00:06:38.560><c> an</c>

00:06:38.710 --> 00:06:38.720 align:start position:0%
is this two element subarray now as an
 

00:06:38.720 --> 00:06:41.029 align:start position:0%
is this two element subarray now as an
argument<00:06:39.199><c> to</c><00:06:39.360><c> delete</c><00:06:39.759><c> in</c><00:06:39.919><c> this</c><00:06:40.160><c> line</c><00:06:40.400><c> of</c><00:06:40.560><c> code</c>

00:06:41.029 --> 00:06:41.039 align:start position:0%
argument to delete in this line of code
 

00:06:41.039 --> 00:06:45.350 align:start position:0%
argument to delete in this line of code
we<00:06:41.280><c> pass</c><00:06:41.680><c> in</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
 
 

00:06:45.360 --> 00:06:49.350 align:start position:0%
 
r<00:06:45.840><c> first</c><00:06:47.520><c> and</c><00:06:47.680><c> then</c><00:06:48.000><c> we</c><00:06:48.240><c> chain</c><00:06:48.560><c> on</c><00:06:48.800><c> a</c><00:06:48.960><c> method</c>

00:06:49.350 --> 00:06:49.360 align:start position:0%
r first and then we chain on a method
 

00:06:49.360 --> 00:06:50.790 align:start position:0%
r first and then we chain on a method
call<00:06:49.599><c> to</c><00:06:49.840><c> last</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
call to last
 

00:06:50.800 --> 00:06:52.950 align:start position:0%
call to last
this<00:06:51.039><c> is</c><00:06:51.199><c> going</c><00:06:51.520><c> to</c><00:06:51.759><c> return</c><00:06:52.240><c> the</c><00:06:52.400><c> subarray</c>

00:06:52.950 --> 00:06:52.960 align:start position:0%
this is going to return the subarray
 

00:06:52.960 --> 00:06:54.309 align:start position:0%
this is going to return the subarray
that<00:06:53.120><c> contains</c><00:06:53.599><c> the</c><00:06:53.759><c> elements</c>

00:06:54.309 --> 00:06:54.319 align:start position:0%
that contains the elements
 

00:06:54.319 --> 00:06:57.749 align:start position:0%
that contains the elements
1<00:06:54.800><c> 2</c><00:06:55.199><c> and</c><00:06:55.440><c> 3.</c>

00:06:57.749 --> 00:06:57.759 align:start position:0%
1 2 and 3.
 

00:06:57.759 --> 00:06:59.990 align:start position:0%
1 2 and 3.
so<00:06:58.000><c> we</c><00:06:58.160><c> are</c><00:06:58.240><c> going</c><00:06:58.479><c> to</c><00:06:58.639><c> delete</c><00:06:59.120><c> the</c><00:06:59.520><c> last</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
so we are going to delete the last
 

00:07:00.000 --> 00:07:01.350 align:start position:0%
so we are going to delete the last
element<00:07:00.720><c> from</c><00:07:00.960><c> the</c>

00:07:01.350 --> 00:07:01.360 align:start position:0%
element from the
 

00:07:01.360 --> 00:07:04.469 align:start position:0%
element from the
first<00:07:01.759><c> element</c><00:07:02.800><c> of</c><00:07:03.120><c> r</c>

00:07:04.469 --> 00:07:04.479 align:start position:0%
first element of r
 

00:07:04.479 --> 00:07:09.189 align:start position:0%
first element of r
so<00:07:04.800><c> let's</c><00:07:05.039><c> run</c><00:07:05.280><c> this</c><00:07:05.440><c> whole</c><00:07:05.680><c> line</c><00:07:05.919><c> of</c><00:07:06.160><c> code</c>

00:07:09.189 --> 00:07:09.199 align:start position:0%
 
 

00:07:09.199 --> 00:07:11.029 align:start position:0%
 
remember<00:07:09.680><c> that</c><00:07:09.919><c> delete</c><00:07:10.319><c> will</c><00:07:10.479><c> return</c><00:07:10.880><c> the</c>

00:07:11.029 --> 00:07:11.039 align:start position:0%
remember that delete will return the
 

00:07:11.039 --> 00:07:15.189 align:start position:0%
remember that delete will return the
deleted<00:07:11.520><c> item</c>

00:07:15.189 --> 00:07:15.199 align:start position:0%
 
 

00:07:15.199 --> 00:07:18.230 align:start position:0%
 
so<00:07:15.360><c> we</c><00:07:15.599><c> expect</c><00:07:16.000><c> that</c><00:07:16.160><c> this</c><00:07:16.400><c> code</c><00:07:16.639><c> will</c><00:07:16.880><c> return</c>

00:07:18.230 --> 00:07:18.240 align:start position:0%
so we expect that this code will return
 

00:07:18.240 --> 00:07:20.710 align:start position:0%
so we expect that this code will return
the<00:07:18.479><c> array</c><00:07:18.800><c> with</c><00:07:19.039><c> the</c><00:07:19.199><c> integers</c><00:07:19.840><c> one</c><00:07:20.160><c> two</c><00:07:20.479><c> and</c>

00:07:20.710 --> 00:07:20.720 align:start position:0%
the array with the integers one two and
 

00:07:20.720 --> 00:07:23.110 align:start position:0%
the array with the integers one two and
three

00:07:23.110 --> 00:07:23.120 align:start position:0%
 
 

00:07:23.120 --> 00:07:25.670 align:start position:0%
 
and<00:07:23.360><c> now</c><00:07:23.520><c> we'll</c><00:07:23.759><c> see</c><00:07:24.000><c> that</c><00:07:24.400><c> r</c><00:07:24.720><c> still</c><00:07:24.960><c> contains</c>

00:07:25.670 --> 00:07:25.680 align:start position:0%
and now we'll see that r still contains
 

00:07:25.680 --> 00:07:28.710 align:start position:0%
and now we'll see that r still contains
two<00:07:25.919><c> elements</c>

00:07:28.710 --> 00:07:28.720 align:start position:0%
 
 

00:07:28.720 --> 00:07:31.589 align:start position:0%
 
however<00:07:29.520><c> the</c><00:07:29.840><c> first</c><00:07:30.319><c> element</c><00:07:31.039><c> the</c><00:07:31.199><c> first</c>

00:07:31.589 --> 00:07:31.599 align:start position:0%
however the first element the first
 

00:07:31.599 --> 00:07:32.469 align:start position:0%
however the first element the first
subarray

00:07:32.469 --> 00:07:32.479 align:start position:0%
subarray
 

00:07:32.479 --> 00:07:36.550 align:start position:0%
subarray
now<00:07:32.720><c> contains</c><00:07:33.280><c> only</c><00:07:33.599><c> one</c><00:07:33.840><c> element</c>

00:07:36.550 --> 00:07:36.560 align:start position:0%
 
 

00:07:36.560 --> 00:07:38.390 align:start position:0%
 
this<00:07:36.800><c> code</c><00:07:37.120><c> may</c><00:07:37.280><c> have</c><00:07:37.440><c> felt</c><00:07:37.759><c> a</c><00:07:37.919><c> little</c><00:07:38.160><c> bit</c>

00:07:38.390 --> 00:07:38.400 align:start position:0%
this code may have felt a little bit
 

00:07:38.400 --> 00:07:39.749 align:start position:0%
this code may have felt a little bit
difficult<00:07:38.880><c> to</c><00:07:39.039><c> parse</c>

00:07:39.749 --> 00:07:39.759 align:start position:0%
difficult to parse
 

00:07:39.759 --> 00:07:41.710 align:start position:0%
difficult to parse
don't<00:07:40.080><c> hesitate</c><00:07:40.720><c> to</c><00:07:41.199><c> check</c><00:07:41.440><c> out</c><00:07:41.520><c> the</c>

00:07:41.710 --> 00:07:41.720 align:start position:0%
don't hesitate to check out the
 

00:07:41.720 --> 00:07:42.950 align:start position:0%
don't hesitate to check out the
documentation

00:07:42.950 --> 00:07:42.960 align:start position:0%
documentation
 

00:07:42.960 --> 00:07:53.280 align:start position:0%
documentation
and<00:07:43.360><c> test</c><00:07:43.759><c> code</c><00:07:44.080><c> out</c><00:07:44.240><c> in</c><00:07:50.280><c> irb</c>

