WEBVTT
Kind: captions
Language: en

00:00:04.560 --> 00:00:05.510 align:start position:0%
 
we<00:00:04.720><c> need</c><00:00:04.960><c> to</c>

00:00:05.510 --> 00:00:05.520 align:start position:0%
we need to
 

00:00:05.520 --> 00:00:08.150 align:start position:0%
we need to
write<00:00:05.839><c> a</c><00:00:06.080><c> while</c><00:00:06.399><c> loop</c><00:00:06.879><c> that</c><00:00:07.200><c> takes</c><00:00:07.600><c> input</c><00:00:08.000><c> from</c>

00:00:08.150 --> 00:00:08.160 align:start position:0%
write a while loop that takes input from
 

00:00:08.160 --> 00:00:09.190 align:start position:0%
write a while loop that takes input from
the<00:00:08.320><c> user</c>

00:00:09.190 --> 00:00:09.200 align:start position:0%
the user
 

00:00:09.200 --> 00:00:11.990 align:start position:0%
the user
performs<00:00:09.760><c> an</c><00:00:10.000><c> action</c><00:00:10.719><c> and</c><00:00:11.120><c> only</c><00:00:11.440><c> stops</c><00:00:11.840><c> when</c>

00:00:11.990 --> 00:00:12.000 align:start position:0%
performs an action and only stops when
 

00:00:12.000 --> 00:00:13.190 align:start position:0%
performs an action and only stops when
the<00:00:12.160><c> user</c><00:00:12.639><c> types</c>

00:00:13.190 --> 00:00:13.200 align:start position:0%
the user types
 

00:00:13.200 --> 00:00:15.509 align:start position:0%
the user types
stop<00:00:14.080><c> so</c><00:00:14.240><c> we're</c><00:00:14.400><c> going</c><00:00:14.559><c> to</c><00:00:14.639><c> be</c><00:00:14.799><c> examining</c><00:00:15.440><c> the</c>

00:00:15.509 --> 00:00:15.519 align:start position:0%
stop so we're going to be examining the
 

00:00:15.519 --> 00:00:18.790 align:start position:0%
stop so we're going to be examining the
user<00:00:15.839><c> input</c><00:00:16.240><c> here</c>

00:00:18.790 --> 00:00:18.800 align:start position:0%
 
 

00:00:18.800 --> 00:00:21.990 align:start position:0%
 
now<00:00:18.960><c> when</c><00:00:19.119><c> we</c><00:00:19.359><c> write</c><00:00:19.680><c> a</c><00:00:19.840><c> while</c><00:00:20.240><c> loop</c>

00:00:21.990 --> 00:00:22.000 align:start position:0%
now when we write a while loop
 

00:00:22.000 --> 00:00:24.230 align:start position:0%
now when we write a while loop
we<00:00:22.160><c> need</c><00:00:22.400><c> to</c><00:00:22.560><c> provide</c><00:00:23.039><c> a</c><00:00:23.199><c> condition</c><00:00:23.760><c> to</c><00:00:23.920><c> this</c>

00:00:24.230 --> 00:00:24.240 align:start position:0%
we need to provide a condition to this
 

00:00:24.240 --> 00:00:25.189 align:start position:0%
we need to provide a condition to this
while<00:00:24.560><c> loop</c>

00:00:25.189 --> 00:00:25.199 align:start position:0%
while loop
 

00:00:25.199 --> 00:00:27.670 align:start position:0%
while loop
to<00:00:25.439><c> determine</c><00:00:26.240><c> when</c><00:00:26.480><c> we</c><00:00:26.640><c> want</c><00:00:26.960><c> it</c><00:00:27.039><c> to</c><00:00:27.279><c> stop</c>

00:00:27.670 --> 00:00:27.680 align:start position:0%
to determine when we want it to stop
 

00:00:27.680 --> 00:00:29.029 align:start position:0%
to determine when we want it to stop
looping

00:00:29.029 --> 00:00:29.039 align:start position:0%
looping
 

00:00:29.039 --> 00:00:31.429 align:start position:0%
looping
as<00:00:29.279><c> long</c><00:00:29.439><c> as</c><00:00:29.599><c> this</c><00:00:29.920><c> condition</c><00:00:30.400><c> evaluates</c><00:00:31.119><c> as</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
as long as this condition evaluates as
 

00:00:31.439 --> 00:00:34.229 align:start position:0%
as long as this condition evaluates as
true<00:00:31.920><c> the</c><00:00:32.079><c> loop</c><00:00:32.320><c> will</c><00:00:32.559><c> continue</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
true the loop will continue
 

00:00:34.239 --> 00:00:36.709 align:start position:0%
true the loop will continue
so<00:00:34.399><c> let's</c><00:00:34.719><c> create</c><00:00:35.040><c> a</c><00:00:35.200><c> variable</c><00:00:35.840><c> x</c><00:00:36.239><c> that</c><00:00:36.480><c> will</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
so let's create a variable x that will
 

00:00:36.719 --> 00:00:40.389 align:start position:0%
so let's create a variable x that will
reference<00:00:37.200><c> our</c><00:00:37.360><c> user</c><00:00:37.840><c> input</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
 
 

00:00:40.399 --> 00:00:43.510 align:start position:0%
 
while<00:00:40.800><c> x</c><00:00:41.200><c> is</c><00:00:41.440><c> not</c><00:00:41.840><c> equal</c><00:00:42.719><c> to</c>

00:00:43.510 --> 00:00:43.520 align:start position:0%
while x is not equal to
 

00:00:43.520 --> 00:00:49.990 align:start position:0%
while x is not equal to
stop<00:00:45.520><c> then</c><00:00:45.680><c> we</c><00:00:45.840><c> want</c><00:00:46.079><c> to</c><00:00:46.239><c> continue</c><00:00:46.719><c> looping</c>

00:00:49.990 --> 00:00:50.000 align:start position:0%
 
 

00:00:50.000 --> 00:00:52.069 align:start position:0%
 
let's<00:00:50.320><c> begin</c><00:00:50.640><c> just</c><00:00:50.879><c> by</c><00:00:51.120><c> outputting</c><00:00:51.600><c> a</c><00:00:51.680><c> message</c>

00:00:52.069 --> 00:00:52.079 align:start position:0%
let's begin just by outputting a message
 

00:00:52.079 --> 00:00:57.510 align:start position:0%
let's begin just by outputting a message
to<00:00:52.239><c> the</c><00:00:52.399><c> user</c>

00:00:57.510 --> 00:00:57.520 align:start position:0%
 
 

00:00:57.520 --> 00:01:03.430 align:start position:0%
 
and<00:00:57.680><c> let's</c><00:00:58.000><c> run</c><00:00:58.239><c> our</c><00:00:58.399><c> code</c>

00:01:03.430 --> 00:01:03.440 align:start position:0%
 
 

00:01:03.440 --> 00:01:05.910 align:start position:0%
 
we've<00:01:03.600><c> gotten</c><00:01:04.000><c> an</c><00:01:04.320><c> error</c><00:01:04.799><c> undefined</c><00:01:05.439><c> local</c>

00:01:05.910 --> 00:01:05.920 align:start position:0%
we've gotten an error undefined local
 

00:01:05.920 --> 00:01:07.109 align:start position:0%
we've gotten an error undefined local
variable<00:01:06.400><c> or</c><00:01:06.640><c> method</c>

00:01:07.109 --> 00:01:07.119 align:start position:0%
variable or method
 

00:01:07.119 --> 00:01:10.870 align:start position:0%
variable or method
x<00:01:08.159><c> this</c><00:01:08.400><c> is</c><00:01:08.560><c> on</c><00:01:08.720><c> line</c><00:01:09.040><c> one</c>

00:01:10.870 --> 00:01:10.880 align:start position:0%
x this is on line one
 

00:01:10.880 --> 00:01:14.789 align:start position:0%
x this is on line one
so<00:01:11.040><c> let's</c><00:01:11.280><c> go</c><00:01:11.439><c> back</c><00:01:11.680><c> and</c><00:01:11.760><c> look</c><00:01:11.920><c> at</c><00:01:12.000><c> our</c><00:01:12.159><c> code</c>

00:01:14.789 --> 00:01:14.799 align:start position:0%
 
 

00:01:14.799 --> 00:01:18.310 align:start position:0%
 
on<00:01:15.040><c> line</c><00:01:15.360><c> one</c><00:01:16.880><c> we</c><00:01:17.040><c> use</c><00:01:17.360><c> x</c><00:01:17.680><c> as</c><00:01:17.840><c> part</c><00:01:18.000><c> of</c><00:01:18.159><c> our</c>

00:01:18.310 --> 00:01:18.320 align:start position:0%
on line one we use x as part of our
 

00:01:18.320 --> 00:01:20.950 align:start position:0%
on line one we use x as part of our
condition<00:01:18.880><c> but</c><00:01:19.119><c> we</c><00:01:19.280><c> haven't</c><00:01:19.600><c> yet</c><00:01:19.759><c> defined</c><00:01:20.320><c> it</c>

00:01:20.950 --> 00:01:20.960 align:start position:0%
condition but we haven't yet defined it
 

00:01:20.960 --> 00:01:23.270 align:start position:0%
condition but we haven't yet defined it
so<00:01:21.119><c> let's</c><00:01:21.360><c> go</c><00:01:21.520><c> ahead</c><00:01:21.840><c> and</c><00:01:22.000><c> define</c><00:01:22.479><c> x</c><00:01:22.799><c> on</c><00:01:22.960><c> line</c>

00:01:23.270 --> 00:01:23.280 align:start position:0%
so let's go ahead and define x on line
 

00:01:23.280 --> 00:01:24.830 align:start position:0%
so let's go ahead and define x on line
one<00:01:23.680><c> outside</c><00:01:24.080><c> of</c><00:01:24.159><c> this</c>

00:01:24.830 --> 00:01:24.840 align:start position:0%
one outside of this
 

00:01:24.840 --> 00:01:28.230 align:start position:0%
one outside of this
loop<00:01:26.479><c> and</c><00:01:26.720><c> we</c><00:01:26.880><c> can</c><00:01:27.119><c> just</c><00:01:27.280><c> set</c><00:01:27.520><c> it</c><00:01:27.680><c> equal</c><00:01:27.920><c> to</c><00:01:28.080><c> an</c>

00:01:28.230 --> 00:01:28.240 align:start position:0%
loop and we can just set it equal to an
 

00:01:28.240 --> 00:01:30.310 align:start position:0%
loop and we can just set it equal to an
empty<00:01:28.640><c> string</c><00:01:28.960><c> right</c><00:01:29.200><c> now</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
empty string right now
 

00:01:30.320 --> 00:01:32.390 align:start position:0%
empty string right now
now<00:01:30.560><c> let's</c><00:01:30.799><c> run</c><00:01:30.960><c> our</c><00:01:31.119><c> code</c><00:01:31.360><c> again</c><00:01:31.759><c> and</c><00:01:32.079><c> see</c><00:01:32.240><c> if</c>

00:01:32.390 --> 00:01:32.400 align:start position:0%
now let's run our code again and see if
 

00:01:32.400 --> 00:01:37.910 align:start position:0%
now let's run our code again and see if
it<00:01:32.479><c> runs</c><00:01:32.720><c> without</c><00:01:33.119><c> error</c>

00:01:37.910 --> 00:01:37.920 align:start position:0%
 
 

00:01:37.920 --> 00:01:40.069 align:start position:0%
 
this<00:01:38.159><c> time</c><00:01:38.400><c> we</c><00:01:38.560><c> don't</c><00:01:38.799><c> get</c><00:01:38.960><c> an</c><00:01:39.200><c> error</c><00:01:39.520><c> however</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
this time we don't get an error however
 

00:01:40.079 --> 00:01:42.280 align:start position:0%
this time we don't get an error however
we<00:01:40.240><c> have</c><00:01:40.479><c> an</c><00:01:40.720><c> infinite</c><00:01:41.360><c> loop</c>

00:01:42.280 --> 00:01:42.290 align:start position:0%
we have an infinite loop
 

00:01:42.290 --> 00:01:45.350 align:start position:0%
we have an infinite loop
[Music]

00:01:45.350 --> 00:01:45.360 align:start position:0%
[Music]
 

00:01:45.360 --> 00:01:46.789 align:start position:0%
 
and<00:01:45.439><c> that's</c><00:01:45.759><c> because</c><00:01:46.079><c> we</c><00:01:46.240><c> don't</c><00:01:46.479><c> ever</c>

00:01:46.789 --> 00:01:46.799 align:start position:0%
and that's because we don't ever
 

00:01:46.799 --> 00:01:49.990 align:start position:0%
and that's because we don't ever
reassign<00:01:47.680><c> x</c><00:01:48.320><c> x</c><00:01:48.560><c> continues</c><00:01:49.119><c> to</c><00:01:49.280><c> reference</c><00:01:49.759><c> an</c>

00:01:49.990 --> 00:01:50.000 align:start position:0%
reassign x x continues to reference an
 

00:01:50.000 --> 00:01:53.109 align:start position:0%
reassign x x continues to reference an
empty<00:01:50.399><c> string</c><00:01:51.360><c> so</c><00:01:51.520><c> the</c><00:01:51.680><c> condition</c><00:01:52.399><c> x</c><00:01:52.720><c> is</c><00:01:52.880><c> not</c>

00:01:53.109 --> 00:01:53.119 align:start position:0%
empty string so the condition x is not
 

00:01:53.119 --> 00:01:54.230 align:start position:0%
empty string so the condition x is not
equal<00:01:53.360><c> to</c><00:01:53.520><c> stop</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
equal to stop
 

00:01:54.240 --> 00:01:57.030 align:start position:0%
equal to stop
just<00:01:54.479><c> continually</c><00:01:55.280><c> evaluates</c><00:01:55.920><c> as</c><00:01:56.159><c> true</c><00:01:56.880><c> and</c>

00:01:57.030 --> 00:01:57.040 align:start position:0%
just continually evaluates as true and
 

00:01:57.040 --> 00:02:00.230 align:start position:0%
just continually evaluates as true and
our<00:01:57.280><c> while</c><00:01:57.600><c> loop</c><00:01:57.920><c> continues</c><00:01:58.479><c> looping</c>

00:02:00.230 --> 00:02:00.240 align:start position:0%
our while loop continues looping
 

00:02:00.240 --> 00:02:02.230 align:start position:0%
our while loop continues looping
so<00:02:00.479><c> let's</c><00:02:00.719><c> add</c><00:02:01.040><c> a</c><00:02:01.119><c> little</c><00:02:01.280><c> bit</c><00:02:01.520><c> more</c><00:02:01.759><c> code</c><00:02:02.079><c> to</c>

00:02:02.230 --> 00:02:02.240 align:start position:0%
so let's add a little bit more code to
 

00:02:02.240 --> 00:02:05.910 align:start position:0%
so let's add a little bit more code to
our<00:02:02.399><c> while</c><00:02:02.719><c> loop</c>

00:02:05.910 --> 00:02:05.920 align:start position:0%
 
 

00:02:05.920 --> 00:02:08.150 align:start position:0%
 
we'll<00:02:06.159><c> collect</c><00:02:06.479><c> an</c><00:02:06.719><c> answer</c><00:02:07.119><c> from</c><00:02:07.360><c> the</c><00:02:07.520><c> user</c><00:02:08.000><c> in</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
we'll collect an answer from the user in
 

00:02:08.160 --> 00:02:10.070 align:start position:0%
we'll collect an answer from the user in
response<00:02:08.720><c> to</c><00:02:08.879><c> our</c><00:02:09.039><c> question</c><00:02:09.520><c> how</c><00:02:09.759><c> are</c><00:02:09.840><c> you</c>

00:02:10.070 --> 00:02:10.080 align:start position:0%
response to our question how are you
 

00:02:10.080 --> 00:02:15.670 align:start position:0%
response to our question how are you
feeling

00:02:15.670 --> 00:02:15.680 align:start position:0%
 
 

00:02:15.680 --> 00:02:17.430 align:start position:0%
 
then<00:02:15.840><c> we'll</c><00:02:16.000><c> display</c><00:02:16.480><c> another</c><00:02:16.879><c> message</c><00:02:17.280><c> to</c>

00:02:17.430 --> 00:02:17.440 align:start position:0%
then we'll display another message to
 

00:02:17.440 --> 00:02:22.229 align:start position:0%
then we'll display another message to
the<00:02:20.840><c> user</c>

00:02:22.229 --> 00:02:22.239 align:start position:0%
the user
 

00:02:22.239 --> 00:02:24.229 align:start position:0%
the user
do<00:02:22.319><c> you</c><00:02:22.400><c> want</c><00:02:22.560><c> me</c><00:02:22.720><c> to</c><00:02:22.879><c> ask</c><00:02:23.120><c> you</c><00:02:23.280><c> again</c><00:02:24.160><c> and</c>

00:02:24.229 --> 00:02:24.239 align:start position:0%
do you want me to ask you again and
 

00:02:24.239 --> 00:02:25.830 align:start position:0%
do you want me to ask you again and
their<00:02:24.480><c> response</c><00:02:24.879><c> to</c><00:02:25.040><c> this</c><00:02:25.360><c> question</c>

00:02:25.830 --> 00:02:25.840 align:start position:0%
their response to this question
 

00:02:25.840 --> 00:02:27.430 align:start position:0%
their response to this question
will<00:02:26.000><c> determine</c><00:02:26.640><c> whether</c><00:02:26.959><c> or</c><00:02:27.040><c> not</c><00:02:27.280><c> we</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
will determine whether or not we
 

00:02:27.440 --> 00:02:29.510 align:start position:0%
will determine whether or not we
continue<00:02:27.920><c> looping</c>

00:02:29.510 --> 00:02:29.520 align:start position:0%
continue looping
 

00:02:29.520 --> 00:02:32.869 align:start position:0%
continue looping
so<00:02:29.760><c> here</c><00:02:30.000><c> is</c><00:02:30.160><c> where</c><00:02:30.400><c> we'll</c><00:02:30.640><c> reassign</c><00:02:31.360><c> x</c>

00:02:32.869 --> 00:02:32.879 align:start position:0%
so here is where we'll reassign x
 

00:02:32.879 --> 00:02:35.030 align:start position:0%
so here is where we'll reassign x
we'll<00:02:33.120><c> use</c><00:02:33.440><c> git</c><00:02:33.680><c> s</c><00:02:33.920><c> to</c><00:02:34.080><c> collect</c><00:02:34.480><c> the</c><00:02:34.640><c> user</c>

00:02:35.030 --> 00:02:35.040 align:start position:0%
we'll use git s to collect the user
 

00:02:35.040 --> 00:02:35.990 align:start position:0%
we'll use git s to collect the user
input

00:02:35.990 --> 00:02:36.000 align:start position:0%
input
 

00:02:36.000 --> 00:02:38.710 align:start position:0%
input
and<00:02:36.480><c> chain</c><00:02:36.800><c> a</c><00:02:36.959><c> method</c><00:02:37.360><c> call</c><00:02:37.599><c> to</c><00:02:37.840><c> chomp</c><00:02:38.319><c> to</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
and chain a method call to chomp to
 

00:02:38.720 --> 00:02:40.790 align:start position:0%
and chain a method call to chomp to
remove<00:02:39.120><c> the</c><00:02:39.360><c> newline</c><00:02:39.840><c> character</c>

00:02:40.790 --> 00:02:40.800 align:start position:0%
remove the newline character
 

00:02:40.800 --> 00:02:42.949 align:start position:0%
remove the newline character
now<00:02:40.959><c> when</c><00:02:41.120><c> we</c><00:02:41.360><c> enter</c><00:02:41.680><c> stop</c><00:02:42.000><c> we</c><00:02:42.239><c> expect</c><00:02:42.720><c> that</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
now when we enter stop we expect that
 

00:02:42.959 --> 00:02:43.990 align:start position:0%
now when we enter stop we expect that
ruby<00:02:43.440><c> will</c>

00:02:43.990 --> 00:02:44.000 align:start position:0%
ruby will
 

00:02:44.000 --> 00:02:46.949 align:start position:0%
ruby will
break<00:02:44.319><c> out</c><00:02:44.480><c> of</c><00:02:44.560><c> this</c><00:02:44.800><c> loop</c><00:02:46.400><c> let's</c><00:02:46.640><c> run</c><00:02:46.800><c> our</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
break out of this loop let's run our
 

00:02:46.959 --> 00:02:50.869 align:start position:0%
break out of this loop let's run our
code<00:02:48.840><c> again</c>

00:02:50.869 --> 00:02:50.879 align:start position:0%
code again
 

00:02:50.879 --> 00:02:53.589 align:start position:0%
code again
so<00:02:51.040><c> we're</c><00:02:51.280><c> prompted</c><00:02:51.760><c> how</c><00:02:51.920><c> are</c><00:02:52.080><c> you</c><00:02:52.239><c> feeling</c>

00:02:53.589 --> 00:02:53.599 align:start position:0%
so we're prompted how are you feeling
 

00:02:53.599 --> 00:02:55.830 align:start position:0%
so we're prompted how are you feeling
well<00:02:53.840><c> input</c><00:02:54.239><c> good</c>

00:02:55.830 --> 00:02:55.840 align:start position:0%
well input good
 

00:02:55.840 --> 00:02:57.589 align:start position:0%
well input good
and<00:02:56.000><c> the</c><00:02:56.160><c> program</c><00:02:56.560><c> asks</c><00:02:56.879><c> us</c><00:02:57.120><c> do</c><00:02:57.200><c> you</c><00:02:57.280><c> want</c><00:02:57.440><c> me</c>

00:02:57.589 --> 00:02:57.599 align:start position:0%
and the program asks us do you want me
 

00:02:57.599 --> 00:02:59.270 align:start position:0%
and the program asks us do you want me
to<00:02:57.680><c> ask</c><00:02:57.920><c> you</c><00:02:58.080><c> again</c>

00:02:59.270 --> 00:02:59.280 align:start position:0%
to ask you again
 

00:02:59.280 --> 00:03:03.110 align:start position:0%
to ask you again
let's<00:02:59.599><c> input</c><00:03:00.080><c> yes</c><00:03:01.920><c> and</c><00:03:02.159><c> we</c><00:03:02.319><c> loop</c><00:03:02.640><c> again</c><00:03:02.959><c> we're</c>

00:03:03.110 --> 00:03:03.120 align:start position:0%
let's input yes and we loop again we're
 

00:03:03.120 --> 00:03:05.350 align:start position:0%
let's input yes and we loop again we're
asked<00:03:03.360><c> how</c><00:03:03.519><c> we're</c><00:03:03.760><c> feeling</c><00:03:04.159><c> again</c>

00:03:05.350 --> 00:03:05.360 align:start position:0%
asked how we're feeling again
 

00:03:05.360 --> 00:03:08.790 align:start position:0%
asked how we're feeling again
this<00:03:05.519><c> time</c><00:03:05.840><c> i'll</c><00:03:06.000><c> input</c><00:03:06.400><c> stop</c><00:03:08.319><c> and</c><00:03:08.480><c> you</c><00:03:08.640><c> can</c>

00:03:08.790 --> 00:03:08.800 align:start position:0%
this time i'll input stop and you can
 

00:03:08.800 --> 00:03:11.589 align:start position:0%
this time i'll input stop and you can
see<00:03:08.959><c> that</c><00:03:09.120><c> the</c><00:03:09.280><c> loop</c><00:03:09.519><c> continues</c>

00:03:11.589 --> 00:03:11.599 align:start position:0%
see that the loop continues
 

00:03:11.599 --> 00:03:13.430 align:start position:0%
see that the loop continues
that's<00:03:11.920><c> because</c><00:03:12.319><c> in</c><00:03:12.480><c> our</c><00:03:12.720><c> program</c><00:03:13.200><c> we're</c>

00:03:13.430 --> 00:03:13.440 align:start position:0%
that's because in our program we're
 

00:03:13.440 --> 00:03:14.949 align:start position:0%
that's because in our program we're
specifically<00:03:14.239><c> looking</c><00:03:14.640><c> for</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
specifically looking for
 

00:03:14.959 --> 00:03:19.509 align:start position:0%
specifically looking for
stop<00:03:15.599><c> with</c><00:03:15.920><c> all</c><00:03:16.239><c> uppercase</c><00:03:16.959><c> characters</c>

00:03:19.509 --> 00:03:19.519 align:start position:0%
stop with all uppercase characters
 

00:03:19.519 --> 00:03:21.350 align:start position:0%
stop with all uppercase characters
our<00:03:19.680><c> user</c><00:03:20.080><c> input</c><00:03:20.400><c> was</c><00:03:20.640><c> in</c><00:03:20.800><c> lowercase</c>

00:03:21.350 --> 00:03:21.360 align:start position:0%
our user input was in lowercase
 

00:03:21.360 --> 00:03:25.030 align:start position:0%
our user input was in lowercase
characters

00:03:25.030 --> 00:03:25.040 align:start position:0%
 
 

00:03:25.040 --> 00:03:27.430 align:start position:0%
 
so<00:03:25.280><c> this</c><00:03:25.519><c> time</c><00:03:25.840><c> i'll</c><00:03:26.159><c> enter</c><00:03:26.560><c> stop</c><00:03:26.879><c> with</c><00:03:27.200><c> all</c>

00:03:27.430 --> 00:03:27.440 align:start position:0%
so this time i'll enter stop with all
 

00:03:27.440 --> 00:03:29.350 align:start position:0%
so this time i'll enter stop with all
capital<00:03:27.840><c> letters</c>

00:03:29.350 --> 00:03:29.360 align:start position:0%
capital letters
 

00:03:29.360 --> 00:03:32.470 align:start position:0%
capital letters
and<00:03:29.599><c> we</c><00:03:29.840><c> expect</c><00:03:30.239><c> to</c><00:03:30.319><c> break</c><00:03:30.640><c> out</c><00:03:30.720><c> of</c><00:03:30.799><c> the</c><00:03:30.959><c> loop</c>

00:03:32.470 --> 00:03:32.480 align:start position:0%
and we expect to break out of the loop
 

00:03:32.480 --> 00:03:44.319 align:start position:0%
and we expect to break out of the loop
and<00:03:32.640><c> we</c><00:03:41.319><c> do</c>

