WEBVTT
Kind: captions
Language: en

00:00:04.080 --> 00:00:05.269 align:start position:0%
 
we've<00:00:04.319><c> been</c><00:00:04.640><c> given</c>

00:00:05.269 --> 00:00:05.279 align:start position:0%
we've been given
 

00:00:05.279 --> 00:00:07.990 align:start position:0%
we've been given
five<00:00:05.600><c> expressions</c><00:00:06.960><c> and</c><00:00:07.120><c> we're</c><00:00:07.359><c> going</c><00:00:07.600><c> to</c>

00:00:07.990 --> 00:00:08.000 align:start position:0%
five expressions and we're going to
 

00:00:08.000 --> 00:00:09.669 align:start position:0%
five expressions and we're going to
examine<00:00:08.639><c> each</c><00:00:08.880><c> expression</c>

00:00:09.669 --> 00:00:09.679 align:start position:0%
examine each expression
 

00:00:09.679 --> 00:00:11.589 align:start position:0%
examine each expression
and<00:00:09.840><c> determine</c><00:00:10.400><c> whether</c><00:00:10.719><c> it</c><00:00:10.880><c> will</c><00:00:11.040><c> return</c>

00:00:11.589 --> 00:00:11.599 align:start position:0%
and determine whether it will return
 

00:00:11.599 --> 00:00:13.749 align:start position:0%
and determine whether it will return
true<00:00:12.080><c> or</c><00:00:12.400><c> false</c>

00:00:13.749 --> 00:00:13.759 align:start position:0%
true or false
 

00:00:13.759 --> 00:00:15.749 align:start position:0%
true or false
so<00:00:14.000><c> taking</c><00:00:14.400><c> a</c><00:00:14.480><c> look</c><00:00:14.719><c> at</c><00:00:14.799><c> the</c><00:00:15.040><c> expression</c><00:00:15.599><c> on</c>

00:00:15.749 --> 00:00:15.759 align:start position:0%
so taking a look at the expression on
 

00:00:15.759 --> 00:00:17.029 align:start position:0%
so taking a look at the expression on
line<00:00:16.160><c> one</c>

00:00:17.029 --> 00:00:17.039 align:start position:0%
line one
 

00:00:17.039 --> 00:00:20.550 align:start position:0%
line one
we<00:00:17.279><c> are</c><00:00:17.520><c> comparing</c><00:00:18.160><c> whether</c><00:00:18.720><c> 32</c><00:00:19.359><c> times</c><00:00:19.920><c> 4</c>

00:00:20.550 --> 00:00:20.560 align:start position:0%
we are comparing whether 32 times 4
 

00:00:20.560 --> 00:00:24.630 align:start position:0%
we are comparing whether 32 times 4
is<00:00:20.800><c> greater</c><00:00:21.199><c> than</c><00:00:21.600><c> or</c><00:00:21.840><c> equal</c><00:00:22.160><c> to</c><00:00:22.320><c> 129</c>

00:00:24.630 --> 00:00:24.640 align:start position:0%
is greater than or equal to 129
 

00:00:24.640 --> 00:00:27.910 align:start position:0%
is greater than or equal to 129
32<00:00:25.199><c> times</c><00:00:25.599><c> 4</c><00:00:26.080><c> is</c><00:00:26.240><c> equal</c><00:00:26.480><c> to</c><00:00:26.640><c> 128</c>

00:00:27.910 --> 00:00:27.920 align:start position:0%
32 times 4 is equal to 128
 

00:00:27.920 --> 00:00:31.269 align:start position:0%
32 times 4 is equal to 128
so<00:00:28.160><c> this</c><00:00:28.400><c> expression</c><00:00:28.880><c> will</c><00:00:29.039><c> return</c><00:00:29.599><c> false</c>

00:00:31.269 --> 00:00:31.279 align:start position:0%
so this expression will return false
 

00:00:31.279 --> 00:00:38.790 align:start position:0%
so this expression will return false
128<00:00:32.320><c> is</c><00:00:32.480><c> not</c><00:00:32.800><c> greater</c><00:00:33.120><c> than</c><00:00:33.280><c> or</c><00:00:33.440><c> equal</c><00:00:33.760><c> to</c><00:00:33.920><c> 129.</c>

00:00:38.790 --> 00:00:38.800 align:start position:0%
 
 

00:00:38.800 --> 00:00:40.470 align:start position:0%
 
and<00:00:38.960><c> i'm</c><00:00:39.040><c> going</c><00:00:39.280><c> to</c><00:00:39.440><c> paste</c><00:00:39.760><c> that</c><00:00:40.000><c> expression</c>

00:00:40.470 --> 00:00:40.480 align:start position:0%
and i'm going to paste that expression
 

00:00:40.480 --> 00:00:46.709 align:start position:0%
and i'm going to paste that expression
into<00:00:40.719><c> irb</c><00:00:41.280><c> so</c><00:00:41.440><c> we</c><00:00:41.520><c> can</c><00:00:41.760><c> see</c><00:00:42.840><c> that</c>

00:00:46.709 --> 00:00:46.719 align:start position:0%
 
 

00:00:46.719 --> 00:00:49.190 align:start position:0%
 
moving<00:00:47.039><c> on</c><00:00:47.280><c> to</c><00:00:47.600><c> our</c><00:00:47.760><c> next</c><00:00:48.079><c> expression</c><00:00:48.640><c> on</c><00:00:48.800><c> line</c>

00:00:49.190 --> 00:00:49.200 align:start position:0%
moving on to our next expression on line
 

00:00:49.200 --> 00:00:50.950 align:start position:0%
moving on to our next expression on line
three

00:00:50.950 --> 00:00:50.960 align:start position:0%
three
 

00:00:50.960 --> 00:00:54.549 align:start position:0%
three
false<00:00:51.520><c> is</c><00:00:51.760><c> not</c><00:00:52.079><c> equal</c><00:00:52.480><c> to</c><00:00:52.800><c> not</c><00:00:53.120><c> true</c>

00:00:54.549 --> 00:00:54.559 align:start position:0%
false is not equal to not true
 

00:00:54.559 --> 00:00:57.990 align:start position:0%
false is not equal to not true
so<00:00:54.719><c> what</c><00:00:55.039><c> is</c><00:00:55.280><c> not</c><00:00:55.600><c> true</c><00:00:57.039><c> when</c><00:00:57.280><c> we</c><00:00:57.440><c> use</c><00:00:57.680><c> the</c>

00:00:57.990 --> 00:00:58.000 align:start position:0%
so what is not true when we use the
 

00:00:58.000 --> 00:01:01.029 align:start position:0%
so what is not true when we use the
not<00:00:58.320><c> operator</c><00:00:58.960><c> in</c><00:00:59.120><c> front</c><00:00:59.280><c> of</c><00:00:59.440><c> a</c><00:00:59.600><c> boolean</c><00:01:00.879><c> it</c>

00:01:01.029 --> 00:01:01.039 align:start position:0%
not operator in front of a boolean it
 

00:01:01.039 --> 00:01:01.830 align:start position:0%
not operator in front of a boolean it
will<00:01:01.280><c> return</c>

00:01:01.830 --> 00:01:01.840 align:start position:0%
will return
 

00:01:01.840 --> 00:01:05.270 align:start position:0%
will return
the<00:01:02.079><c> opposite</c><00:01:02.640><c> boolean</c><00:01:03.680><c> so</c><00:01:03.920><c> in</c><00:01:04.080><c> this</c><00:01:04.400><c> case</c>

00:01:05.270 --> 00:01:05.280 align:start position:0%
the opposite boolean so in this case
 

00:01:05.280 --> 00:01:08.390 align:start position:0%
the opposite boolean so in this case
not<00:01:05.600><c> true</c><00:01:06.400><c> is</c><00:01:06.640><c> false</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
not true is false
 

00:01:08.400 --> 00:01:11.109 align:start position:0%
not true is false
so<00:01:08.560><c> the</c><00:01:08.799><c> expression</c><00:01:09.280><c> on</c><00:01:09.439><c> line</c><00:01:09.760><c> 3</c><00:01:10.159><c> reads</c><00:01:10.560><c> as</c>

00:01:11.109 --> 00:01:11.119 align:start position:0%
so the expression on line 3 reads as
 

00:01:11.119 --> 00:01:12.070 align:start position:0%
so the expression on line 3 reads as
false<00:01:11.520><c> is</c><00:01:11.760><c> not</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
false is not
 

00:01:12.080 --> 00:01:15.590 align:start position:0%
false is not
equal<00:01:12.400><c> to</c><00:01:12.640><c> false</c><00:01:14.400><c> and</c><00:01:14.560><c> that</c><00:01:14.799><c> will</c><00:01:15.040><c> return</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
equal to false and that will return
 

00:01:15.600 --> 00:01:19.270 align:start position:0%
equal to false and that will return
false<00:01:17.280><c> the</c><00:01:17.439><c> boolean</c><00:01:18.000><c> false</c><00:01:18.560><c> is</c><00:01:18.720><c> equal</c><00:01:19.040><c> to</c><00:01:19.119><c> the</c>

00:01:19.270 --> 00:01:19.280 align:start position:0%
false the boolean false is equal to the
 

00:01:19.280 --> 00:01:23.510 align:start position:0%
false the boolean false is equal to the
boolean<00:01:19.840><c> false</c>

00:01:23.510 --> 00:01:23.520 align:start position:0%
 
 

00:01:23.520 --> 00:01:25.270 align:start position:0%
 
again<00:01:23.840><c> we'll</c><00:01:24.080><c> bring</c><00:01:24.240><c> this</c><00:01:24.560><c> expression</c><00:01:25.040><c> over</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
again we'll bring this expression over
 

00:01:25.280 --> 00:01:31.990 align:start position:0%
again we'll bring this expression over
to<00:01:25.439><c> irb</c>

00:01:31.990 --> 00:01:32.000 align:start position:0%
 
 

00:01:32.000 --> 00:01:35.670 align:start position:0%
 
moving<00:01:32.320><c> on</c><00:01:32.479><c> to</c><00:01:32.640><c> line</c><00:01:33.040><c> 5</c><00:01:33.600><c> we're</c><00:01:33.840><c> comparing</c><00:01:34.720><c> true</c>

00:01:35.670 --> 00:01:35.680 align:start position:0%
moving on to line 5 we're comparing true
 

00:01:35.680 --> 00:01:39.510 align:start position:0%
moving on to line 5 we're comparing true
to<00:01:35.840><c> the</c><00:01:36.000><c> integer</c><00:01:36.560><c> 4</c><00:01:37.119><c> true</c><00:01:37.439><c> is</c><00:01:37.600><c> equal</c><00:01:37.840><c> to</c><00:01:38.000><c> 4.</c>

00:01:39.510 --> 00:01:39.520 align:start position:0%
to the integer 4 true is equal to 4.
 

00:01:39.520 --> 00:01:42.630 align:start position:0%
to the integer 4 true is equal to 4.
4<00:01:40.000><c> is</c><00:01:40.159><c> a</c><00:01:40.240><c> truthy</c><00:01:40.799><c> value</c><00:01:41.920><c> meaning</c><00:01:42.240><c> that</c>

00:01:42.630 --> 00:01:42.640 align:start position:0%
4 is a truthy value meaning that
 

00:01:42.640 --> 00:01:44.550 align:start position:0%
4 is a truthy value meaning that
when<00:01:42.880><c> used</c><00:01:43.200><c> in</c><00:01:43.360><c> a</c><00:01:43.439><c> conditional</c><00:01:44.159><c> it</c><00:01:44.399><c> will</c>

00:01:44.550 --> 00:01:44.560 align:start position:0%
when used in a conditional it will
 

00:01:44.560 --> 00:01:45.830 align:start position:0%
when used in a conditional it will
evaluate<00:01:45.439><c> as</c>

00:01:45.830 --> 00:01:45.840 align:start position:0%
evaluate as
 

00:01:45.840 --> 00:01:48.630 align:start position:0%
evaluate as
true<00:01:46.880><c> however</c><00:01:47.360><c> it's</c><00:01:47.600><c> not</c><00:01:47.920><c> equal</c><00:01:48.320><c> to</c><00:01:48.479><c> the</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
true however it's not equal to the
 

00:01:48.640 --> 00:01:49.270 align:start position:0%
true however it's not equal to the
boolean

00:01:49.270 --> 00:01:49.280 align:start position:0%
boolean
 

00:01:49.280 --> 00:01:53.429 align:start position:0%
boolean
true<00:01:51.520><c> so</c><00:01:51.680><c> this</c><00:01:51.920><c> expression</c><00:01:52.479><c> will</c><00:01:52.640><c> also</c><00:01:52.960><c> return</c>

00:01:53.429 --> 00:01:53.439 align:start position:0%
true so this expression will also return
 

00:01:53.439 --> 00:01:57.830 align:start position:0%
true so this expression will also return
false

00:01:57.830 --> 00:01:57.840 align:start position:0%
 
 

00:01:57.840 --> 00:02:01.429 align:start position:0%
 
i'll<00:01:58.079><c> paste</c><00:01:58.320><c> it</c><00:01:58.479><c> into</c><00:01:58.719><c> irb</c><00:02:00.640><c> and</c><00:02:00.799><c> we</c><00:02:01.040><c> see</c><00:02:01.200><c> that</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
i'll paste it into irb and we see that
 

00:02:01.439 --> 00:02:06.389 align:start position:0%
i'll paste it into irb and we see that
false<00:02:01.759><c> return</c><00:02:02.159><c> value</c>

00:02:06.389 --> 00:02:06.399 align:start position:0%
 
 

00:02:06.399 --> 00:02:09.910 align:start position:0%
 
moving<00:02:06.719><c> on</c><00:02:06.880><c> to</c><00:02:07.040><c> line</c><00:02:07.439><c> seven</c><00:02:08.800><c> we</c><00:02:09.039><c> first</c><00:02:09.360><c> need</c><00:02:09.599><c> to</c>

00:02:09.910 --> 00:02:09.920 align:start position:0%
moving on to line seven we first need to
 

00:02:09.920 --> 00:02:13.589 align:start position:0%
moving on to line seven we first need to
evaluate<00:02:10.720><c> the</c><00:02:10.879><c> comparison</c><00:02:11.599><c> in</c><00:02:11.760><c> parentheses</c>

00:02:13.589 --> 00:02:13.599 align:start position:0%
evaluate the comparison in parentheses
 

00:02:13.599 --> 00:02:18.790 align:start position:0%
evaluate the comparison in parentheses
we're<00:02:13.760><c> comparing</c><00:02:14.520><c> 847</c><00:02:15.680><c> to</c><00:02:15.840><c> the</c><00:02:16.000><c> string</c><00:02:16.599><c> 874.</c>

00:02:18.790 --> 00:02:18.800 align:start position:0%
we're comparing 847 to the string 874.
 

00:02:18.800 --> 00:02:20.869 align:start position:0%
we're comparing 847 to the string 874.
an<00:02:19.040><c> integer</c><00:02:19.520><c> will</c><00:02:19.680><c> never</c><00:02:20.000><c> be</c><00:02:20.239><c> equal</c><00:02:20.560><c> to</c><00:02:20.720><c> a</c>

00:02:20.869 --> 00:02:20.879 align:start position:0%
an integer will never be equal to a
 

00:02:20.879 --> 00:02:24.309 align:start position:0%
an integer will never be equal to a
string<00:02:21.680><c> so</c><00:02:21.920><c> this</c><00:02:22.160><c> will</c><00:02:22.400><c> evaluate</c><00:02:22.879><c> to</c><00:02:23.120><c> false</c>

00:02:24.309 --> 00:02:24.319 align:start position:0%
string so this will evaluate to false
 

00:02:24.319 --> 00:02:26.309 align:start position:0%
string so this will evaluate to false
on<00:02:24.480><c> the</c><00:02:24.640><c> left</c><00:02:24.879><c> side</c><00:02:25.120><c> of</c><00:02:25.200><c> our</c><00:02:25.360><c> comparison</c><00:02:26.080><c> here</c>

00:02:26.309 --> 00:02:26.319 align:start position:0%
on the left side of our comparison here
 

00:02:26.319 --> 00:02:29.670 align:start position:0%
on the left side of our comparison here
on<00:02:26.480><c> line</c><00:02:26.800><c> 7</c><00:02:27.200><c> we</c><00:02:27.440><c> also</c><00:02:27.840><c> have</c><00:02:28.080><c> false</c>

00:02:29.670 --> 00:02:29.680 align:start position:0%
on line 7 we also have false
 

00:02:29.680 --> 00:02:31.990 align:start position:0%
on line 7 we also have false
so<00:02:29.840><c> this</c><00:02:30.160><c> expression</c><00:02:30.800><c> reads</c><00:02:31.120><c> as</c><00:02:31.440><c> false</c><00:02:31.840><c> is</c>

00:02:31.990 --> 00:02:32.000 align:start position:0%
so this expression reads as false is
 

00:02:32.000 --> 00:02:34.150 align:start position:0%
so this expression reads as false is
equal<00:02:32.319><c> to</c><00:02:32.560><c> false</c>

00:02:34.150 --> 00:02:34.160 align:start position:0%
equal to false
 

00:02:34.160 --> 00:02:41.030 align:start position:0%
equal to false
and<00:02:34.319><c> that</c><00:02:34.480><c> will</c><00:02:34.720><c> return</c><00:02:35.200><c> true</c>

00:02:41.030 --> 00:02:41.040 align:start position:0%
 
 

00:02:41.040 --> 00:02:47.350 align:start position:0%
 
and<00:02:41.200><c> we</c><00:02:41.440><c> paste</c><00:02:41.680><c> it</c><00:02:41.840><c> into</c><00:02:42.080><c> irb</c><00:02:42.640><c> and</c><00:02:42.800><c> see</c><00:02:43.040><c> that</c>

00:02:47.350 --> 00:02:47.360 align:start position:0%
 
 

00:02:47.360 --> 00:02:50.150 align:start position:0%
 
our<00:02:47.519><c> last</c><00:02:47.920><c> expression</c><00:02:48.640><c> here</c><00:02:48.959><c> on</c><00:02:49.200><c> line</c><00:02:49.519><c> 9</c><00:02:49.920><c> is</c><00:02:50.080><c> a</c>

00:02:50.150 --> 00:02:50.160 align:start position:0%
our last expression here on line 9 is a
 

00:02:50.160 --> 00:02:53.030 align:start position:0%
our last expression here on line 9 is a
little<00:02:50.319><c> bit</c><00:02:50.480><c> more</c><00:02:50.720><c> difficult</c><00:02:51.120><c> to</c><00:02:51.280><c> parse</c>

00:02:53.030 --> 00:02:53.040 align:start position:0%
little bit more difficult to parse
 

00:02:53.040 --> 00:02:57.030 align:start position:0%
little bit more difficult to parse
this<00:02:53.360><c> expression</c><00:02:54.000><c> uses</c><00:02:54.319><c> the</c><00:02:54.640><c> or</c><00:02:55.040><c> operator</c>

00:02:57.030 --> 00:02:57.040 align:start position:0%
this expression uses the or operator
 

00:02:57.040 --> 00:03:00.070 align:start position:0%
this expression uses the or operator
when<00:02:57.280><c> using</c><00:02:57.599><c> the</c><00:02:57.840><c> logical</c><00:02:58.400><c> or</c><00:02:58.800><c> operator</c><00:02:59.760><c> if</c>

00:03:00.070 --> 00:03:00.080 align:start position:0%
when using the logical or operator if
 

00:03:00.080 --> 00:03:02.390 align:start position:0%
when using the logical or operator if
any<00:03:00.319><c> of</c><00:03:00.480><c> the</c><00:03:00.720><c> expressions</c><00:03:01.280><c> that</c><00:03:01.519><c> we</c><00:03:01.760><c> provide</c>

00:03:02.390 --> 00:03:02.400 align:start position:0%
any of the expressions that we provide
 

00:03:02.400 --> 00:03:03.670 align:start position:0%
any of the expressions that we provide
return<00:03:02.879><c> true</c>

00:03:03.670 --> 00:03:03.680 align:start position:0%
return true
 

00:03:03.680 --> 00:03:05.830 align:start position:0%
return true
then<00:03:03.920><c> the</c><00:03:04.159><c> entire</c><00:03:04.720><c> expression</c><00:03:05.200><c> will</c><00:03:05.360><c> return</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
then the entire expression will return
 

00:03:05.840 --> 00:03:07.430 align:start position:0%
then the entire expression will return
true

00:03:07.430 --> 00:03:07.440 align:start position:0%
true
 

00:03:07.440 --> 00:03:09.830 align:start position:0%
true
we<00:03:07.599><c> can</c><00:03:07.760><c> see</c><00:03:08.000><c> at</c><00:03:08.159><c> the</c><00:03:08.319><c> end</c><00:03:08.560><c> of</c><00:03:08.720><c> line</c><00:03:09.040><c> 9</c><00:03:09.440><c> that</c><00:03:09.599><c> we</c>

00:03:09.830 --> 00:03:09.840 align:start position:0%
we can see at the end of line 9 that we
 

00:03:09.840 --> 00:03:10.550 align:start position:0%
we can see at the end of line 9 that we
have

00:03:10.550 --> 00:03:10.560 align:start position:0%
have
 

00:03:10.560 --> 00:03:14.149 align:start position:0%
have
false<00:03:12.400><c> so</c><00:03:12.640><c> now</c><00:03:12.879><c> let's</c><00:03:13.200><c> examine</c><00:03:13.840><c> each</c>

00:03:14.149 --> 00:03:14.159 align:start position:0%
false so now let's examine each
 

00:03:14.159 --> 00:03:16.070 align:start position:0%
false so now let's examine each
expression<00:03:14.640><c> within</c><00:03:15.040><c> the</c><00:03:15.200><c> parentheses</c>

00:03:16.070 --> 00:03:16.080 align:start position:0%
expression within the parentheses
 

00:03:16.080 --> 00:03:18.070 align:start position:0%
expression within the parentheses
on<00:03:16.239><c> the</c><00:03:16.400><c> left</c><00:03:16.720><c> side</c><00:03:16.959><c> of</c><00:03:17.120><c> this</c><00:03:17.360><c> logical</c><00:03:17.840><c> or</c>

00:03:18.070 --> 00:03:18.080 align:start position:0%
on the left side of this logical or
 

00:03:18.080 --> 00:03:19.910 align:start position:0%
on the left side of this logical or
operation

00:03:19.910 --> 00:03:19.920 align:start position:0%
operation
 

00:03:19.920 --> 00:03:23.110 align:start position:0%
operation
the<00:03:20.159><c> first</c><00:03:20.480><c> expression</c><00:03:21.200><c> is</c><00:03:21.680><c> not</c><00:03:22.000><c> true</c>

00:03:23.110 --> 00:03:23.120 align:start position:0%
the first expression is not true
 

00:03:23.120 --> 00:03:27.110 align:start position:0%
the first expression is not true
which<00:03:23.360><c> evaluates</c><00:03:24.000><c> to</c><00:03:24.239><c> false</c>

00:03:27.110 --> 00:03:27.120 align:start position:0%
 
 

00:03:27.120 --> 00:03:30.149 align:start position:0%
 
moving<00:03:27.519><c> on</c><00:03:27.599><c> to</c><00:03:27.840><c> the</c><00:03:27.920><c> next</c><00:03:28.319><c> expression</c><00:03:29.519><c> 100</c>

00:03:30.149 --> 00:03:30.159 align:start position:0%
moving on to the next expression 100
 

00:03:30.159 --> 00:03:32.309 align:start position:0%
moving on to the next expression 100
divided<00:03:30.560><c> by</c><00:03:30.799><c> 5</c><00:03:31.120><c> is</c><00:03:31.360><c> 20.</c>

00:03:32.309 --> 00:03:32.319 align:start position:0%
divided by 5 is 20.
 

00:03:32.319 --> 00:03:35.990 align:start position:0%
divided by 5 is 20.
again<00:03:32.640><c> we</c><00:03:32.799><c> have</c><00:03:33.040><c> the</c><00:03:33.280><c> not</c><00:03:33.599><c> operator</c><00:03:34.239><c> here</c>

00:03:35.990 --> 00:03:36.000 align:start position:0%
again we have the not operator here
 

00:03:36.000 --> 00:03:38.550 align:start position:0%
again we have the not operator here
so<00:03:36.159><c> we're</c><00:03:36.400><c> comparing</c><00:03:36.959><c> the</c><00:03:37.120><c> equality</c><00:03:37.920><c> of</c><00:03:38.159><c> not</c>

00:03:38.550 --> 00:03:38.560 align:start position:0%
so we're comparing the equality of not
 

00:03:38.560 --> 00:03:39.430 align:start position:0%
so we're comparing the equality of not
20

00:03:39.430 --> 00:03:39.440 align:start position:0%
20
 

00:03:39.440 --> 00:03:43.190 align:start position:0%
20
to<00:03:39.760><c> 20.</c><00:03:41.200><c> not</c><00:03:41.519><c> 20</c><00:03:42.000><c> evaluates</c><00:03:42.799><c> as</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
to 20. not 20 evaluates as
 

00:03:43.200 --> 00:03:47.030 align:start position:0%
to 20. not 20 evaluates as
false<00:03:44.640><c> so</c><00:03:44.959><c> false</c><00:03:45.360><c> is</c><00:03:45.519><c> not</c><00:03:45.760><c> equal</c><00:03:46.080><c> to</c><00:03:46.239><c> 20.</c>

00:03:47.030 --> 00:03:47.040 align:start position:0%
false so false is not equal to 20.
 

00:03:47.040 --> 00:03:48.869 align:start position:0%
false so false is not equal to 20.
we<00:03:47.200><c> can</c><00:03:47.440><c> move</c><00:03:47.680><c> on</c><00:03:47.840><c> to</c><00:03:48.000><c> examine</c><00:03:48.400><c> the</c><00:03:48.560><c> next</c>

00:03:48.869 --> 00:03:48.879 align:start position:0%
we can move on to examine the next
 

00:03:48.879 --> 00:03:53.350 align:start position:0%
we can move on to examine the next
expression

00:03:53.350 --> 00:03:53.360 align:start position:0%
 
 

00:03:53.360 --> 00:03:56.309 align:start position:0%
 
in<00:03:53.519><c> this</c><00:03:53.760><c> expression</c><00:03:54.319><c> we're</c><00:03:54.560><c> comparing</c><00:03:55.439><c> 328</c>

00:03:56.309 --> 00:03:56.319 align:start position:0%
in this expression we're comparing 328
 

00:03:56.319 --> 00:03:57.910 align:start position:0%
in this expression we're comparing 328
divided<00:03:56.799><c> by</c><00:03:57.040><c> 4</c>

00:03:57.910 --> 00:03:57.920 align:start position:0%
divided by 4
 

00:03:57.920 --> 00:04:02.070 align:start position:0%
divided by 4
to<00:03:58.080><c> the</c><00:03:58.239><c> integer</c><00:03:58.840><c> 82.</c><00:04:00.159><c> 328</c><00:04:01.120><c> divided</c><00:04:01.519><c> by</c><00:04:01.760><c> 4</c>

00:04:02.070 --> 00:04:02.080 align:start position:0%
to the integer 82. 328 divided by 4
 

00:04:02.080 --> 00:04:05.190 align:start position:0%
to the integer 82. 328 divided by 4
equals<00:04:02.480><c> 82</c><00:04:03.519><c> so</c><00:04:03.760><c> this</c><00:04:04.000><c> equality</c><00:04:04.480><c> comparison</c>

00:04:05.190 --> 00:04:05.200 align:start position:0%
equals 82 so this equality comparison
 

00:04:05.200 --> 00:04:05.990 align:start position:0%
equals 82 so this equality comparison
will<00:04:05.360><c> return</c>

00:04:05.990 --> 00:04:06.000 align:start position:0%
will return
 

00:04:06.000 --> 00:04:08.630 align:start position:0%
will return
true<00:04:06.799><c> meaning</c><00:04:07.200><c> that</c><00:04:07.439><c> the</c><00:04:07.599><c> entire</c><00:04:08.080><c> expression</c>

00:04:08.630 --> 00:04:08.640 align:start position:0%
true meaning that the entire expression
 

00:04:08.640 --> 00:04:09.429 align:start position:0%
true meaning that the entire expression
on<00:04:08.799><c> line</c><00:04:09.040><c> 9</c>

00:04:09.429 --> 00:04:09.439 align:start position:0%
on line 9
 

00:04:09.439 --> 00:04:17.030 align:start position:0%
on line 9
returns<00:04:12.840><c> true</c>

00:04:17.030 --> 00:04:17.040 align:start position:0%
 
 

00:04:17.040 --> 00:04:19.189 align:start position:0%
 
i'll<00:04:17.280><c> paste</c><00:04:17.600><c> that</c><00:04:17.840><c> in</c><00:04:18.160><c> and</c><00:04:18.320><c> we</c><00:04:18.479><c> see</c><00:04:18.639><c> the</c><00:04:18.799><c> return</c>

00:04:19.189 --> 00:04:19.199 align:start position:0%
i'll paste that in and we see the return
 

00:04:19.199 --> 00:04:29.270 align:start position:0%
i'll paste that in and we see the return
value<00:04:19.600><c> of</c><00:04:26.840><c> true</c>

00:04:29.270 --> 00:04:29.280 align:start position:0%
value of true
 

00:04:29.280 --> 00:04:31.360 align:start position:0%
value of true
you

