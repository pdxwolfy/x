WEBVTT
Kind: captions
Language: en

00:00:05.200 --> 00:00:06.150 align:start position:0%
 
rather<00:00:05.600><c> than</c>

00:00:06.150 --> 00:00:06.160 align:start position:0%
rather than
 

00:00:06.160 --> 00:00:09.350 align:start position:0%
rather than
manually<00:00:06.960><c> setting</c><00:00:07.440><c> the</c><00:00:07.839><c> hash</c><00:00:08.240><c> values</c><00:00:08.960><c> in</c><00:00:09.120><c> our</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
manually setting the hash values in our
 

00:00:09.360 --> 00:00:10.470 align:start position:0%
manually setting the hash values in our
contacts<00:00:10.000><c> hash</c>

00:00:10.470 --> 00:00:10.480 align:start position:0%
contacts hash
 

00:00:10.480 --> 00:00:13.749 align:start position:0%
contacts hash
one<00:00:10.719><c> by</c><00:00:10.960><c> one</c><00:00:11.840><c> we</c><00:00:12.080><c> want</c><00:00:12.320><c> to</c><00:00:12.639><c> populate</c><00:00:13.200><c> the</c><00:00:13.360><c> data</c>

00:00:13.749 --> 00:00:13.759 align:start position:0%
one by one we want to populate the data
 

00:00:13.759 --> 00:00:14.789 align:start position:0%
one by one we want to populate the data
in<00:00:13.920><c> that</c><00:00:14.160><c> hash</c>

00:00:14.789 --> 00:00:14.799 align:start position:0%
in that hash
 

00:00:14.799 --> 00:00:17.510 align:start position:0%
in that hash
by<00:00:15.040><c> iterating</c><00:00:15.679><c> over</c><00:00:15.920><c> our</c><00:00:16.080><c> contacts</c><00:00:16.800><c> hash</c><00:00:17.279><c> and</c>

00:00:17.510 --> 00:00:17.520 align:start position:0%
by iterating over our contacts hash and
 

00:00:17.520 --> 00:00:20.950 align:start position:0%
by iterating over our contacts hash and
populating<00:00:18.160><c> it</c><00:00:18.320><c> with</c><00:00:18.480><c> the</c><00:00:18.640><c> appropriate</c><00:00:19.199><c> data</c>

00:00:20.950 --> 00:00:20.960 align:start position:0%
populating it with the appropriate data
 

00:00:20.960 --> 00:00:23.029 align:start position:0%
populating it with the appropriate data
i'm<00:00:21.119><c> going</c><00:00:21.279><c> to</c><00:00:21.439><c> create</c><00:00:21.760><c> one</c><00:00:22.080><c> other</c><00:00:22.400><c> array</c><00:00:22.800><c> here</c>

00:00:23.029 --> 00:00:23.039 align:start position:0%
i'm going to create one other array here
 

00:00:23.039 --> 00:00:25.189 align:start position:0%
i'm going to create one other array here
on<00:00:23.199><c> line</c><00:00:23.519><c> three</c>

00:00:25.189 --> 00:00:25.199 align:start position:0%
on line three
 

00:00:25.199 --> 00:00:28.870 align:start position:0%
on line three
we'll<00:00:25.359><c> call</c><00:00:25.599><c> it</c><00:00:25.840><c> fields</c><00:00:28.000><c> and</c><00:00:28.240><c> this</c><00:00:28.480><c> list</c><00:00:28.800><c> is</c>

00:00:28.870 --> 00:00:28.880 align:start position:0%
we'll call it fields and this list is
 

00:00:28.880 --> 00:00:29.990 align:start position:0%
we'll call it fields and this list is
going<00:00:29.119><c> to</c><00:00:29.279><c> represent</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
going to represent
 

00:00:30.000 --> 00:00:34.229 align:start position:0%
going to represent
the<00:00:30.400><c> different</c><00:00:30.800><c> data</c><00:00:31.199><c> fields</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
 
 

00:00:34.239 --> 00:00:37.270 align:start position:0%
 
the<00:00:34.399><c> email</c><00:00:34.960><c> address</c><00:00:35.440><c> and</c><00:00:35.600><c> phone</c><00:00:35.840><c> number</c><00:00:37.040><c> now</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
the email address and phone number now
 

00:00:37.280 --> 00:00:39.350 align:start position:0%
the email address and phone number now
because<00:00:37.520><c> we</c><00:00:37.760><c> know</c><00:00:38.000><c> we</c><00:00:38.160><c> want</c><00:00:38.399><c> to</c><00:00:38.640><c> iterate</c><00:00:39.120><c> over</c>

00:00:39.350 --> 00:00:39.360 align:start position:0%
because we know we want to iterate over
 

00:00:39.360 --> 00:00:40.790 align:start position:0%
because we know we want to iterate over
our<00:00:39.600><c> contacts</c><00:00:40.239><c> hash</c>

00:00:40.790 --> 00:00:40.800 align:start position:0%
our contacts hash
 

00:00:40.800 --> 00:00:44.470 align:start position:0%
our contacts hash
let's<00:00:41.120><c> just</c><00:00:41.360><c> begin</c><00:00:41.760><c> by</c><00:00:42.079><c> doing</c><00:00:42.840><c> that</c>

00:00:44.470 --> 00:00:44.480 align:start position:0%
let's just begin by doing that
 

00:00:44.480 --> 00:00:47.510 align:start position:0%
let's just begin by doing that
i'll<00:00:44.800><c> invoke</c><00:00:45.120><c> the</c><00:00:45.280><c> each</c><00:00:45.600><c> method</c>

00:00:47.510 --> 00:00:47.520 align:start position:0%
i'll invoke the each method
 

00:00:47.520 --> 00:00:50.229 align:start position:0%
i'll invoke the each method
and<00:00:48.000><c> our</c><00:00:48.239><c> key</c><00:00:48.480><c> value</c><00:00:48.879><c> pairs</c><00:00:49.200><c> will</c><00:00:49.360><c> be</c><00:00:49.600><c> passed</c>

00:00:50.229 --> 00:00:50.239 align:start position:0%
and our key value pairs will be passed
 

00:00:50.239 --> 00:00:51.270 align:start position:0%
and our key value pairs will be passed
to<00:00:50.399><c> the</c><00:00:50.559><c> block</c><00:00:50.960><c> as</c>

00:00:51.270 --> 00:00:51.280 align:start position:0%
to the block as
 

00:00:51.280 --> 00:00:54.950 align:start position:0%
to the block as
arguments<00:00:52.879><c> i'll</c><00:00:53.199><c> define</c><00:00:53.600><c> those</c><00:00:53.840><c> parameters</c>

00:00:54.950 --> 00:00:54.960 align:start position:0%
arguments i'll define those parameters
 

00:00:54.960 --> 00:00:59.590 align:start position:0%
arguments i'll define those parameters
as<00:00:55.360><c> name</c><00:00:55.920><c> and</c><00:00:56.840><c> hash</c>

00:00:59.590 --> 00:00:59.600 align:start position:0%
as name and hash
 

00:00:59.600 --> 00:01:02.549 align:start position:0%
as name and hash
and<00:00:59.760><c> to</c><00:01:00.000><c> start</c><00:01:00.559><c> i'm</c><00:01:00.800><c> just</c><00:01:01.039><c> going</c><00:01:01.359><c> to</c><00:01:01.920><c> output</c>

00:01:02.549 --> 00:01:02.559 align:start position:0%
and to start i'm just going to output
 

00:01:02.559 --> 00:01:04.469 align:start position:0%
and to start i'm just going to output
the<00:01:02.960><c> name</c>

00:01:04.469 --> 00:01:04.479 align:start position:0%
the name
 

00:01:04.479 --> 00:01:08.870 align:start position:0%
the name
and<00:01:04.640><c> the</c><00:01:04.799><c> hash</c>

00:01:08.870 --> 00:01:08.880 align:start position:0%
 
 

00:01:08.880 --> 00:01:11.350 align:start position:0%
 
so<00:01:09.040><c> when</c><00:01:09.280><c> we</c><00:01:09.439><c> run</c><00:01:09.600><c> our</c><00:01:09.760><c> code</c><00:01:10.080><c> we</c><00:01:10.320><c> see</c><00:01:10.799><c> the</c><00:01:11.040><c> name</c>

00:01:11.350 --> 00:01:11.360 align:start position:0%
so when we run our code we see the name
 

00:01:11.360 --> 00:01:11.990 align:start position:0%
so when we run our code we see the name
which<00:01:11.600><c> is</c><00:01:11.760><c> the</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
which is the
 

00:01:12.000 --> 00:01:15.109 align:start position:0%
which is the
key<00:01:12.400><c> joe</c><00:01:12.640><c> smith</c><00:01:13.760><c> and</c><00:01:14.000><c> the</c><00:01:14.159><c> value</c><00:01:14.640><c> which</c><00:01:14.880><c> is</c><00:01:14.960><c> an</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
key joe smith and the value which is an
 

00:01:15.119 --> 00:01:20.390 align:start position:0%
key joe smith and the value which is an
empty<00:01:15.439><c> hash</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
 
 

00:01:20.400 --> 00:01:22.870 align:start position:0%
 
and<00:01:20.640><c> our</c><00:01:20.799><c> contacts</c><00:01:21.439><c> hash</c><00:01:21.759><c> only</c><00:01:22.080><c> has</c><00:01:22.320><c> that</c><00:01:22.560><c> one</c>

00:01:22.870 --> 00:01:22.880 align:start position:0%
and our contacts hash only has that one
 

00:01:22.880 --> 00:01:24.710 align:start position:0%
and our contacts hash only has that one
key<00:01:23.119><c> value</c><00:01:23.520><c> pair</c><00:01:23.840><c> right</c><00:01:24.080><c> now</c>

00:01:24.710 --> 00:01:24.720 align:start position:0%
key value pair right now
 

00:01:24.720 --> 00:01:27.350 align:start position:0%
key value pair right now
so<00:01:24.960><c> now</c><00:01:25.119><c> that</c><00:01:25.280><c> we</c><00:01:25.439><c> can</c><00:01:25.840><c> access</c><00:01:26.400><c> the</c><00:01:26.720><c> key</c><00:01:27.119><c> in</c>

00:01:27.350 --> 00:01:27.360 align:start position:0%
so now that we can access the key in
 

00:01:27.360 --> 00:01:29.350 align:start position:0%
so now that we can access the key in
value

00:01:29.350 --> 00:01:29.360 align:start position:0%
value
 

00:01:29.360 --> 00:01:32.469 align:start position:0%
value
we<00:01:29.600><c> want</c><00:01:29.840><c> to</c><00:01:30.400><c> populate</c><00:01:31.040><c> the</c><00:01:31.280><c> value</c>

00:01:32.469 --> 00:01:32.479 align:start position:0%
we want to populate the value
 

00:01:32.479 --> 00:01:35.270 align:start position:0%
we want to populate the value
with<00:01:32.799><c> three</c><00:01:33.200><c> of</c><00:01:33.360><c> its</c><00:01:33.520><c> own</c><00:01:33.759><c> key</c><00:01:34.000><c> value</c><00:01:34.400><c> pairs</c>

00:01:35.270 --> 00:01:35.280 align:start position:0%
with three of its own key value pairs
 

00:01:35.280 --> 00:01:36.469 align:start position:0%
with three of its own key value pairs
and<00:01:35.439><c> we've</c><00:01:35.759><c> already</c><00:01:36.159><c> got</c>

00:01:36.469 --> 00:01:36.479 align:start position:0%
and we've already got
 

00:01:36.479 --> 00:01:39.670 align:start position:0%
and we've already got
a<00:01:36.640><c> list</c><00:01:36.960><c> of</c><00:01:37.119><c> the</c><00:01:37.360><c> keys</c><00:01:38.320><c> on</c><00:01:38.479><c> line</c><00:01:38.880><c> three</c><00:01:39.280><c> in</c><00:01:39.439><c> our</c>

00:01:39.670 --> 00:01:39.680 align:start position:0%
a list of the keys on line three in our
 

00:01:39.680 --> 00:01:41.749 align:start position:0%
a list of the keys on line three in our
fields<00:01:40.159><c> array</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
fields array
 

00:01:41.759 --> 00:01:45.270 align:start position:0%
fields array
so<00:01:41.920><c> what</c><00:01:42.079><c> we</c><00:01:42.240><c> can</c><00:01:42.479><c> actually</c><00:01:43.040><c> do</c><00:01:43.680><c> is</c>

00:01:45.270 --> 00:01:45.280 align:start position:0%
so what we can actually do is
 

00:01:45.280 --> 00:01:50.789 align:start position:0%
so what we can actually do is
iterate<00:01:45.759><c> through</c><00:01:46.159><c> our</c><00:01:46.399><c> fields</c><00:01:46.799><c> array</c><00:01:47.360><c> as</c><00:01:47.600><c> well</c>

00:01:50.789 --> 00:01:50.799 align:start position:0%
 
 

00:01:50.799 --> 00:01:54.389 align:start position:0%
 
and<00:01:50.960><c> we'll</c><00:01:51.200><c> call</c><00:01:51.439><c> our</c><00:01:51.520><c> block</c><00:01:51.840><c> parameter</c><00:01:52.840><c> field</c>

00:01:54.389 --> 00:01:54.399 align:start position:0%
and we'll call our block parameter field
 

00:01:54.399 --> 00:01:57.510 align:start position:0%
and we'll call our block parameter field
so<00:01:54.560><c> within</c><00:01:54.960><c> this</c><00:01:55.200><c> block</c><00:01:55.920><c> not</c><00:01:56.240><c> only</c><00:01:56.799><c> are</c><00:01:57.119><c> the</c>

00:01:57.510 --> 00:01:57.520 align:start position:0%
so within this block not only are the
 

00:01:57.520 --> 00:02:00.630 align:start position:0%
so within this block not only are the
key<00:01:57.920><c> and</c><00:01:58.240><c> value</c><00:01:58.960><c> or</c><00:01:59.119><c> the</c><00:01:59.360><c> name</c><00:01:59.759><c> and</c><00:02:00.000><c> hash</c><00:02:00.399><c> from</c>

00:02:00.630 --> 00:02:00.640 align:start position:0%
key and value or the name and hash from
 

00:02:00.640 --> 00:02:03.109 align:start position:0%
key and value or the name and hash from
our<00:02:00.880><c> contacts</c><00:02:01.520><c> hash</c><00:02:01.920><c> available</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
our contacts hash available
 

00:02:03.119 --> 00:02:05.510 align:start position:0%
our contacts hash available
but<00:02:03.439><c> also</c><00:02:04.079><c> each</c><00:02:04.479><c> field</c><00:02:04.880><c> that</c><00:02:05.040><c> we</c><00:02:05.119><c> want</c><00:02:05.360><c> to</c>

00:02:05.510 --> 00:02:05.520 align:start position:0%
but also each field that we want to
 

00:02:05.520 --> 00:02:06.870 align:start position:0%
but also each field that we want to
populate<00:02:06.000><c> that</c><00:02:06.240><c> hash</c><00:02:06.560><c> with</c>

00:02:06.870 --> 00:02:06.880 align:start position:0%
populate that hash with
 

00:02:06.880 --> 00:02:10.150 align:start position:0%
populate that hash with
is<00:02:07.040><c> also</c><00:02:07.280><c> available</c><00:02:07.759><c> to</c><00:02:08.000><c> us</c><00:02:08.800><c> so</c><00:02:09.039><c> on</c><00:02:09.200><c> line</c><00:02:09.599><c> 7</c>

00:02:10.150 --> 00:02:10.160 align:start position:0%
is also available to us so on line 7
 

00:02:10.160 --> 00:02:13.750 align:start position:0%
is also available to us so on line 7
we<00:02:10.319><c> can</c><00:02:10.640><c> simply</c><00:02:11.200><c> assign</c>

00:02:13.750 --> 00:02:13.760 align:start position:0%
 
 

00:02:13.760 --> 00:02:19.510 align:start position:0%
 
the<00:02:14.080><c> key</c><00:02:15.920><c> which</c><00:02:16.160><c> will</c><00:02:16.319><c> be</c><00:02:16.640><c> each</c><00:02:17.040><c> field</c>

00:02:19.510 --> 00:02:19.520 align:start position:0%
 
 

00:02:19.520 --> 00:02:21.830 align:start position:0%
 
to<00:02:19.760><c> an</c><00:02:19.920><c> element</c><00:02:20.400><c> from</c><00:02:20.640><c> our</c><00:02:20.800><c> contact</c><00:02:21.440><c> data</c>

00:02:21.830 --> 00:02:21.840 align:start position:0%
to an element from our contact data
 

00:02:21.840 --> 00:02:23.270 align:start position:0%
to an element from our contact data
array

00:02:23.270 --> 00:02:23.280 align:start position:0%
array
 

00:02:23.280 --> 00:02:25.910 align:start position:0%
array
now<00:02:23.440><c> this</c><00:02:23.680><c> array</c><00:02:24.400><c> is</c><00:02:24.879><c> a</c><00:02:25.120><c> one-dimensional</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
now this array is a one-dimensional
 

00:02:25.920 --> 00:02:26.630 align:start position:0%
now this array is a one-dimensional
array<00:02:26.239><c> now</c>

00:02:26.630 --> 00:02:26.640 align:start position:0%
array now
 

00:02:26.640 --> 00:02:29.350 align:start position:0%
array now
and<00:02:26.879><c> it</c><00:02:27.040><c> has</c><00:02:27.360><c> three</c><00:02:27.680><c> elements</c><00:02:28.640><c> representing</c>

00:02:29.350 --> 00:02:29.360 align:start position:0%
and it has three elements representing
 

00:02:29.360 --> 00:02:32.150 align:start position:0%
and it has three elements representing
the<00:02:29.520><c> email</c><00:02:30.080><c> address</c><00:02:30.560><c> and</c><00:02:30.720><c> phone</c><00:02:30.959><c> number</c>

00:02:32.150 --> 00:02:32.160 align:start position:0%
the email address and phone number
 

00:02:32.160 --> 00:02:34.869 align:start position:0%
the email address and phone number
so<00:02:32.400><c> on</c><00:02:32.640><c> our</c><00:02:32.800><c> first</c><00:02:33.120><c> iteration</c><00:02:33.760><c> here</c><00:02:34.400><c> we</c><00:02:34.640><c> just</c>

00:02:34.869 --> 00:02:34.879 align:start position:0%
so on our first iteration here we just
 

00:02:34.879 --> 00:02:35.270 align:start position:0%
so on our first iteration here we just
need

00:02:35.270 --> 00:02:35.280 align:start position:0%
need
 

00:02:35.280 --> 00:02:37.750 align:start position:0%
need
the<00:02:35.599><c> first</c><00:02:36.000><c> element</c><00:02:36.480><c> of</c><00:02:36.640><c> this</c><00:02:36.879><c> contact</c><00:02:37.360><c> data</c>

00:02:37.750 --> 00:02:37.760 align:start position:0%
the first element of this contact data
 

00:02:37.760 --> 00:02:41.830 align:start position:0%
the first element of this contact data
array

00:02:41.830 --> 00:02:41.840 align:start position:0%
 
 

00:02:41.840 --> 00:02:43.830 align:start position:0%
 
now<00:02:42.080><c> as</c><00:02:42.239><c> the</c><00:02:42.319><c> problem</c><00:02:42.720><c> description</c><00:02:43.280><c> indicated</c>

00:02:43.830 --> 00:02:43.840 align:start position:0%
now as the problem description indicated
 

00:02:43.840 --> 00:02:45.750 align:start position:0%
now as the problem description indicated
there<00:02:44.000><c> is</c><00:02:44.160><c> a</c><00:02:44.319><c> useful</c><00:02:44.720><c> array</c><00:02:45.120><c> method</c><00:02:45.440><c> here</c><00:02:45.680><c> that</c>

00:02:45.750 --> 00:02:45.760 align:start position:0%
there is a useful array method here that
 

00:02:45.760 --> 00:02:46.949 align:start position:0%
there is a useful array method here that
we<00:02:45.920><c> can</c><00:02:46.160><c> use</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
we can use
 

00:02:46.959 --> 00:02:50.390 align:start position:0%
we can use
and<00:02:47.120><c> that</c><00:02:47.360><c> is</c><00:02:47.440><c> the</c><00:02:47.760><c> shift</c><00:02:48.840><c> method</c>

00:02:50.390 --> 00:02:50.400 align:start position:0%
and that is the shift method
 

00:02:50.400 --> 00:02:52.949 align:start position:0%
and that is the shift method
i'm<00:02:50.640><c> going</c><00:02:50.879><c> to</c><00:02:51.280><c> hop</c><00:02:51.519><c> into</c><00:02:51.760><c> irb</c><00:02:52.319><c> so</c><00:02:52.480><c> we</c><00:02:52.640><c> can</c><00:02:52.800><c> see</c>

00:02:52.949 --> 00:02:52.959 align:start position:0%
i'm going to hop into irb so we can see
 

00:02:52.959 --> 00:02:56.710 align:start position:0%
i'm going to hop into irb so we can see
how<00:02:53.120><c> this</c><00:02:53.440><c> works</c>

00:02:56.710 --> 00:02:56.720 align:start position:0%
 
 

00:02:56.720 --> 00:03:00.229 align:start position:0%
 
i'll<00:02:57.040><c> copy</c><00:02:57.440><c> our</c><00:02:57.599><c> contact</c><00:02:58.080><c> data</c><00:02:58.480><c> array</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
i'll copy our contact data array
 

00:03:00.239 --> 00:03:03.750 align:start position:0%
i'll copy our contact data array
and<00:03:00.480><c> paste</c><00:03:00.800><c> it</c><00:03:00.959><c> into</c><00:03:01.120><c> irb</c>

00:03:03.750 --> 00:03:03.760 align:start position:0%
 
 

00:03:03.760 --> 00:03:07.670 align:start position:0%
 
now<00:03:04.000><c> when</c><00:03:04.239><c> i</c><00:03:04.400><c> invoke</c><00:03:04.879><c> the</c><00:03:05.040><c> array</c><00:03:05.519><c> shift</c><00:03:05.840><c> method</c>

00:03:07.670 --> 00:03:07.680 align:start position:0%
now when i invoke the array shift method
 

00:03:07.680 --> 00:03:10.309 align:start position:0%
now when i invoke the array shift method
on<00:03:07.840><c> our</c><00:03:08.080><c> array</c><00:03:08.879><c> it</c><00:03:09.040><c> returns</c><00:03:09.680><c> the</c><00:03:09.920><c> first</c>

00:03:10.309 --> 00:03:10.319 align:start position:0%
on our array it returns the first
 

00:03:10.319 --> 00:03:12.149 align:start position:0%
on our array it returns the first
element<00:03:10.800><c> of</c><00:03:11.040><c> that</c><00:03:11.280><c> array</c>

00:03:12.149 --> 00:03:12.159 align:start position:0%
element of that array
 

00:03:12.159 --> 00:03:15.509 align:start position:0%
element of that array
which<00:03:12.400><c> in</c><00:03:12.560><c> this</c><00:03:12.720><c> case</c><00:03:13.040><c> is</c><00:03:13.120><c> the</c><00:03:13.280><c> email</c><00:03:15.040><c> now</c><00:03:15.280><c> an</c>

00:03:15.509 --> 00:03:15.519 align:start position:0%
which in this case is the email now an
 

00:03:15.519 --> 00:03:17.190 align:start position:0%
which in this case is the email now an
important<00:03:15.920><c> thing</c><00:03:16.159><c> to</c><00:03:16.319><c> note</c><00:03:16.640><c> about</c><00:03:16.959><c> this</c>

00:03:17.190 --> 00:03:17.200 align:start position:0%
important thing to note about this
 

00:03:17.200 --> 00:03:20.710 align:start position:0%
important thing to note about this
method<00:03:17.599><c> is</c><00:03:17.760><c> that</c><00:03:17.920><c> it</c><00:03:18.080><c> is</c><00:03:18.239><c> destructive</c>

00:03:20.710 --> 00:03:20.720 align:start position:0%
method is that it is destructive
 

00:03:20.720 --> 00:03:22.790 align:start position:0%
method is that it is destructive
so<00:03:20.959><c> not</c><00:03:21.120><c> only</c><00:03:21.440><c> does</c><00:03:21.599><c> it</c><00:03:21.760><c> return</c><00:03:22.239><c> the</c><00:03:22.400><c> first</c>

00:03:22.790 --> 00:03:22.800 align:start position:0%
so not only does it return the first
 

00:03:22.800 --> 00:03:24.949 align:start position:0%
so not only does it return the first
element<00:03:23.200><c> of</c><00:03:23.360><c> the</c><00:03:23.599><c> calling</c><00:03:23.920><c> array</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
element of the calling array
 

00:03:24.959 --> 00:03:27.190 align:start position:0%
element of the calling array
but<00:03:25.120><c> it</c><00:03:25.360><c> also</c><00:03:25.760><c> removes</c><00:03:26.319><c> it</c><00:03:26.400><c> destructively</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
but it also removes it destructively
 

00:03:27.200 --> 00:03:29.030 align:start position:0%
but it also removes it destructively
from<00:03:27.440><c> that</c><00:03:27.680><c> array</c>

00:03:29.030 --> 00:03:29.040 align:start position:0%
from that array
 

00:03:29.040 --> 00:03:32.149 align:start position:0%
from that array
so<00:03:29.280><c> now</c><00:03:29.760><c> contact</c><00:03:30.239><c> data</c><00:03:31.440><c> only</c><00:03:31.680><c> has</c>

00:03:32.149 --> 00:03:32.159 align:start position:0%
so now contact data only has
 

00:03:32.159 --> 00:03:35.670 align:start position:0%
so now contact data only has
two<00:03:32.400><c> elements</c>

00:03:35.670 --> 00:03:35.680 align:start position:0%
 
 

00:03:35.680 --> 00:03:40.149 align:start position:0%
 
and<00:03:35.840><c> i</c><00:03:36.000><c> can</c><00:03:36.400><c> invoke</c><00:03:36.879><c> shift</c><00:03:37.200><c> again</c>

00:03:40.149 --> 00:03:40.159 align:start position:0%
 
 

00:03:40.159 --> 00:03:43.270 align:start position:0%
 
and<00:03:40.400><c> now</c><00:03:40.640><c> contact</c><00:03:41.040><c> data</c><00:03:41.360><c> has</c><00:03:41.680><c> one</c><00:03:41.920><c> element</c>

00:03:43.270 --> 00:03:43.280 align:start position:0%
and now contact data has one element
 

00:03:43.280 --> 00:03:45.750 align:start position:0%
and now contact data has one element
so<00:03:43.519><c> we</c><00:03:43.599><c> can</c><00:03:43.840><c> continue</c><00:03:44.319><c> to</c><00:03:44.480><c> do</c><00:03:44.720><c> this</c><00:03:45.040><c> until</c><00:03:45.440><c> the</c>

00:03:45.750 --> 00:03:45.760 align:start position:0%
so we can continue to do this until the
 

00:03:45.760 --> 00:03:46.949 align:start position:0%
so we can continue to do this until the
contact<00:03:46.159><c> data</c><00:03:46.480><c> array</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
contact data array
 

00:03:46.959 --> 00:03:51.350 align:start position:0%
contact data array
is<00:03:47.120><c> empty</c><00:03:49.760><c> so</c><00:03:49.920><c> this</c><00:03:50.080><c> is</c><00:03:50.239><c> going</c><00:03:50.480><c> to</c><00:03:50.560><c> be</c><00:03:50.720><c> useful</c>

00:03:51.350 --> 00:03:51.360 align:start position:0%
is empty so this is going to be useful
 

00:03:51.360 --> 00:03:55.030 align:start position:0%
is empty so this is going to be useful
in<00:03:51.519><c> our</c><00:03:51.680><c> program</c>

00:03:55.030 --> 00:03:55.040 align:start position:0%
 
 

00:03:55.040 --> 00:03:57.750 align:start position:0%
 
as<00:03:55.280><c> we</c><00:03:55.519><c> iterate</c><00:03:56.080><c> through</c><00:03:56.799><c> and</c><00:03:57.200><c> assign</c><00:03:57.599><c> the</c>

00:03:57.750 --> 00:03:57.760 align:start position:0%
as we iterate through and assign the
 

00:03:57.760 --> 00:03:59.429 align:start position:0%
as we iterate through and assign the
keys<00:03:58.080><c> of</c><00:03:58.239><c> this</c><00:03:58.480><c> hash</c>

00:03:59.429 --> 00:03:59.439 align:start position:0%
keys of this hash
 

00:03:59.439 --> 00:04:01.670 align:start position:0%
keys of this hash
we<00:03:59.599><c> will</c><00:03:59.840><c> call</c><00:04:00.159><c> shift</c><00:04:00.560><c> on</c><00:04:00.640><c> our</c><00:04:00.799><c> contact</c><00:04:01.280><c> data</c>

00:04:01.670 --> 00:04:01.680 align:start position:0%
we will call shift on our contact data
 

00:04:01.680 --> 00:04:03.030 align:start position:0%
we will call shift on our contact data
array

00:04:03.030 --> 00:04:03.040 align:start position:0%
array
 

00:04:03.040 --> 00:04:05.910 align:start position:0%
array
and<00:04:03.200><c> this</c><00:04:03.439><c> will</c><00:04:03.680><c> allow</c><00:04:04.000><c> us</c><00:04:04.319><c> to</c><00:04:05.120><c> remove</c><00:04:05.680><c> and</c>

00:04:05.910 --> 00:04:05.920 align:start position:0%
and this will allow us to remove and
 

00:04:05.920 --> 00:04:07.110 align:start position:0%
and this will allow us to remove and
return<00:04:06.480><c> the</c><00:04:06.720><c> first</c>

00:04:07.110 --> 00:04:07.120 align:start position:0%
return the first
 

00:04:07.120 --> 00:04:10.710 align:start position:0%
return the first
element<00:04:07.599><c> of</c><00:04:07.760><c> the</c><00:04:07.920><c> array</c><00:04:08.400><c> repeatedly</c>

00:04:10.710 --> 00:04:10.720 align:start position:0%
element of the array repeatedly
 

00:04:10.720 --> 00:04:13.509 align:start position:0%
element of the array repeatedly
so<00:04:10.959><c> on</c><00:04:11.200><c> line</c><00:04:11.519><c> 11</c><00:04:12.000><c> i'm</c><00:04:12.159><c> going</c><00:04:12.480><c> to</c><00:04:12.959><c> output</c>

00:04:13.509 --> 00:04:13.519 align:start position:0%
so on line 11 i'm going to output
 

00:04:13.519 --> 00:04:16.150 align:start position:0%
so on line 11 i'm going to output
contacts

00:04:16.150 --> 00:04:16.160 align:start position:0%
contacts
 

00:04:16.160 --> 00:04:18.310 align:start position:0%
contacts
and<00:04:16.320><c> at</c><00:04:16.479><c> this</c><00:04:16.720><c> point</c><00:04:17.199><c> we</c><00:04:17.359><c> would</c><00:04:17.600><c> expect</c><00:04:18.079><c> that</c>

00:04:18.310 --> 00:04:18.320 align:start position:0%
and at this point we would expect that
 

00:04:18.320 --> 00:04:20.390 align:start position:0%
and at this point we would expect that
when<00:04:18.479><c> our</c><00:04:18.639><c> program</c><00:04:19.040><c> finishes</c><00:04:19.600><c> iterating</c>

00:04:20.390 --> 00:04:20.400 align:start position:0%
when our program finishes iterating
 

00:04:20.400 --> 00:04:23.189 align:start position:0%
when our program finishes iterating
we<00:04:20.560><c> have</c><00:04:20.880><c> three</c><00:04:21.199><c> key</c><00:04:21.440><c> value</c><00:04:21.919><c> pairs</c><00:04:22.800><c> in</c><00:04:22.960><c> the</c>

00:04:23.189 --> 00:04:23.199 align:start position:0%
we have three key value pairs in the
 

00:04:23.199 --> 00:04:23.670 align:start position:0%
we have three key value pairs in the
hash

00:04:23.670 --> 00:04:23.680 align:start position:0%
hash
 

00:04:23.680 --> 00:04:26.629 align:start position:0%
hash
associated<00:04:24.320><c> with</c><00:04:24.479><c> the</c><00:04:24.639><c> key</c><00:04:24.960><c> joe</c><00:04:25.199><c> smith</c><00:04:26.240><c> so</c><00:04:26.479><c> we</c>

00:04:26.629 --> 00:04:26.639 align:start position:0%
associated with the key joe smith so we
 

00:04:26.639 --> 00:04:28.070 align:start position:0%
associated with the key joe smith so we
expect<00:04:26.960><c> to</c><00:04:27.120><c> see</c><00:04:27.360><c> our</c><00:04:27.520><c> email</c>

00:04:28.070 --> 00:04:28.080 align:start position:0%
expect to see our email
 

00:04:28.080 --> 00:04:32.230 align:start position:0%
expect to see our email
address<00:04:28.560><c> and</c><00:04:28.720><c> phone</c><00:04:28.960><c> number</c><00:04:29.280><c> there</c>

00:04:32.230 --> 00:04:32.240 align:start position:0%
 
 

00:04:32.240 --> 00:04:37.830 align:start position:0%
 
and<00:04:32.400><c> that's</c><00:04:32.639><c> what</c><00:04:32.800><c> we</c><00:04:32.960><c> see</c>

00:04:37.830 --> 00:04:37.840 align:start position:0%
 
 

00:04:37.840 --> 00:04:39.990 align:start position:0%
 
now<00:04:38.080><c> let's</c><00:04:38.320><c> take</c><00:04:38.560><c> a</c><00:04:38.639><c> look</c><00:04:38.960><c> at</c><00:04:39.199><c> the</c><00:04:39.440><c> bonus</c><00:04:39.840><c> part</c>

00:04:39.990 --> 00:04:40.000 align:start position:0%
now let's take a look at the bonus part
 

00:04:40.000 --> 00:04:43.270 align:start position:0%
now let's take a look at the bonus part
of<00:04:40.080><c> this</c><00:04:40.840><c> problem</c>

00:04:43.270 --> 00:04:43.280 align:start position:0%
of this problem
 

00:04:43.280 --> 00:04:45.749 align:start position:0%
of this problem
i'm<00:04:43.520><c> going</c><00:04:43.759><c> to</c><00:04:44.000><c> replace</c><00:04:44.560><c> the</c><00:04:44.880><c> contact</c><00:04:45.360><c> data</c>

00:04:45.749 --> 00:04:45.759 align:start position:0%
i'm going to replace the contact data
 

00:04:45.759 --> 00:04:46.310 align:start position:0%
i'm going to replace the contact data
array

00:04:46.310 --> 00:04:46.320 align:start position:0%
array
 

00:04:46.320 --> 00:04:48.310 align:start position:0%
array
with<00:04:46.639><c> a</c><00:04:46.720><c> two-dimensional</c><00:04:47.600><c> contact</c><00:04:48.000><c> data</c>

00:04:48.310 --> 00:04:48.320 align:start position:0%
with a two-dimensional contact data
 

00:04:48.320 --> 00:04:50.550 align:start position:0%
with a two-dimensional contact data
array

00:04:50.550 --> 00:04:50.560 align:start position:0%
array
 

00:04:50.560 --> 00:04:52.950 align:start position:0%
array
this<00:04:50.880><c> also</c><00:04:51.280><c> contains</c><00:04:51.759><c> information</c><00:04:52.560><c> about</c>

00:04:52.950 --> 00:04:52.960 align:start position:0%
this also contains information about
 

00:04:52.960 --> 00:04:55.590 align:start position:0%
this also contains information about
sally

00:04:55.590 --> 00:04:55.600 align:start position:0%
 
 

00:04:55.600 --> 00:04:58.790 align:start position:0%
 
and<00:04:56.080><c> i'll</c><00:04:56.320><c> add</c><00:04:56.639><c> sally</c><00:04:57.040><c> johnson</c><00:04:58.240><c> to</c><00:04:58.560><c> our</c>

00:04:58.790 --> 00:04:58.800 align:start position:0%
and i'll add sally johnson to our
 

00:04:58.800 --> 00:05:05.909 align:start position:0%
and i'll add sally johnson to our
contacts<00:04:59.360><c> hash</c><00:04:59.759><c> as</c><00:04:59.919><c> well</c>

00:05:05.909 --> 00:05:05.919 align:start position:0%
 
 

00:05:05.919 --> 00:05:08.790 align:start position:0%
 
so<00:05:06.160><c> the</c><00:05:06.320><c> challenge</c><00:05:06.800><c> is</c><00:05:06.960><c> the</c><00:05:07.120><c> same</c><00:05:07.759><c> we</c><00:05:08.000><c> want</c><00:05:08.240><c> to</c>

00:05:08.790 --> 00:05:08.800 align:start position:0%
so the challenge is the same we want to
 

00:05:08.800 --> 00:05:09.590 align:start position:0%
so the challenge is the same we want to
populate<00:05:09.280><c> this</c>

00:05:09.590 --> 00:05:09.600 align:start position:0%
populate this
 

00:05:09.600 --> 00:05:13.029 align:start position:0%
populate this
information<00:05:10.560><c> into</c><00:05:10.960><c> the</c><00:05:11.680><c> hash</c><00:05:12.080><c> values</c><00:05:12.639><c> in</c><00:05:12.800><c> our</c>

00:05:13.029 --> 00:05:13.039 align:start position:0%
information into the hash values in our
 

00:05:13.039 --> 00:05:14.629 align:start position:0%
information into the hash values in our
contacts<00:05:13.680><c> hash</c>

00:05:14.629 --> 00:05:14.639 align:start position:0%
contacts hash
 

00:05:14.639 --> 00:05:16.629 align:start position:0%
contacts hash
but<00:05:14.800><c> this</c><00:05:15.039><c> time</c><00:05:15.440><c> we're</c><00:05:15.600><c> not</c><00:05:15.840><c> just</c><00:05:16.080><c> doing</c><00:05:16.400><c> it</c>

00:05:16.629 --> 00:05:16.639 align:start position:0%
but this time we're not just doing it
 

00:05:16.639 --> 00:05:18.550 align:start position:0%
but this time we're not just doing it
for<00:05:17.039><c> a</c><00:05:17.199><c> single</c><00:05:17.600><c> person</c>

00:05:18.550 --> 00:05:18.560 align:start position:0%
for a single person
 

00:05:18.560 --> 00:05:20.870 align:start position:0%
for a single person
our<00:05:18.800><c> contact</c><00:05:19.280><c> data</c><00:05:19.600><c> array</c><00:05:20.000><c> is</c><00:05:20.160><c> now</c><00:05:20.560><c> a</c><00:05:20.720><c> two</c>

00:05:20.870 --> 00:05:20.880 align:start position:0%
our contact data array is now a two
 

00:05:20.880 --> 00:05:22.870 align:start position:0%
our contact data array is now a two
dimensional<00:05:21.440><c> array</c>

00:05:22.870 --> 00:05:22.880 align:start position:0%
dimensional array
 

00:05:22.880 --> 00:05:25.270 align:start position:0%
dimensional array
so<00:05:23.039><c> the</c><00:05:23.199><c> main</c><00:05:23.440><c> thing</c><00:05:23.600><c> that</c><00:05:23.840><c> changes</c><00:05:24.320><c> here</c><00:05:25.039><c> on</c>

00:05:25.270 --> 00:05:25.280 align:start position:0%
so the main thing that changes here on
 

00:05:25.280 --> 00:05:26.150 align:start position:0%
so the main thing that changes here on
line<00:05:25.600><c> eight</c>

00:05:26.150 --> 00:05:26.160 align:start position:0%
line eight
 

00:05:26.160 --> 00:05:29.189 align:start position:0%
line eight
is<00:05:26.400><c> how</c><00:05:26.639><c> we</c><00:05:26.880><c> tell</c><00:05:27.199><c> our</c><00:05:27.440><c> program</c><00:05:28.800><c> which</c>

00:05:29.189 --> 00:05:29.199 align:start position:0%
is how we tell our program which
 

00:05:29.199 --> 00:05:31.670 align:start position:0%
is how we tell our program which
element<00:05:29.680><c> from</c><00:05:29.919><c> the</c><00:05:30.160><c> contact</c><00:05:30.639><c> data</c><00:05:31.039><c> array</c><00:05:31.520><c> that</c>

00:05:31.670 --> 00:05:31.680 align:start position:0%
element from the contact data array that
 

00:05:31.680 --> 00:05:33.350 align:start position:0%
element from the contact data array that
we<00:05:31.840><c> want</c><00:05:32.080><c> to</c><00:05:32.240><c> use</c>

00:05:33.350 --> 00:05:33.360 align:start position:0%
we want to use
 

00:05:33.360 --> 00:05:35.909 align:start position:0%
we want to use
if<00:05:33.520><c> we</c><00:05:33.680><c> simply</c><00:05:34.080><c> call</c><00:05:34.479><c> shift</c><00:05:34.960><c> on</c><00:05:35.120><c> the</c><00:05:35.360><c> contact</c>

00:05:35.909 --> 00:05:35.919 align:start position:0%
if we simply call shift on the contact
 

00:05:35.919 --> 00:05:38.070 align:start position:0%
if we simply call shift on the contact
data<00:05:36.320><c> array</c><00:05:36.720><c> as</c><00:05:36.880><c> it</c><00:05:37.039><c> is</c><00:05:37.280><c> now</c>

00:05:38.070 --> 00:05:38.080 align:start position:0%
data array as it is now
 

00:05:38.080 --> 00:05:40.629 align:start position:0%
data array as it is now
it<00:05:38.160><c> will</c><00:05:38.400><c> return</c><00:05:39.039><c> the</c><00:05:39.280><c> entire</c><00:05:39.840><c> three</c><00:05:40.160><c> element</c>

00:05:40.629 --> 00:05:40.639 align:start position:0%
it will return the entire three element
 

00:05:40.639 --> 00:05:41.990 align:start position:0%
it will return the entire three element
subarray

00:05:41.990 --> 00:05:42.000 align:start position:0%
subarray
 

00:05:42.000 --> 00:05:44.790 align:start position:0%
subarray
instead<00:05:42.560><c> we</c><00:05:42.720><c> want</c><00:05:42.880><c> to</c><00:05:43.360><c> first</c><00:05:43.840><c> access</c><00:05:44.479><c> that</c>

00:05:44.790 --> 00:05:44.800 align:start position:0%
instead we want to first access that
 

00:05:44.800 --> 00:05:46.710 align:start position:0%
instead we want to first access that
sub-array

00:05:46.710 --> 00:05:46.720 align:start position:0%
sub-array
 

00:05:46.720 --> 00:05:49.909 align:start position:0%
sub-array
and<00:05:46.960><c> then</c><00:05:47.360><c> invoke</c><00:05:47.680><c> shift</c><00:05:48.080><c> on</c><00:05:48.160><c> the</c><00:05:48.320><c> subarray</c>

00:05:49.909 --> 00:05:49.919 align:start position:0%
and then invoke shift on the subarray
 

00:05:49.919 --> 00:05:52.390 align:start position:0%
and then invoke shift on the subarray
one<00:05:50.160><c> way</c><00:05:50.320><c> that</c><00:05:50.479><c> we</c><00:05:50.639><c> can</c><00:05:50.880><c> do</c><00:05:51.039><c> this</c><00:05:51.440><c> is</c><00:05:51.680><c> to</c><00:05:52.160><c> use</c>

00:05:52.390 --> 00:05:52.400 align:start position:0%
one way that we can do this is to use
 

00:05:52.400 --> 00:05:55.990 align:start position:0%
one way that we can do this is to use
the<00:05:52.639><c> each</c><00:05:52.880><c> with</c><00:05:53.199><c> index</c><00:05:53.600><c> method</c>

00:05:55.990 --> 00:05:56.000 align:start position:0%
the each with index method
 

00:05:56.000 --> 00:06:01.189 align:start position:0%
the each with index method
to<00:05:56.240><c> iterate</c><00:05:56.720><c> through</c><00:05:56.960><c> our</c><00:05:57.039><c> contacts</c><00:05:57.680><c> hash</c>

00:06:01.189 --> 00:06:01.199 align:start position:0%
 
 

00:06:01.199 --> 00:06:02.790 align:start position:0%
 
now<00:06:01.360><c> we'll</c><00:06:01.520><c> have</c><00:06:01.759><c> an</c><00:06:01.919><c> additional</c><00:06:02.400><c> block</c>

00:06:02.790 --> 00:06:02.800 align:start position:0%
now we'll have an additional block
 

00:06:02.800 --> 00:06:04.710 align:start position:0%
now we'll have an additional block
parameter

00:06:04.710 --> 00:06:04.720 align:start position:0%
parameter
 

00:06:04.720 --> 00:06:06.870 align:start position:0%
parameter
we<00:06:04.960><c> still</c><00:06:05.280><c> pass</c><00:06:05.600><c> the</c><00:06:05.759><c> key</c><00:06:06.080><c> in</c><00:06:06.160><c> value</c><00:06:06.639><c> which</c>

00:06:06.870 --> 00:06:06.880 align:start position:0%
we still pass the key in value which
 

00:06:06.880 --> 00:06:09.430 align:start position:0%
we still pass the key in value which
we've<00:06:07.199><c> called</c><00:06:07.440><c> name</c><00:06:07.759><c> and</c><00:06:07.919><c> hash</c>

00:06:09.430 --> 00:06:09.440 align:start position:0%
we've called name and hash
 

00:06:09.440 --> 00:06:11.990 align:start position:0%
we've called name and hash
but<00:06:09.680><c> an</c><00:06:09.919><c> index</c><00:06:10.560><c> will</c><00:06:10.880><c> also</c><00:06:11.199><c> be</c><00:06:11.360><c> passed</c><00:06:11.759><c> into</c>

00:06:11.990 --> 00:06:12.000 align:start position:0%
but an index will also be passed into
 

00:06:12.000 --> 00:06:13.909 align:start position:0%
but an index will also be passed into
our<00:06:12.160><c> block</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
our block
 

00:06:13.919 --> 00:06:15.830 align:start position:0%
our block
and<00:06:14.080><c> this</c><00:06:14.319><c> is</c><00:06:14.479><c> going</c><00:06:14.720><c> to</c><00:06:14.880><c> work</c><00:06:15.120><c> out</c><00:06:15.360><c> just</c><00:06:15.600><c> fine</c>

00:06:15.830 --> 00:06:15.840 align:start position:0%
and this is going to work out just fine
 

00:06:15.840 --> 00:06:17.189 align:start position:0%
and this is going to work out just fine
for<00:06:16.080><c> our</c><00:06:16.240><c> purposes</c>

00:06:17.189 --> 00:06:17.199 align:start position:0%
for our purposes
 

00:06:17.199 --> 00:06:19.430 align:start position:0%
for our purposes
because<00:06:17.520><c> the</c><00:06:17.759><c> contacts</c><00:06:18.319><c> hash</c><00:06:18.639><c> has</c><00:06:18.960><c> two</c><00:06:19.280><c> key</c>

00:06:19.430 --> 00:06:19.440 align:start position:0%
because the contacts hash has two key
 

00:06:19.440 --> 00:06:20.950 align:start position:0%
because the contacts hash has two key
value<00:06:19.840><c> pairs</c>

00:06:20.950 --> 00:06:20.960 align:start position:0%
value pairs
 

00:06:20.960 --> 00:06:23.749 align:start position:0%
value pairs
and<00:06:21.199><c> our</c><00:06:21.440><c> contact</c><00:06:21.919><c> data</c><00:06:22.319><c> array</c><00:06:22.960><c> has</c><00:06:23.440><c> two</c>

00:06:23.749 --> 00:06:23.759 align:start position:0%
and our contact data array has two
 

00:06:23.759 --> 00:06:28.150 align:start position:0%
and our contact data array has two
subarrays

00:06:28.150 --> 00:06:28.160 align:start position:0%
 
 

00:06:28.160 --> 00:06:31.189 align:start position:0%
 
now<00:06:28.800><c> as</c><00:06:29.039><c> we</c><00:06:29.280><c> iterate</c><00:06:29.919><c> through</c><00:06:30.639><c> the</c>

00:06:31.189 --> 00:06:31.199 align:start position:0%
now as we iterate through the
 

00:06:31.199 --> 00:06:35.270 align:start position:0%
now as we iterate through the
fields<00:06:31.600><c> array</c><00:06:32.960><c> and</c><00:06:33.199><c> we</c><00:06:33.440><c> assign</c><00:06:33.919><c> each</c><00:06:34.240><c> key</c><00:06:34.639><c> as</c><00:06:34.960><c> a</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
fields array and we assign each key as a
 

00:06:35.280 --> 00:06:39.189 align:start position:0%
fields array and we assign each key as a
field<00:06:36.000><c> in</c><00:06:36.160><c> our</c><00:06:36.400><c> hash</c><00:06:37.759><c> we</c><00:06:37.919><c> can</c><00:06:38.240><c> reference</c>

00:06:39.189 --> 00:06:39.199 align:start position:0%
field in our hash we can reference
 

00:06:39.199 --> 00:06:41.909 align:start position:0%
field in our hash we can reference
the<00:06:39.680><c> contact</c><00:06:40.160><c> data</c><00:06:40.639><c> element</c><00:06:41.520><c> at</c><00:06:41.759><c> the</c>

00:06:41.909 --> 00:06:41.919 align:start position:0%
the contact data element at the
 

00:06:41.919 --> 00:06:42.710 align:start position:0%
the contact data element at the
appropriate

00:06:42.710 --> 00:06:42.720 align:start position:0%
appropriate
 

00:06:42.720 --> 00:06:46.150 align:start position:0%
appropriate
index<00:06:44.160><c> so</c><00:06:44.319><c> we'll</c><00:06:44.639><c> first</c><00:06:45.039><c> iterate</c><00:06:45.600><c> through</c><00:06:45.919><c> the</c>

00:06:46.150 --> 00:06:46.160 align:start position:0%
index so we'll first iterate through the
 

00:06:46.160 --> 00:06:47.189 align:start position:0%
index so we'll first iterate through the
fields<00:06:46.560><c> array</c>

00:06:47.189 --> 00:06:47.199 align:start position:0%
fields array
 

00:06:47.199 --> 00:06:50.230 align:start position:0%
fields array
assigning<00:06:48.000><c> each</c><00:06:48.400><c> key</c><00:06:48.720><c> of</c><00:06:48.880><c> our</c><00:06:49.120><c> hash</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
assigning each key of our hash
 

00:06:50.240 --> 00:06:52.710 align:start position:0%
assigning each key of our hash
to<00:06:50.560><c> an</c><00:06:50.800><c> element</c><00:06:51.280><c> within</c><00:06:51.759><c> the</c><00:06:52.000><c> appropriate</c>

00:06:52.710 --> 00:06:52.720 align:start position:0%
to an element within the appropriate
 

00:06:52.720 --> 00:06:54.950 align:start position:0%
to an element within the appropriate
contact<00:06:53.280><c> data</c><00:06:53.680><c> subarray</c>

00:06:54.950 --> 00:06:54.960 align:start position:0%
contact data subarray
 

00:06:54.960 --> 00:06:56.790 align:start position:0%
contact data subarray
after<00:06:55.280><c> we've</c><00:06:55.520><c> gone</c><00:06:55.759><c> through</c><00:06:56.000><c> and</c><00:06:56.160><c> populated</c>

00:06:56.790 --> 00:06:56.800 align:start position:0%
after we've gone through and populated
 

00:06:56.800 --> 00:06:57.990 align:start position:0%
after we've gone through and populated
the<00:06:56.960><c> first</c><00:06:57.280><c> hash</c>

00:06:57.990 --> 00:06:58.000 align:start position:0%
the first hash
 

00:06:58.000 --> 00:06:59.990 align:start position:0%
the first hash
then<00:06:58.240><c> our</c><00:06:58.479><c> index</c><00:06:58.880><c> will</c><00:06:59.120><c> increase</c><00:06:59.680><c> and</c><00:06:59.840><c> we'll</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
then our index will increase and we'll
 

00:07:00.000 --> 00:07:01.909 align:start position:0%
then our index will increase and we'll
go<00:07:00.240><c> through</c><00:07:00.400><c> and</c><00:07:00.560><c> populate</c><00:07:01.039><c> that</c><00:07:01.280><c> next</c><00:07:01.520><c> hash</c>

00:07:01.909 --> 00:07:01.919 align:start position:0%
go through and populate that next hash
 

00:07:01.919 --> 00:07:02.790 align:start position:0%
go through and populate that next hash
as<00:07:02.080><c> well</c>

00:07:02.790 --> 00:07:02.800 align:start position:0%
as well
 

00:07:02.800 --> 00:07:05.430 align:start position:0%
as well
let's<00:07:03.199><c> output</c><00:07:03.680><c> our</c><00:07:03.919><c> contacts</c><00:07:04.560><c> hash</c><00:07:04.960><c> now</c><00:07:05.280><c> and</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
let's output our contacts hash now and
 

00:07:05.440 --> 00:07:07.670 align:start position:0%
let's output our contacts hash now and
we'll<00:07:05.759><c> expect</c><00:07:06.160><c> to</c><00:07:06.319><c> see</c><00:07:06.639><c> both</c><00:07:06.960><c> hashes</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
we'll expect to see both hashes
 

00:07:07.680 --> 00:07:09.749 align:start position:0%
we'll expect to see both hashes
associated<00:07:08.319><c> with</c><00:07:08.400><c> the</c><00:07:08.639><c> keys</c><00:07:09.039><c> joe</c><00:07:09.280><c> smith</c><00:07:09.599><c> and</c>

00:07:09.749 --> 00:07:09.759 align:start position:0%
associated with the keys joe smith and
 

00:07:09.759 --> 00:07:10.710 align:start position:0%
associated with the keys joe smith and
sally<00:07:10.160><c> johnson</c>

00:07:10.710 --> 00:07:10.720 align:start position:0%
sally johnson
 

00:07:10.720 --> 00:07:17.110 align:start position:0%
sally johnson
populated<00:07:11.199><c> with</c><00:07:11.360><c> the</c><00:07:11.520><c> appropriate</c><00:07:14.840><c> data</c>

00:07:17.110 --> 00:07:17.120 align:start position:0%
populated with the appropriate data
 

00:07:17.120 --> 00:07:30.000 align:start position:0%
populated with the appropriate data
and<00:07:17.360><c> we</c><00:07:27.000><c> do</c>

