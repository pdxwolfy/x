WEBVTT
Kind: captions
Language: en

00:00:04.799 --> 00:00:07.190 align:start position:0%
 
in<00:00:04.960><c> this</c><00:00:05.200><c> exercise</c><00:00:06.000><c> we</c><00:00:06.240><c> are</c><00:00:06.399><c> asked</c><00:00:06.879><c> to</c>

00:00:07.190 --> 00:00:07.200 align:start position:0%
in this exercise we are asked to
 

00:00:07.200 --> 00:00:11.030 align:start position:0%
in this exercise we are asked to
use<00:00:07.520><c> the</c><00:00:07.919><c> modulo</c><00:00:08.639><c> operator</c><00:00:09.760><c> integer</c><00:00:10.240><c> division</c>

00:00:11.030 --> 00:00:11.040 align:start position:0%
use the modulo operator integer division
 

00:00:11.040 --> 00:00:15.030 align:start position:0%
use the modulo operator integer division
or<00:00:11.440><c> both</c><00:00:12.320><c> to</c><00:00:12.719><c> take</c><00:00:12.960><c> a</c><00:00:13.200><c> four</c><00:00:13.519><c> digit</c><00:00:14.000><c> number</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
or both to take a four digit number
 

00:00:15.040 --> 00:00:17.590 align:start position:0%
or both to take a four digit number
and<00:00:15.440><c> find</c><00:00:15.679><c> the</c><00:00:15.759><c> digit</c><00:00:16.320><c> in</c><00:00:16.480><c> the</c><00:00:16.720><c> thousands</c>

00:00:17.590 --> 00:00:17.600 align:start position:0%
and find the digit in the thousands
 

00:00:17.600 --> 00:00:18.390 align:start position:0%
and find the digit in the thousands
hundreds

00:00:18.390 --> 00:00:18.400 align:start position:0%
hundreds
 

00:00:18.400 --> 00:00:22.230 align:start position:0%
hundreds
tens<00:00:19.119><c> and</c><00:00:19.359><c> ones</c><00:00:19.840><c> place</c><00:00:21.199><c> so</c><00:00:21.439><c> let's</c><00:00:21.680><c> begin</c><00:00:22.000><c> with</c>

00:00:22.230 --> 00:00:22.240 align:start position:0%
tens and ones place so let's begin with
 

00:00:22.240 --> 00:00:27.349 align:start position:0%
tens and ones place so let's begin with
the<00:00:22.400><c> thousands</c><00:00:22.960><c> place</c>

00:00:27.349 --> 00:00:27.359 align:start position:0%
 
 

00:00:27.359 --> 00:00:29.509 align:start position:0%
 
i'll<00:00:27.599><c> initialize</c><00:00:28.320><c> a</c><00:00:28.400><c> local</c><00:00:28.800><c> variable</c>

00:00:29.509 --> 00:00:29.519 align:start position:0%
i'll initialize a local variable
 

00:00:29.519 --> 00:00:31.109 align:start position:0%
i'll initialize a local variable
thousands

00:00:31.109 --> 00:00:31.119 align:start position:0%
thousands
 

00:00:31.119 --> 00:00:34.069 align:start position:0%
thousands
and<00:00:31.359><c> we</c><00:00:31.519><c> need</c><00:00:31.679><c> a</c><00:00:31.840><c> four</c><00:00:32.079><c> digit</c><00:00:32.480><c> number</c><00:00:33.600><c> for</c><00:00:33.760><c> this</c>

00:00:34.069 --> 00:00:34.079 align:start position:0%
and we need a four digit number for this
 

00:00:34.079 --> 00:00:35.030 align:start position:0%
and we need a four digit number for this
exercise

00:00:35.030 --> 00:00:35.040 align:start position:0%
exercise
 

00:00:35.040 --> 00:00:39.270 align:start position:0%
exercise
let's<00:00:35.280><c> use</c><00:00:35.520><c> the</c><00:00:35.760><c> number</c><00:00:37.320><c> 4936</c>

00:00:39.270 --> 00:00:39.280 align:start position:0%
let's use the number 4936
 

00:00:39.280 --> 00:00:42.069 align:start position:0%
let's use the number 4936
finding<00:00:39.760><c> the</c><00:00:40.000><c> digit</c><00:00:40.480><c> in</c><00:00:40.640><c> the</c><00:00:40.960><c> thousands</c><00:00:41.600><c> place</c>

00:00:42.069 --> 00:00:42.079 align:start position:0%
finding the digit in the thousands place
 

00:00:42.079 --> 00:00:43.590 align:start position:0%
finding the digit in the thousands place
for<00:00:42.320><c> a</c><00:00:42.480><c> four</c><00:00:42.719><c> digit</c><00:00:43.120><c> number</c>

00:00:43.590 --> 00:00:43.600 align:start position:0%
for a four digit number
 

00:00:43.600 --> 00:00:47.590 align:start position:0%
for a four digit number
is<00:00:43.840><c> pretty</c><00:00:44.160><c> simple</c><00:00:44.640><c> using</c><00:00:45.120><c> integer</c><00:00:45.600><c> division</c>

00:00:47.590 --> 00:00:47.600 align:start position:0%
is pretty simple using integer division
 

00:00:47.600 --> 00:00:50.470 align:start position:0%
is pretty simple using integer division
we'll<00:00:47.840><c> simply</c><00:00:48.239><c> divide</c><00:00:48.640><c> by</c><00:00:48.800><c> a</c><00:00:48.960><c> thousand</c><00:00:50.239><c> and</c>

00:00:50.470 --> 00:00:50.480 align:start position:0%
we'll simply divide by a thousand and
 

00:00:50.480 --> 00:00:52.229 align:start position:0%
we'll simply divide by a thousand and
the<00:00:50.640><c> return</c><00:00:51.120><c> value</c><00:00:51.440><c> of</c><00:00:51.600><c> that</c><00:00:51.840><c> integer</c>

00:00:52.229 --> 00:00:52.239 align:start position:0%
the return value of that integer
 

00:00:52.239 --> 00:00:54.869 align:start position:0%
the return value of that integer
division<00:00:52.719><c> will</c><00:00:52.879><c> be</c><00:00:53.120><c> four</c>

00:00:54.869 --> 00:00:54.879 align:start position:0%
division will be four
 

00:00:54.879 --> 00:00:59.670 align:start position:0%
division will be four
to<00:00:55.120><c> see</c><00:00:56.840><c> that</c>

00:00:59.670 --> 00:00:59.680 align:start position:0%
to see that
 

00:00:59.680 --> 00:01:02.790 align:start position:0%
to see that
let's<00:01:00.079><c> use</c><00:01:00.559><c> string</c><00:01:00.960><c> interpolation</c>

00:01:02.790 --> 00:01:02.800 align:start position:0%
let's use string interpolation
 

00:01:02.800 --> 00:01:05.509 align:start position:0%
let's use string interpolation
and<00:01:03.120><c> output</c><00:01:03.520><c> that</c><00:01:03.680><c> result</c><00:01:04.640><c> i'll</c><00:01:04.799><c> hop</c><00:01:05.119><c> over</c><00:01:05.360><c> to</c>

00:01:05.509 --> 00:01:05.519 align:start position:0%
and output that result i'll hop over to
 

00:01:05.519 --> 00:01:07.830 align:start position:0%
and output that result i'll hop over to
the<00:01:05.680><c> command</c><00:01:06.159><c> line</c>

00:01:07.830 --> 00:01:07.840 align:start position:0%
the command line
 

00:01:07.840 --> 00:01:10.950 align:start position:0%
the command line
and<00:01:08.159><c> run</c><00:01:08.400><c> our</c><00:01:08.640><c> file</c>

00:01:10.950 --> 00:01:10.960 align:start position:0%
and run our file
 

00:01:10.960 --> 00:01:13.429 align:start position:0%
and run our file
as<00:01:11.280><c> expected</c><00:01:12.159><c> the</c><00:01:12.320><c> return</c><00:01:12.720><c> value</c><00:01:13.119><c> of</c><00:01:13.200><c> that</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
as expected the return value of that
 

00:01:13.439 --> 00:01:15.270 align:start position:0%
as expected the return value of that
operation<00:01:14.080><c> was</c><00:01:14.400><c> four</c>

00:01:15.270 --> 00:01:15.280 align:start position:0%
operation was four
 

00:01:15.280 --> 00:01:17.510 align:start position:0%
operation was four
now<00:01:15.439><c> that</c><00:01:15.680><c> we've</c><00:01:16.000><c> successfully</c><00:01:16.960><c> found</c><00:01:17.360><c> the</c>

00:01:17.510 --> 00:01:17.520 align:start position:0%
now that we've successfully found the
 

00:01:17.520 --> 00:01:19.190 align:start position:0%
now that we've successfully found the
digit<00:01:17.920><c> in</c><00:01:18.000><c> the</c><00:01:18.159><c> thousands</c><00:01:18.720><c> place</c>

00:01:19.190 --> 00:01:19.200 align:start position:0%
digit in the thousands place
 

00:01:19.200 --> 00:01:23.990 align:start position:0%
digit in the thousands place
let's<00:01:19.439><c> move</c><00:01:19.680><c> on</c><00:01:19.840><c> to</c><00:01:20.000><c> the</c><00:01:20.159><c> hundreds</c><00:01:20.720><c> place</c>

00:01:23.990 --> 00:01:24.000 align:start position:0%
 
 

00:01:24.000 --> 00:01:26.870 align:start position:0%
 
for<00:01:24.240><c> the</c><00:01:24.320><c> rest</c><00:01:24.640><c> of</c><00:01:24.799><c> this</c><00:01:25.119><c> exercise</c><00:01:26.000><c> the</c><00:01:26.240><c> modulo</c>

00:01:26.870 --> 00:01:26.880 align:start position:0%
for the rest of this exercise the modulo
 

00:01:26.880 --> 00:01:29.030 align:start position:0%
for the rest of this exercise the modulo
operator<00:01:27.360><c> is</c><00:01:27.520><c> going</c><00:01:27.680><c> to</c><00:01:27.840><c> come</c><00:01:28.000><c> in</c><00:01:28.159><c> handy</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
operator is going to come in handy
 

00:01:29.040 --> 00:01:31.590 align:start position:0%
operator is going to come in handy
let's<00:01:29.360><c> move</c><00:01:29.600><c> back</c><00:01:29.840><c> over</c><00:01:30.159><c> to</c><00:01:30.320><c> our</c><00:01:30.560><c> command</c><00:01:31.040><c> line</c>

00:01:31.590 --> 00:01:31.600 align:start position:0%
let's move back over to our command line
 

00:01:31.600 --> 00:01:35.190 align:start position:0%
let's move back over to our command line
and<00:01:32.000><c> hop</c><00:01:32.240><c> into</c><00:01:32.560><c> irb</c><00:01:33.200><c> to</c><00:01:33.439><c> see</c><00:01:33.600><c> how</c><00:01:33.840><c> this</c><00:01:34.079><c> works</c>

00:01:35.190 --> 00:01:35.200 align:start position:0%
and hop into irb to see how this works
 

00:01:35.200 --> 00:01:38.830 align:start position:0%
and hop into irb to see how this works
we<00:01:35.439><c> saw</c><00:01:35.759><c> that</c><00:01:36.240><c> using</c><00:01:36.720><c> integer</c><00:01:37.200><c> division</c><00:01:37.840><c> to</c>

00:01:38.830 --> 00:01:38.840 align:start position:0%
we saw that using integer division to
 

00:01:38.840 --> 00:01:41.310 align:start position:0%
we saw that using integer division to
divide

00:01:41.310 --> 00:01:41.320 align:start position:0%
divide
 

00:01:41.320 --> 00:01:45.190 align:start position:0%
divide
4936<00:01:42.399><c> by</c><00:01:42.640><c> 1000</c>

00:01:45.190 --> 00:01:45.200 align:start position:0%
4936 by 1000
 

00:01:45.200 --> 00:01:48.550 align:start position:0%
4936 by 1000
returned<00:01:45.759><c> 4.</c><00:01:46.560><c> the</c><00:01:46.720><c> modulo</c><00:01:47.360><c> operator</c>

00:01:48.550 --> 00:01:48.560 align:start position:0%
returned 4. the modulo operator
 

00:01:48.560 --> 00:01:53.429 align:start position:0%
returned 4. the modulo operator
returns<00:01:49.119><c> the</c><00:01:49.360><c> remainder</c>

00:01:53.429 --> 00:01:53.439 align:start position:0%
 
 

00:01:53.439 --> 00:01:57.350 align:start position:0%
 
in<00:01:53.600><c> this</c><00:01:53.920><c> case</c><00:01:54.399><c> that's</c><00:01:55.240><c> 936.</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
in this case that's 936.
 

00:01:57.360 --> 00:01:59.590 align:start position:0%
in this case that's 936.
once<00:01:57.680><c> we</c><00:01:57.840><c> have</c><00:01:58.079><c> this</c><00:01:58.320><c> three-digit</c><00:01:58.960><c> number</c>

00:01:59.590 --> 00:01:59.600 align:start position:0%
once we have this three-digit number
 

00:01:59.600 --> 00:02:01.749 align:start position:0%
once we have this three-digit number
it's<00:01:59.840><c> easy</c><00:02:00.159><c> to</c><00:02:00.320><c> isolate</c><00:02:00.880><c> the</c><00:02:01.040><c> digit</c><00:02:01.439><c> in</c><00:02:01.600><c> the</c>

00:02:01.749 --> 00:02:01.759 align:start position:0%
it's easy to isolate the digit in the
 

00:02:01.759 --> 00:02:04.870 align:start position:0%
it's easy to isolate the digit in the
hundreds<00:02:02.240><c> place</c>

00:02:04.870 --> 00:02:04.880 align:start position:0%
 
 

00:02:04.880 --> 00:02:08.510 align:start position:0%
 
with<00:02:05.119><c> integer</c><00:02:05.600><c> division</c><00:02:06.079><c> again</c><00:02:07.040><c> we'll</c><00:02:07.280><c> divide</c>

00:02:08.510 --> 00:02:08.520 align:start position:0%
with integer division again we'll divide
 

00:02:08.520 --> 00:02:11.830 align:start position:0%
with integer division again we'll divide
936<00:02:09.520><c> by</c><00:02:09.759><c> 100</c><00:02:11.120><c> and</c><00:02:11.280><c> return</c>

00:02:11.830 --> 00:02:11.840 align:start position:0%
936 by 100 and return
 

00:02:11.840 --> 00:02:16.949 align:start position:0%
936 by 100 and return
9.

00:02:16.949 --> 00:02:16.959 align:start position:0%
 
 

00:02:16.959 --> 00:02:24.630 align:start position:0%
 
so<00:02:17.120><c> let's</c><00:02:17.360><c> go</c><00:02:17.520><c> back</c><00:02:17.680><c> to</c><00:02:17.840><c> our</c><00:02:18.000><c> text</c><00:02:20.840><c> editor</c>

00:02:24.630 --> 00:02:24.640 align:start position:0%
 
 

00:02:24.640 --> 00:02:26.790 align:start position:0%
 
we'll<00:02:24.879><c> use</c><00:02:25.040><c> the</c><00:02:25.200><c> modulo</c><00:02:25.760><c> operator</c><00:02:26.319><c> to</c><00:02:26.480><c> get</c><00:02:26.640><c> the</c>

00:02:26.790 --> 00:02:26.800 align:start position:0%
we'll use the modulo operator to get the
 

00:02:26.800 --> 00:02:27.910 align:start position:0%
we'll use the modulo operator to get the
remainder<00:02:27.520><c> of</c>

00:02:27.910 --> 00:02:27.920 align:start position:0%
remainder of
 

00:02:27.920 --> 00:02:34.949 align:start position:0%
remainder of
dividing<00:02:29.800><c> 4936</c><00:02:30.800><c> by</c><00:02:31.040><c> 1000</c>

00:02:34.949 --> 00:02:34.959 align:start position:0%
 
 

00:02:34.959 --> 00:02:41.990 align:start position:0%
 
and<00:02:35.120><c> divide</c><00:02:35.519><c> that</c><00:02:35.680><c> by</c><00:02:35.920><c> one</c><00:02:36.160><c> hundred</c>

00:02:41.990 --> 00:02:42.000 align:start position:0%
 
 

00:02:42.000 --> 00:02:44.390 align:start position:0%
 
and<00:02:42.239><c> we</c><00:02:42.480><c> expect</c><00:02:42.959><c> that</c><00:02:43.280><c> the</c><00:02:43.840><c> integer</c>

00:02:44.390 --> 00:02:44.400 align:start position:0%
and we expect that the integer
 

00:02:44.400 --> 00:02:46.710 align:start position:0%
and we expect that the integer
referenced<00:02:44.959><c> by</c><00:02:45.200><c> the</c><00:02:45.360><c> variable</c><00:02:45.920><c> hundreds</c><00:02:46.560><c> will</c>

00:02:46.710 --> 00:02:46.720 align:start position:0%
referenced by the variable hundreds will
 

00:02:46.720 --> 00:02:47.270 align:start position:0%
referenced by the variable hundreds will
be

00:02:47.270 --> 00:02:47.280 align:start position:0%
be
 

00:02:47.280 --> 00:02:56.150 align:start position:0%
be
nine<00:02:49.760><c> let's</c><00:02:50.000><c> hop</c><00:02:50.319><c> over</c><00:02:50.560><c> to</c><00:02:50.720><c> the</c><00:02:50.800><c> command</c><00:02:51.200><c> line</c>

00:02:56.150 --> 00:02:56.160 align:start position:0%
 
 

00:02:56.160 --> 00:03:02.390 align:start position:0%
 
and<00:02:56.319><c> we</c><00:02:56.480><c> see</c><00:02:56.800><c> nine</c><00:02:57.120><c> as</c><00:02:57.280><c> we</c><00:02:57.440><c> were</c><00:02:57.680><c> expecting</c>

00:03:02.390 --> 00:03:02.400 align:start position:0%
 
 

00:03:02.400 --> 00:03:05.110 align:start position:0%
 
now<00:03:02.640><c> let's</c><00:03:02.959><c> move</c><00:03:03.200><c> on</c><00:03:03.440><c> to</c><00:03:03.760><c> isolating</c><00:03:04.400><c> the</c><00:03:04.640><c> digit</c>

00:03:05.110 --> 00:03:05.120 align:start position:0%
now let's move on to isolating the digit
 

00:03:05.120 --> 00:03:08.470 align:start position:0%
now let's move on to isolating the digit
in<00:03:05.200><c> the</c><00:03:05.360><c> tens</c><00:03:05.840><c> place</c>

00:03:08.470 --> 00:03:08.480 align:start position:0%
 
 

00:03:08.480 --> 00:03:10.949 align:start position:0%
 
we'll<00:03:08.720><c> follow</c><00:03:09.200><c> a</c><00:03:09.360><c> similar</c><00:03:09.840><c> process</c><00:03:10.400><c> here</c><00:03:10.800><c> as</c>

00:03:10.949 --> 00:03:10.959 align:start position:0%
we'll follow a similar process here as
 

00:03:10.959 --> 00:03:11.750 align:start position:0%
we'll follow a similar process here as
we<00:03:11.120><c> did</c>

00:03:11.750 --> 00:03:11.760 align:start position:0%
we did
 

00:03:11.760 --> 00:03:14.470 align:start position:0%
we did
for<00:03:12.080><c> finding</c><00:03:12.640><c> the</c><00:03:13.040><c> digit</c><00:03:13.599><c> in</c><00:03:13.680><c> the</c><00:03:13.920><c> hundreds</c>

00:03:14.470 --> 00:03:14.480 align:start position:0%
for finding the digit in the hundreds
 

00:03:14.480 --> 00:03:15.110 align:start position:0%
for finding the digit in the hundreds
place

00:03:15.110 --> 00:03:15.120 align:start position:0%
place
 

00:03:15.120 --> 00:03:17.750 align:start position:0%
place
however<00:03:15.840><c> this</c><00:03:16.159><c> time</c><00:03:16.480><c> we</c><00:03:16.640><c> need</c><00:03:16.879><c> the</c><00:03:17.040><c> remainder</c>

00:03:17.750 --> 00:03:17.760 align:start position:0%
however this time we need the remainder
 

00:03:17.760 --> 00:03:18.869 align:start position:0%
however this time we need the remainder
of<00:03:18.000><c> dividing</c>

00:03:18.869 --> 00:03:18.879 align:start position:0%
of dividing
 

00:03:18.879 --> 00:03:25.030 align:start position:0%
of dividing
the<00:03:19.120><c> original</c><00:03:19.599><c> number</c><00:03:20.159><c> by</c><00:03:20.480><c> 100</c>

00:03:25.030 --> 00:03:25.040 align:start position:0%
 
 

00:03:25.040 --> 00:03:27.110 align:start position:0%
 
and<00:03:25.200><c> we</c><00:03:25.440><c> expect</c><00:03:25.840><c> that</c><00:03:26.000><c> the</c><00:03:26.239><c> return</c><00:03:26.720><c> of</c><00:03:26.879><c> this</c>

00:03:27.110 --> 00:03:27.120 align:start position:0%
and we expect that the return of this
 

00:03:27.120 --> 00:03:29.509 align:start position:0%
and we expect that the return of this
operation<00:03:27.760><c> will</c><00:03:28.000><c> be</c><00:03:28.239><c> 36</c>

00:03:29.509 --> 00:03:29.519 align:start position:0%
operation will be 36
 

00:03:29.519 --> 00:03:31.990 align:start position:0%
operation will be 36
so<00:03:29.760><c> we'll</c><00:03:30.000><c> use</c><00:03:30.319><c> integer</c><00:03:30.799><c> division</c><00:03:31.280><c> to</c><00:03:31.519><c> divide</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
so we'll use integer division to divide
 

00:03:32.000 --> 00:03:36.390 align:start position:0%
so we'll use integer division to divide
that<00:03:32.159><c> by</c><00:03:32.480><c> 10</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
 
 

00:03:36.400 --> 00:03:38.550 align:start position:0%
 
and<00:03:36.560><c> now</c><00:03:36.799><c> we</c><00:03:37.120><c> expect</c><00:03:37.760><c> that</c><00:03:38.000><c> the</c><00:03:38.159><c> local</c>

00:03:38.550 --> 00:03:38.560 align:start position:0%
and now we expect that the local
 

00:03:38.560 --> 00:03:40.390 align:start position:0%
and now we expect that the local
variable<00:03:39.200><c> tens</c>

00:03:40.390 --> 00:03:40.400 align:start position:0%
variable tens
 

00:03:40.400 --> 00:03:45.670 align:start position:0%
variable tens
references<00:03:41.200><c> three</c>

00:03:45.670 --> 00:03:45.680 align:start position:0%
 
 

00:03:45.680 --> 00:03:50.869 align:start position:0%
 
and<00:03:45.920><c> it</c><00:03:46.000><c> does</c>

00:03:50.869 --> 00:03:50.879 align:start position:0%
 
 

00:03:50.879 --> 00:03:53.589 align:start position:0%
 
so<00:03:51.040><c> we're</c><00:03:51.280><c> almost</c><00:03:51.680><c> finished</c><00:03:52.720><c> our</c><00:03:52.959><c> last</c><00:03:53.200><c> step</c>

00:03:53.589 --> 00:03:53.599 align:start position:0%
so we're almost finished our last step
 

00:03:53.599 --> 00:03:56.070 align:start position:0%
so we're almost finished our last step
is<00:03:53.760><c> to</c><00:03:54.000><c> isolate</c><00:03:54.560><c> the</c><00:03:54.799><c> digit</c><00:03:55.200><c> in</c><00:03:55.360><c> the</c><00:03:55.599><c> ones</c>

00:03:56.070 --> 00:03:56.080 align:start position:0%
is to isolate the digit in the ones
 

00:03:56.080 --> 00:03:57.990 align:start position:0%
is to isolate the digit in the ones
place

00:03:57.990 --> 00:03:58.000 align:start position:0%
place
 

00:03:58.000 --> 00:04:00.550 align:start position:0%
place
and<00:03:58.239><c> again</c><00:03:58.560><c> this</c><00:03:58.720><c> will</c><00:03:58.879><c> be</c><00:03:59.120><c> very</c><00:03:59.439><c> similar</c><00:04:00.000><c> to</c>

00:04:00.550 --> 00:04:00.560 align:start position:0%
and again this will be very similar to
 

00:04:00.560 --> 00:04:02.789 align:start position:0%
and again this will be very similar to
what<00:04:00.799><c> we</c><00:04:00.959><c> just</c><00:04:01.120><c> did</c><00:04:01.360><c> to</c><00:04:01.599><c> isolate</c><00:04:02.239><c> the</c><00:04:02.480><c> three</c>

00:04:02.789 --> 00:04:02.799 align:start position:0%
what we just did to isolate the three
 

00:04:02.799 --> 00:04:05.350 align:start position:0%
what we just did to isolate the three
from<00:04:02.959><c> the</c><00:04:03.200><c> tens</c><00:04:03.599><c> place</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
from the tens place
 

00:04:05.360 --> 00:04:07.670 align:start position:0%
from the tens place
this<00:04:05.599><c> time</c><00:04:06.080><c> we</c><00:04:06.239><c> need</c><00:04:06.400><c> the</c><00:04:06.640><c> remainder</c><00:04:07.360><c> of</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
this time we need the remainder of
 

00:04:07.680 --> 00:04:10.630 align:start position:0%
this time we need the remainder of
dividing<00:04:08.239><c> our</c><00:04:08.480><c> original</c><00:04:09.040><c> four</c><00:04:09.280><c> digit</c><00:04:09.680><c> number</c>

00:04:10.630 --> 00:04:10.640 align:start position:0%
dividing our original four digit number
 

00:04:10.640 --> 00:04:13.830 align:start position:0%
dividing our original four digit number
by<00:04:10.959><c> ten</c><00:04:12.560><c> we</c><00:04:12.799><c> expect</c><00:04:13.200><c> that</c><00:04:13.519><c> this</c>

00:04:13.830 --> 00:04:13.840 align:start position:0%
by ten we expect that this
 

00:04:13.840 --> 00:04:16.710 align:start position:0%
by ten we expect that this
operation<00:04:14.480><c> alone</c><00:04:14.959><c> will</c><00:04:15.200><c> return</c><00:04:15.840><c> the</c><00:04:16.400><c> last</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
operation alone will return the last
 

00:04:16.720 --> 00:04:18.150 align:start position:0%
operation alone will return the last
digit<00:04:17.040><c> in</c><00:04:17.120><c> the</c><00:04:17.359><c> number</c>

00:04:18.150 --> 00:04:18.160 align:start position:0%
digit in the number
 

00:04:18.160 --> 00:04:20.949 align:start position:0%
digit in the number
six<00:04:19.199><c> and</c><00:04:19.359><c> therefore</c><00:04:20.079><c> we</c><00:04:20.320><c> don't</c><00:04:20.560><c> need</c><00:04:20.720><c> to</c>

00:04:20.949 --> 00:04:20.959 align:start position:0%
six and therefore we don't need to
 

00:04:20.959 --> 00:04:21.590 align:start position:0%
six and therefore we don't need to
perform

00:04:21.590 --> 00:04:21.600 align:start position:0%
perform
 

00:04:21.600 --> 00:04:23.909 align:start position:0%
perform
any<00:04:21.919><c> additional</c><00:04:22.479><c> integer</c><00:04:22.960><c> division</c><00:04:23.600><c> like</c><00:04:23.759><c> we</c>

00:04:23.909 --> 00:04:23.919 align:start position:0%
any additional integer division like we
 

00:04:23.919 --> 00:04:37.670 align:start position:0%
any additional integer division like we
did<00:04:24.160><c> for</c><00:04:24.320><c> the</c><00:04:24.479><c> previous</c><00:04:26.840><c> steps</c>

00:04:37.670 --> 00:04:37.680 align:start position:0%
 
 

00:04:37.680 --> 00:04:39.990 align:start position:0%
 
we<00:04:37.919><c> run</c><00:04:38.160><c> our</c><00:04:38.320><c> file</c><00:04:38.880><c> and</c><00:04:39.120><c> we</c><00:04:39.280><c> see</c><00:04:39.520><c> that</c><00:04:39.680><c> we've</c>

00:04:39.990 --> 00:04:40.000 align:start position:0%
we run our file and we see that we've
 

00:04:40.000 --> 00:04:40.870 align:start position:0%
we run our file and we see that we've
successfully

00:04:40.870 --> 00:04:40.880 align:start position:0%
successfully
 

00:04:40.880 --> 00:04:43.430 align:start position:0%
successfully
isolated<00:04:41.600><c> 6</c><00:04:42.080><c> as</c><00:04:42.240><c> the</c><00:04:42.400><c> digit</c><00:04:42.800><c> in</c><00:04:42.880><c> the</c><00:04:43.040><c> ones</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
isolated 6 as the digit in the ones
 

00:04:43.440 --> 00:04:47.590 align:start position:0%
isolated 6 as the digit in the ones
place

00:04:47.590 --> 00:04:47.600 align:start position:0%
 
 

00:04:47.600 --> 00:04:50.790 align:start position:0%
 
integer<00:04:48.080><c> division</c><00:04:48.880><c> and</c><00:04:49.120><c> the</c><00:04:49.360><c> modulo</c><00:04:49.919><c> operator</c>

00:04:50.790 --> 00:04:50.800 align:start position:0%
integer division and the modulo operator
 

00:04:50.800 --> 00:04:54.830 align:start position:0%
integer division and the modulo operator
are<00:04:51.120><c> important</c><00:04:51.680><c> tools</c><00:04:52.160><c> for</c><00:04:52.479><c> working</c><00:04:52.800><c> with</c>

00:04:54.830 --> 00:04:54.840 align:start position:0%
are important tools for working with
 

00:04:54.840 --> 00:04:59.030 align:start position:0%
are important tools for working with
integers

00:04:59.030 --> 00:04:59.040 align:start position:0%
 
 

00:04:59.040 --> 00:05:01.120 align:start position:0%
 
you

