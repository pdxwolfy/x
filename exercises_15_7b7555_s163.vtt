WEBVTT
Kind: captions
Language: en

00:00:03.360 --> 00:00:05.349 align:start position:0%
 
we're<00:00:03.600><c> going</c><00:00:03.760><c> to</c><00:00:04.000><c> use</c><00:00:04.240><c> ruby's</c><00:00:04.799><c> delete</c>

00:00:05.349 --> 00:00:05.359 align:start position:0%
we're going to use ruby's delete
 

00:00:05.359 --> 00:00:08.549 align:start position:0%
we're going to use ruby's delete
if<00:00:05.680><c> method</c><00:00:06.560><c> and</c><00:00:06.960><c> the</c><00:00:07.120><c> string</c><00:00:07.520><c> method</c><00:00:08.240><c> start</c>

00:00:08.549 --> 00:00:08.559 align:start position:0%
if method and the string method start
 

00:00:08.559 --> 00:00:09.350 align:start position:0%
if method and the string method start
with

00:00:09.350 --> 00:00:09.360 align:start position:0%
with
 

00:00:09.360 --> 00:00:11.430 align:start position:0%
with
to<00:00:09.519><c> delete</c><00:00:10.080><c> all</c><00:00:10.240><c> of</c><00:00:10.400><c> the</c><00:00:10.559><c> words</c><00:00:10.960><c> from</c><00:00:11.120><c> this</c>

00:00:11.430 --> 00:00:11.440 align:start position:0%
to delete all of the words from this
 

00:00:11.440 --> 00:00:12.470 align:start position:0%
to delete all of the words from this
given<00:00:11.840><c> array</c>

00:00:12.470 --> 00:00:12.480 align:start position:0%
given array
 

00:00:12.480 --> 00:00:14.870 align:start position:0%
given array
that<00:00:12.719><c> begin</c><00:00:13.120><c> with</c><00:00:13.360><c> s</c><00:00:14.160><c> and</c><00:00:14.320><c> now</c><00:00:14.480><c> would</c><00:00:14.639><c> be</c><00:00:14.799><c> a</c>

00:00:14.870 --> 00:00:14.880 align:start position:0%
that begin with s and now would be a
 

00:00:14.880 --> 00:00:16.950 align:start position:0%
that begin with s and now would be a
good<00:00:15.120><c> time</c><00:00:15.360><c> for</c><00:00:15.519><c> you</c><00:00:15.759><c> to</c><00:00:16.000><c> take</c><00:00:16.240><c> a</c><00:00:16.320><c> look</c><00:00:16.560><c> at</c><00:00:16.720><c> the</c>

00:00:16.950 --> 00:00:16.960 align:start position:0%
good time for you to take a look at the
 

00:00:16.960 --> 00:00:19.750 align:start position:0%
good time for you to take a look at the
documentation<00:00:17.920><c> for</c><00:00:18.160><c> the</c><00:00:18.320><c> delete</c><00:00:18.800><c> if</c><00:00:19.119><c> method</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
documentation for the delete if method
 

00:00:19.760 --> 00:00:21.990 align:start position:0%
documentation for the delete if method
and<00:00:20.000><c> the</c><00:00:20.160><c> startwith</c><00:00:20.800><c> method</c><00:00:21.439><c> if</c><00:00:21.600><c> you're</c><00:00:21.840><c> not</c>

00:00:21.990 --> 00:00:22.000 align:start position:0%
and the startwith method if you're not
 

00:00:22.000 --> 00:00:23.670 align:start position:0%
and the startwith method if you're not
familiar<00:00:22.480><c> with</c><00:00:22.720><c> these</c>

00:00:23.670 --> 00:00:23.680 align:start position:0%
familiar with these
 

00:00:23.680 --> 00:00:25.910 align:start position:0%
familiar with these
the<00:00:23.840><c> ruby</c><00:00:24.160><c> documentation</c><00:00:25.039><c> tells</c><00:00:25.359><c> us</c><00:00:25.519><c> that</c>

00:00:25.910 --> 00:00:25.920 align:start position:0%
the ruby documentation tells us that
 

00:00:25.920 --> 00:00:27.109 align:start position:0%
the ruby documentation tells us that
deleteif

00:00:27.109 --> 00:00:27.119 align:start position:0%
deleteif
 

00:00:27.119 --> 00:00:29.589 align:start position:0%
deleteif
will<00:00:27.439><c> delete</c><00:00:28.000><c> every</c><00:00:28.400><c> element</c><00:00:28.960><c> of</c><00:00:29.119><c> the</c><00:00:29.279><c> calling</c>

00:00:29.589 --> 00:00:29.599 align:start position:0%
will delete every element of the calling
 

00:00:29.599 --> 00:00:30.150 align:start position:0%
will delete every element of the calling
array

00:00:30.150 --> 00:00:30.160 align:start position:0%
array
 

00:00:30.160 --> 00:00:35.750 align:start position:0%
array
for<00:00:30.400><c> which</c><00:00:30.640><c> the</c><00:00:30.800><c> block</c><00:00:31.199><c> evaluates</c><00:00:32.000><c> to</c><00:00:32.239><c> true</c>

00:00:35.750 --> 00:00:35.760 align:start position:0%
 
 

00:00:35.760 --> 00:00:39.830 align:start position:0%
 
so<00:00:36.000><c> we'll</c><00:00:36.320><c> invoke</c><00:00:36.719><c> delete</c><00:00:37.200><c> if</c><00:00:37.440><c> on</c><00:00:37.680><c> our</c><00:00:37.840><c> array</c>

00:00:39.830 --> 00:00:39.840 align:start position:0%
so we'll invoke delete if on our array
 

00:00:39.840 --> 00:00:42.229 align:start position:0%
so we'll invoke delete if on our array
and<00:00:40.079><c> each</c><00:00:40.399><c> element</c><00:00:40.960><c> is</c><00:00:41.120><c> going</c><00:00:41.360><c> to</c><00:00:41.600><c> be</c><00:00:41.920><c> passed</c>

00:00:42.229 --> 00:00:42.239 align:start position:0%
and each element is going to be passed
 

00:00:42.239 --> 00:00:44.630 align:start position:0%
and each element is going to be passed
to<00:00:42.399><c> the</c><00:00:42.840><c> block</c>

00:00:44.630 --> 00:00:44.640 align:start position:0%
to the block
 

00:00:44.640 --> 00:00:47.190 align:start position:0%
to the block
let's<00:00:44.879><c> name</c><00:00:45.120><c> this</c><00:00:45.280><c> parameter</c><00:00:45.920><c> word</c><00:00:46.879><c> and</c><00:00:47.039><c> we</c>

00:00:47.190 --> 00:00:47.200 align:start position:0%
let's name this parameter word and we
 

00:00:47.200 --> 00:00:48.310 align:start position:0%
let's name this parameter word and we
know<00:00:47.360><c> we</c><00:00:47.520><c> want</c><00:00:47.840><c> to</c>

00:00:48.310 --> 00:00:48.320 align:start position:0%
know we want to
 

00:00:48.320 --> 00:00:51.350 align:start position:0%
know we want to
remove<00:00:48.800><c> the</c><00:00:48.960><c> element</c><00:00:49.440><c> from</c><00:00:49.680><c> the</c><00:00:49.840><c> array</c><00:00:50.960><c> if</c><00:00:51.199><c> the</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
remove the element from the array if the
 

00:00:51.360 --> 00:00:52.310 align:start position:0%
remove the element from the array if the
word<00:00:51.680><c> begins</c><00:00:52.000><c> with</c>

00:00:52.310 --> 00:00:52.320 align:start position:0%
word begins with
 

00:00:52.320 --> 00:00:56.069 align:start position:0%
word begins with
s<00:00:54.399><c> we</c><00:00:54.559><c> can</c><00:00:54.800><c> invoke</c><00:00:55.199><c> the</c><00:00:55.440><c> string</c>

00:00:56.069 --> 00:00:56.079 align:start position:0%
s we can invoke the string
 

00:00:56.079 --> 00:00:59.270 align:start position:0%
s we can invoke the string
start<00:00:56.480><c> with</c><00:00:56.840><c> method</c>

00:00:59.270 --> 00:00:59.280 align:start position:0%
start with method
 

00:00:59.280 --> 00:01:01.430 align:start position:0%
start with method
and<00:00:59.440><c> check</c><00:00:59.680><c> whether</c><00:01:00.000><c> the</c><00:01:00.160><c> string</c><00:01:00.559><c> starts</c><00:01:00.879><c> with</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
and check whether the string starts with
 

00:01:01.440 --> 00:01:02.549 align:start position:0%
and check whether the string starts with
s

00:01:02.549 --> 00:01:02.559 align:start position:0%
s
 

00:01:02.559 --> 00:01:04.390 align:start position:0%
s
now<00:01:02.719><c> the</c><00:01:02.879><c> startwith</c><00:01:03.440><c> method</c><00:01:03.920><c> is</c><00:01:04.000><c> going</c><00:01:04.239><c> to</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
now the startwith method is going to
 

00:01:04.400 --> 00:01:06.550 align:start position:0%
now the startwith method is going to
return<00:01:04.799><c> a</c><00:01:04.879><c> boolean</c><00:01:05.519><c> either</c><00:01:05.840><c> true</c><00:01:06.240><c> or</c>

00:01:06.550 --> 00:01:06.560 align:start position:0%
return a boolean either true or
 

00:01:06.560 --> 00:01:09.270 align:start position:0%
return a boolean either true or
false<00:01:07.520><c> so</c><00:01:07.680><c> for</c><00:01:07.920><c> every</c><00:01:08.320><c> word</c><00:01:08.720><c> for</c><00:01:08.880><c> which</c><00:01:09.119><c> the</c>

00:01:09.270 --> 00:01:09.280 align:start position:0%
false so for every word for which the
 

00:01:09.280 --> 00:01:11.350 align:start position:0%
false so for every word for which the
block<00:01:09.680><c> returns</c><00:01:10.320><c> true</c>

00:01:11.350 --> 00:01:11.360 align:start position:0%
block returns true
 

00:01:11.360 --> 00:01:15.030 align:start position:0%
block returns true
it<00:01:11.520><c> will</c><00:01:11.680><c> be</c><00:01:11.840><c> removed</c><00:01:12.240><c> from</c><00:01:12.400><c> the</c><00:01:12.640><c> array</c>

00:01:15.030 --> 00:01:15.040 align:start position:0%
it will be removed from the array
 

00:01:15.040 --> 00:01:17.749 align:start position:0%
it will be removed from the array
so<00:01:15.360><c> let's</c><00:01:15.680><c> output</c><00:01:16.080><c> the</c><00:01:16.240><c> array</c><00:01:16.560><c> on</c><00:01:16.720><c> line</c><00:01:17.040><c> five</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
so let's output the array on line five
 

00:01:17.759 --> 00:01:18.149 align:start position:0%
so let's output the array on line five
and

00:01:18.149 --> 00:01:18.159 align:start position:0%
and
 

00:01:18.159 --> 00:01:20.710 align:start position:0%
and
now<00:01:18.400><c> we</c><00:01:18.640><c> expect</c><00:01:19.040><c> to</c><00:01:19.200><c> see</c><00:01:19.840><c> only</c><00:01:20.080><c> the</c><00:01:20.240><c> words</c><00:01:20.560><c> that</c>

00:01:20.710 --> 00:01:20.720 align:start position:0%
now we expect to see only the words that
 

00:01:20.720 --> 00:01:22.070 align:start position:0%
now we expect to see only the words that
did<00:01:20.880><c> not</c><00:01:21.119><c> begin</c><00:01:21.360><c> with</c><00:01:21.680><c> s</c>

00:01:22.070 --> 00:01:22.080 align:start position:0%
did not begin with s
 

00:01:22.080 --> 00:01:26.390 align:start position:0%
did not begin with s
in<00:01:22.240><c> our</c><00:01:24.840><c> array</c>

00:01:26.390 --> 00:01:26.400 align:start position:0%
in our array
 

00:01:26.400 --> 00:01:31.030 align:start position:0%
in our array
and<00:01:26.479><c> that's</c><00:01:26.720><c> what</c><00:01:26.880><c> we</c><00:01:27.040><c> see</c>

00:01:31.030 --> 00:01:31.040 align:start position:0%
 
 

00:01:31.040 --> 00:01:33.190 align:start position:0%
 
now<00:01:31.280><c> the</c><00:01:31.439><c> second</c><00:01:31.840><c> part</c><00:01:32.079><c> of</c><00:01:32.159><c> this</c><00:01:32.400><c> problem</c><00:01:32.960><c> says</c>

00:01:33.190 --> 00:01:33.200 align:start position:0%
now the second part of this problem says
 

00:01:33.200 --> 00:01:35.429 align:start position:0%
now the second part of this problem says
to<00:01:33.360><c> get</c><00:01:33.600><c> rid</c><00:01:33.759><c> of</c><00:01:34.000><c> all</c><00:01:34.159><c> words</c><00:01:34.560><c> that</c><00:01:34.799><c> start</c><00:01:35.040><c> with</c>

00:01:35.429 --> 00:01:35.439 align:start position:0%
to get rid of all words that start with
 

00:01:35.439 --> 00:01:38.550 align:start position:0%
to get rid of all words that start with
s<00:01:35.840><c> or</c><00:01:36.159><c> w</c><00:01:38.159><c> so</c>

00:01:38.550 --> 00:01:38.560 align:start position:0%
s or w so
 

00:01:38.560 --> 00:01:40.469 align:start position:0%
s or w so
we<00:01:38.720><c> can</c><00:01:38.960><c> change</c><00:01:39.280><c> the</c><00:01:39.360><c> way</c><00:01:39.520><c> we</c><00:01:39.680><c> write</c><00:01:39.920><c> our</c><00:01:40.079><c> block</c>

00:01:40.469 --> 00:01:40.479 align:start position:0%
we can change the way we write our block
 

00:01:40.479 --> 00:01:44.469 align:start position:0%
we can change the way we write our block
on<00:01:40.640><c> line</c><00:01:41.040><c> three</c>

00:01:44.469 --> 00:01:44.479 align:start position:0%
 
 

00:01:44.479 --> 00:01:49.990 align:start position:0%
 
and<00:01:44.640><c> use</c><00:01:44.799><c> a</c><00:01:44.960><c> logical</c><00:01:45.439><c> operator</c><00:01:46.079><c> here</c>

00:01:49.990 --> 00:01:50.000 align:start position:0%
 
 

00:01:50.000 --> 00:01:54.310 align:start position:0%
 
word<00:01:50.479><c> start</c><00:01:50.799><c> with</c><00:01:51.119><c> s</c><00:01:51.520><c> or</c><00:01:51.840><c> word</c><00:01:52.159><c> start</c><00:01:52.479><c> with</c><00:01:52.840><c> w</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
word start with s or word start with w
 

00:01:54.320 --> 00:01:56.310 align:start position:0%
word start with s or word start with w
we<00:01:54.560><c> expect</c><00:01:54.960><c> that</c><00:01:55.119><c> in</c><00:01:55.360><c> our</c><00:01:55.520><c> array</c><00:01:56.000><c> after</c>

00:01:56.310 --> 00:01:56.320 align:start position:0%
we expect that in our array after
 

00:01:56.320 --> 00:01:58.550 align:start position:0%
we expect that in our array after
running<00:01:56.640><c> this</c><00:01:56.880><c> code</c><00:01:57.280><c> ice</c><00:01:57.680><c> will</c><00:01:57.840><c> be</c><00:01:58.000><c> the</c><00:01:58.240><c> only</c>

00:01:58.550 --> 00:01:58.560 align:start position:0%
running this code ice will be the only
 

00:01:58.560 --> 00:02:00.149 align:start position:0%
running this code ice will be the only
word<00:01:58.880><c> left</c>

00:02:00.149 --> 00:02:00.159 align:start position:0%
word left
 

00:02:00.159 --> 00:02:07.990 align:start position:0%
word left
and<00:02:00.399><c> let's</c><00:02:00.640><c> run</c><00:02:00.880><c> our</c><00:02:00.960><c> code</c><00:02:01.200><c> to</c><00:02:01.360><c> see</c><00:02:06.840><c> that</c>

00:02:07.990 --> 00:02:08.000 align:start position:0%
and let's run our code to see that
 

00:02:08.000 --> 00:02:11.110 align:start position:0%
and let's run our code to see that
however<00:02:08.479><c> there's</c><00:02:08.720><c> an</c><00:02:08.959><c> easier</c><00:02:09.440><c> way</c><00:02:09.759><c> here</c><00:02:10.239><c> and</c>

00:02:11.110 --> 00:02:11.120 align:start position:0%
however there's an easier way here and
 

00:02:11.120 --> 00:02:13.589 align:start position:0%
however there's an easier way here and
taking<00:02:11.520><c> a</c><00:02:11.680><c> close</c><00:02:12.080><c> look</c><00:02:12.400><c> at</c><00:02:12.560><c> the</c><00:02:12.720><c> documentation</c>

00:02:13.589 --> 00:02:13.599 align:start position:0%
taking a close look at the documentation
 

00:02:13.599 --> 00:02:15.830 align:start position:0%
taking a close look at the documentation
for<00:02:13.840><c> the</c><00:02:14.080><c> start</c><00:02:14.400><c> with</c><00:02:14.720><c> method</c>

00:02:15.830 --> 00:02:15.840 align:start position:0%
for the start with method
 

00:02:15.840 --> 00:02:17.670 align:start position:0%
for the start with method
will<00:02:16.080><c> tell</c><00:02:16.239><c> you</c><00:02:16.400><c> that</c><00:02:16.640><c> you</c><00:02:16.800><c> can</c><00:02:17.040><c> pass</c><00:02:17.280><c> in</c>

00:02:17.670 --> 00:02:17.680 align:start position:0%
will tell you that you can pass in
 

00:02:17.680 --> 00:02:20.589 align:start position:0%
will tell you that you can pass in
multiple<00:02:18.239><c> prefixes</c><00:02:19.120><c> as</c><00:02:19.360><c> an</c><00:02:19.520><c> argument</c><00:02:20.000><c> to</c><00:02:20.160><c> this</c>

00:02:20.589 --> 00:02:20.599 align:start position:0%
multiple prefixes as an argument to this
 

00:02:20.599 --> 00:02:21.750 align:start position:0%
multiple prefixes as an argument to this
method

00:02:21.750 --> 00:02:21.760 align:start position:0%
method
 

00:02:21.760 --> 00:02:29.910 align:start position:0%
method
so<00:02:22.000><c> we</c><00:02:22.160><c> can</c><00:02:22.400><c> pass</c><00:02:22.720><c> in</c><00:02:22.959><c> s</c><00:02:23.840><c> and</c><00:02:24.080><c> also</c><00:02:24.480><c> pass</c><00:02:24.800><c> in</c><00:02:25.040><c> w</c>

00:02:29.910 --> 00:02:29.920 align:start position:0%
 
 

00:02:29.920 --> 00:02:32.309 align:start position:0%
 
and<00:02:30.160><c> our</c><00:02:30.319><c> program</c><00:02:30.640><c> works</c><00:02:30.959><c> as</c><00:02:31.200><c> expected</c><00:02:32.160><c> all</c>

00:02:32.309 --> 00:02:32.319 align:start position:0%
and our program works as expected all
 

00:02:32.319 --> 00:02:33.990 align:start position:0%
and our program works as expected all
the<00:02:32.480><c> words</c><00:02:32.879><c> beginning</c><00:02:33.360><c> with</c>

00:02:33.990 --> 00:02:34.000 align:start position:0%
the words beginning with
 

00:02:34.000 --> 00:02:45.680 align:start position:0%
the words beginning with
s<00:02:34.400><c> or</c><00:02:34.560><c> w</c><00:02:35.120><c> were</c><00:02:35.360><c> removed</c><00:02:35.840><c> from</c><00:02:36.000><c> our</c><00:02:42.680><c> array</c>

